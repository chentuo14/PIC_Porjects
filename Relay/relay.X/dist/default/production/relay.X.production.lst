

HI-TECH Software PIC PRO Macro Assembler V9.83 build 10920 
                                                                                               Thu Nov 16 13:55:25 2017

HI-TECH Software Omniscient Code Generator (PRO mode) build 10920
     1                           	processor	16F88
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	config,global,class=CONFIG,delta=2
     5                           	psect	text236,local,class=CODE,delta=2
     6                           	psect	cinit,global,class=CODE,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,delta=2
    11                           	psect	text237,local,class=CODE,delta=2
    12                           	psect	text239,local,class=CODE,delta=2
    13                           	psect	text240,local,class=CODE,delta=2
    14                           	psect	text241,local,class=CODE,delta=2
    15                           	psect	text242,local,class=CODE,delta=2
    16                           	psect	text243,local,class=CODE,delta=2
    17                           	psect	text244,local,class=CODE,delta=2
    18                           	psect	text245,local,class=CODE,delta=2
    19                           	psect	intentry,global,class=CODE,delta=2
    20                           	psect	text248,local,class=CODE,delta=2
    21                           	psect	pa_nodes,global,class=CODE,delta=2
    22                           	dabs	1,0x7E,2
    23  000A                     	;#
    24                           
    25                           	psect	config
    26  2007  FF29               	dw	65321	;#
    27  2008  FFFE               	dw	65534	;#
    28                           
    29                           	psect	text236
    30  0000                     __ptext236:	
    31  001F                     _ADCON0	set	31
    32  0005                     _PORTA	set	5
    33  0005                     _PORTAbits	set	5
    34  0006                     _PORTB	set	6
    35  0006                     _PORTBbits	set	6
    36  001A                     _RCREG	set	26
    37  0018                     _RCSTA	set	24
    38  0001                     _TMR0	set	1
    39  0019                     _TXREG	set	25
    40  005F                     _GIE	set	95
    41  005E                     _PEIE	set	94
    42  0065                     _RCIF	set	101
    43  005D                     _TMR0IE	set	93
    44  005A                     _TMR0IF	set	90
    45  0064                     _TXIF	set	100
    46  009F                     _ADCON1	set	159
    47  009B                     _ANSEL	set	155
    48  0081                     _OPTION_REG	set	129
    49  0099                     _SPBRG	set	153
    50  0085                     _TRISA	set	133
    51  0086                     _TRISB	set	134
    52  0098                     _TXSTA	set	152
    53  0465                     _RCIE	set	1125
    54                           
    55                           	psect	cinit
    56  00F7                     start_initialization:	
    57                           
    58                           ; Clear objects allocated to COMMON
    59  00F7  01F0               	clrf	__pbssCOMMON& (0+127)
    60  00F8  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
    61  00F9  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
    62  00FA  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
    63  00FB  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
    64                           
    65                           ; Clear objects allocated to BANK0
    66  00FC  01A0               	clrf	__pbssBANK0& (0+127)
    67  00FD  01A1               	clrf	(__pbssBANK0+1)& (0+127)
    68  00FE  01A2               	clrf	(__pbssBANK0+2)& (0+127)
    69  00FF  01A3               	clrf	(__pbssBANK0+3)& (0+127)
    70  0100  01A4               	clrf	(__pbssBANK0+4)& (0+127)
    71  0101  01A5               	clrf	(__pbssBANK0+5)& (0+127)
    72  0102  01A6               	clrf	(__pbssBANK0+6)& (0+127)
    73  0103                     end_of_initialization:	
    74                           ;End of C runtime variable initialization code
    75                           
    76  0103  0183               	clrf	3
    77  0104  118A  28C0         	ljmp	_main	;jump to C main() function
    78                           
    79                           	psect	bssCOMMON
    80  0070                     __pbssCOMMON:	
    81  0070                     _relayStruct:	
    82  0070                     	ds	5
    83                           
    84                           	psect	bssBANK0
    85  0020                     __pbssBANK0:	
    86  0020                     _relayFlag:	
    87  0020                     	ds	7
    88                           
    89                           	psect	cstackCOMMON
    90  0075                     __pcstackCOMMON:	
    91  0075                     ?_InitPort:	
    92  0075                     ?_InitUsart:	
    93                           ; 0 bytes @ 0x0
    94                           
    95  0075                     ?_InitTim0:	
    96                           ; 0 bytes @ 0x0
    97                           
    98  0075                     ?_SetInterrupt:	
    99                           ; 0 bytes @ 0x0
   100                           
   101  0075                     ?_HandleData:	
   102                           ; 0 bytes @ 0x0
   103                           
   104  0075                     ?_ReturnToServer:	
   105                           ; 0 bytes @ 0x0
   106                           
   107  0075                     ?_ClearRecvStruct:	
   108                           ; 0 bytes @ 0x0
   109                           
   110  0075                     ?_putch:	
   111                           ; 0 bytes @ 0x0
   112                           
   113  0075                     ?_usart:	
   114                           ; 0 bytes @ 0x0
   115                           
   116  0075                     ?i1_putch:	
   117                           ; 0 bytes @ 0x0
   118                           
   119  0075                     ??i1_putch:	
   120                           ; 0 bytes @ 0x0
   121                           
   122  0075                     ?i1_ClearRecvStruct:	
   123                           ; 0 bytes @ 0x0
   124                           
   125  0075                     ??i1_ClearRecvStruct:	
   126                           ; 0 bytes @ 0x0
   127                           
   128  0075                     ?_main:	
   129                           ; 0 bytes @ 0x0
   130                           
   131  0075                     i1putch@byte:	
   132                           ; 2 bytes @ 0x0
   133                           
   134                           
   135                           ; 1 bytes @ 0x0
   136  0075                     	ds	1
   137  0076                     ??_usart:	
   138                           
   139                           ; 0 bytes @ 0x1
   140  0076                     	ds	2
   141  0078                     usart@temp:	
   142                           
   143                           ; 1 bytes @ 0x3
   144  0078                     	ds	1
   145  0079                     ??_InitPort:	
   146  0079                     ??_InitUsart:	
   147                           ; 0 bytes @ 0x4
   148                           
   149  0079                     ??_InitTim0:	
   150                           ; 0 bytes @ 0x4
   151                           
   152  0079                     ??_SetInterrupt:	
   153                           ; 0 bytes @ 0x4
   154                           
   155  0079                     ??_HandleData:	
   156                           ; 0 bytes @ 0x4
   157                           
   158  0079                     ??_ClearRecvStruct:	
   159                           ; 0 bytes @ 0x4
   160                           
   161  0079                     ??_putch:	
   162                           ; 0 bytes @ 0x4
   163                           
   164  0079                     putch@byte:	
   165                           ; 0 bytes @ 0x4
   166                           
   167                           
   168                           ; 1 bytes @ 0x4
   169  0079                     	ds	1
   170  007A                     ??_ReturnToServer:	
   171  007A                     ??_main:	
   172                           ; 0 bytes @ 0x5
   173                           
   174                           
   175                           	psect	maintext
   176  00C0                     __pmaintext:	
   177                           ; 0 bytes @ 0x5
   178 ;;Data sizes: Strings 0, constant 0, data 0, bss 12, persistent 0 stack 0
   179 ;;Auto spaces:   Size  Autos    Used
   180 ;; COMMON          14      5      10
   181 ;; BANK0           80      0       7
   182 ;; BANK1           80      0       0
   183 ;; BANK3           96      0       0
   184 ;; BANK2           96      0       0
   185 ;;
   186 ;; Pointer list with targets:
   187 ;;
   188 ;; Critical Paths under _main in COMMON
   189 ;;
   190 ;;   _ReturnToServer->_putch
   191 ;;
   192 ;; Critical Paths under _usart in COMMON
   193 ;;
   194 ;;   _usart->i1_putch
   195 ;;
   196 ;; Critical Paths under _main in BANK0
   197 ;;
   198 ;;   None.
   199 ;;
   200 ;; Critical Paths under _usart in BANK0
   201 ;;
   202 ;;   None.
   203 ;;
   204 ;; Critical Paths under _main in BANK1
   205 ;;
   206 ;;   None.
   207 ;;
   208 ;; Critical Paths under _usart in BANK1
   209 ;;
   210 ;;   None.
   211 ;;
   212 ;; Critical Paths under _main in BANK3
   213 ;;
   214 ;;   None.
   215 ;;
   216 ;; Critical Paths under _usart in BANK3
   217 ;;
   218 ;;   None.
   219 ;;
   220 ;; Critical Paths under _main in BANK2
   221 ;;
   222 ;;   None.
   223 ;;
   224 ;; Critical Paths under _usart in BANK2
   225 ;;
   226 ;;   None.
   227 ;;
   228 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   229 ;;
   230 ;;
   231 ;;Call Graph Tables:
   232 ;;
   233 ;; ---------------------------------------------------------------------------------
   234 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   235 ;; ---------------------------------------------------------------------------------
   236 ;; (0) _main                                                 0     0      0      22
   237 ;;                           _InitPort
   238 ;;                          _InitUsart
   239 ;;                           _InitTim0
   240 ;;                       _SetInterrupt
   241 ;;                         _HandleData
   242 ;;                     _ReturnToServer
   243 ;;                    _ClearRecvStruct
   244 ;; ---------------------------------------------------------------------------------
   245 ;; (1) _ReturnToServer                                       0     0      0      22
   246 ;;                              _putch
   247 ;; ---------------------------------------------------------------------------------
   248 ;; (2) _putch                                                1     1      0      22
   249 ;;                                              4 COMMON     1     1      0
   250 ;; ---------------------------------------------------------------------------------
   251 ;; (1) _ClearRecvStruct                                      0     0      0       0
   252 ;; ---------------------------------------------------------------------------------
   253 ;; (1) _HandleData                                           0     0      0       0
   254 ;; ---------------------------------------------------------------------------------
   255 ;; (1) _SetInterrupt                                         0     0      0       0
   256 ;; ---------------------------------------------------------------------------------
   257 ;; (1) _InitTim0                                             0     0      0       0
   258 ;; ---------------------------------------------------------------------------------
   259 ;; (1) _InitUsart                                            0     0      0       0
   260 ;; ---------------------------------------------------------------------------------
   261 ;; (1) _InitPort                                             0     0      0       0
   262 ;; ---------------------------------------------------------------------------------
   263 ;; Estimated maximum stack depth 2
   264 ;; ---------------------------------------------------------------------------------
   265 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   266 ;; ---------------------------------------------------------------------------------
   267 ;; (3) _usart                                                3     3      0      96
   268 ;;                                              1 COMMON     3     3      0
   269 ;;                  i1_ClearRecvStruct
   270 ;;                            i1_putch
   271 ;; ---------------------------------------------------------------------------------
   272 ;; (4) i1_ClearRecvStruct                                    0     0      0       0
   273 ;; ---------------------------------------------------------------------------------
   274 ;; (4) i1_putch                                              1     1      0      73
   275 ;;                                              0 COMMON     1     1      0
   276 ;; ---------------------------------------------------------------------------------
   277 ;; Estimated maximum stack depth 4
   278 ;; ---------------------------------------------------------------------------------
   279 ;; Call Graph Graphs:
   280 ;; _main (ROOT)
   281 ;;   _InitPort
   282 ;;   _InitUsart
   283 ;;   _InitTim0
   284 ;;   _SetInterrupt
   285 ;;   _HandleData
   286 ;;   _ReturnToServer
   287 ;;     _putch
   288 ;;   _ClearRecvStruct
   289 ;;
   290 ;; _usart (ROOT)
   291 ;;   i1_ClearRecvStruct
   292 ;;   i1_putch
   293 ;;
   294 ;; Address spaces:
   295 ;;Name               Size   Autos  Total    Cost      Usage
   296 ;;BITCOMMON            E      0       0       0        0.0%
   297 ;;EEDATA             100      0       0       0        0.0%
   298 ;;NULL                 0      0       0       0        0.0%
   299 ;;CODE                 0      0       0       0        0.0%
   300 ;;COMMON               E      5       A       1       71.4%
   301 ;;BITSFR0              0      0       0       1        0.0%
   302 ;;SFR0                 0      0       0       1        0.0%
   303 ;;BITSFR1              0      0       0       2        0.0%
   304 ;;SFR1                 0      0       0       2        0.0%
   305 ;;STACK                0      0       6       2        0.0%
   306 ;;ABS                  0      0      11       3        0.0%
   307 ;;BITBANK0            50      0       0       4        0.0%
   308 ;;BITSFR3              0      0       0       4        0.0%
   309 ;;SFR3                 0      0       0       4        0.0%
   310 ;;BANK0               50      0       7       5        8.8%
   311 ;;BITSFR2              0      0       0       5        0.0%
   312 ;;SFR2                 0      0       0       5        0.0%
   313 ;;BITBANK1            50      0       0       6        0.0%
   314 ;;BANK1               50      0       0       7        0.0%
   315 ;;BITBANK3            60      0       0       8        0.0%
   316 ;;BANK3               60      0       0       9        0.0%
   317 ;;BITBANK2            60      0       0      10        0.0%
   318 ;;BANK2               60      0       0      11        0.0%
   319 ;;DATA                 0      0      17      12        0.0%
   320                           
   321                           
   322 ;; *************** function _main *****************
   323 ;; Defined at:
   324 ;;		line 27 in file "main.c"
   325 ;; Parameters:    Size  Location     Type
   326 ;;		None
   327 ;; Auto vars:     Size  Location     Type
   328 ;;		None
   329 ;; Return value:  Size  Location     Type
   330 ;;                  2  620[COMMON] int 
   331 ;; Registers used:
   332 ;;		wreg, status,2, status,0, pclath, cstack
   333 ;; Tracked objects:
   334 ;;		On entry : 17F/0
   335 ;;		On exit  : 17F/0
   336 ;;		Unchanged: FFE80/0
   337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   338 ;;      Params:         0       0       0       0       0
   339 ;;      Locals:         0       0       0       0       0
   340 ;;      Temps:          0       0       0       0       0
   341 ;;      Totals:         0       0       0       0       0
   342 ;;Total ram usage:        0 bytes
   343 ;; Hardware stack levels required when called:    4
   344 ;; This function calls:
   345 ;;		_InitPort
   346 ;;		_InitUsart
   347 ;;		_InitTim0
   348 ;;		_SetInterrupt
   349 ;;		_HandleData
   350 ;;		_ReturnToServer
   351 ;;		_ClearRecvStruct
   352 ;; This function is called by:
   353 ;;		Startup code after reset
   354 ;; This function uses a non-reentrant model
   355 ;;
   356  00C0                     _main:	
   357                           
   358                           ;main.c: 29: InitPort();
   359                           
   360                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   361  00C0  118A  2106  118A   	fcall	_InitPort
   362                           
   363                           ;main.c: 30: InitUsart();
   364  00C3  118A  2122  118A   	fcall	_InitUsart
   365                           
   366                           ;main.c: 31: PORTBbits.RB7 = 1;
   367  00C6  1283               	bcf	3,5	;RP0=0, select bank0
   368  00C7  1786               	bsf	6,7	;volatile
   369                           
   370                           ;main.c: 32: PORTBbits.RB3 = 1;
   371  00C8  1586               	bsf	6,3	;volatile
   372                           
   373                           ;main.c: 33: InitTim0();
   374  00C9  118A  212B  118A   	fcall	_InitTim0
   375                           
   376                           ;main.c: 34: SetInterrupt();
   377  00CC  118A  2133  118A   	fcall	_SetInterrupt
   378  00CF                     l621:	
   379                           ;main.c: 36: while(1)
   380                           
   381                           
   382                           ;main.c: 37: {
   383                           ;main.c: 38: if(relayFlag.rcvTerminalOk == 1) {
   384  00CF  1283               	bcf	3,5	;RP0=0, select bank0
   385  00D0  0326               	decf	_relayFlag+6,w
   386  00D1  1D03               	skipz
   387  00D2  28CF               	goto	l621
   388                           
   389                           ;main.c: 39: HandleData();
   390  00D3  118A  2095  118A   	fcall	_HandleData
   391                           
   392                           ;main.c: 40: ReturnToServer();
   393  00D6  118A  20DD  118A   	fcall	_ReturnToServer
   394                           
   395                           ;main.c: 41: ClearRecvStruct();
   396  00D9  118A  2115  118A   	fcall	_ClearRecvStruct
   397  00DC  28CF               	goto	l621
   398  00DD                     __end_of_main:	
   399                           
   400                           	psect	text237
   401  00DD                     __ptext237:	
   402 ;; =============== function _main ends ============
   403                           
   404                           
   405 ;; *************** function _ReturnToServer *****************
   406 ;; Defined at:
   407 ;;		line 67 in file "usart.c"
   408 ;; Parameters:    Size  Location     Type
   409 ;;		None
   410 ;; Auto vars:     Size  Location     Type
   411 ;;		None
   412 ;; Return value:  Size  Location     Type
   413 ;;		None               void
   414 ;; Registers used:
   415 ;;		wreg, status,2, status,0, pclath, cstack
   416 ;; Tracked objects:
   417 ;;		On entry : 17F/0
   418 ;;		On exit  : 17F/0
   419 ;;		Unchanged: FFE80/0
   420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   421 ;;      Params:         0       0       0       0       0
   422 ;;      Locals:         0       0       0       0       0
   423 ;;      Temps:          0       0       0       0       0
   424 ;;      Totals:         0       0       0       0       0
   425 ;;Total ram usage:        0 bytes
   426 ;; Hardware stack levels used:    1
   427 ;; Hardware stack levels required when called:    3
   428 ;; This function calls:
   429 ;;		_putch
   430 ;; This function is called by:
   431 ;;		_main
   432 ;; This function uses a non-reentrant model
   433 ;;
   434  00DD                     _ReturnToServer:	
   435                           
   436                           ;usart.c: 68: putch(0xF0);
   437                           
   438                           ; Regs used in _ReturnToServer: [wreg+status,2+status,0+pclath+cstack]
   439  00DD  30F0               	movlw	240
   440  00DE  20F1  118A         	fcall	_putch
   441                           
   442                           ;usart.c: 69: putch(relayStruct.relay1);
   443  00E0  0870               	movf	_relayStruct,w
   444  00E1  20F1  118A         	fcall	_putch
   445                           
   446                           ;usart.c: 70: putch(relayStruct.relay2);
   447  00E3  0871               	movf	_relayStruct+1,w
   448  00E4  20F1  118A         	fcall	_putch
   449                           
   450                           ;usart.c: 71: putch(relayStruct.relay3);
   451  00E6  0872               	movf	_relayStruct+2,w
   452  00E7  20F1  118A         	fcall	_putch
   453                           
   454                           ;usart.c: 72: putch(relayStruct.relay4);
   455  00E9  0873               	movf	_relayStruct+3,w
   456  00EA  20F1  118A         	fcall	_putch
   457                           
   458                           ;usart.c: 73: putch(relayStruct.bell);
   459  00EC  0874               	movf	_relayStruct+4,w
   460  00ED  20F1  118A         	fcall	_putch
   461                           
   462                           ;usart.c: 74: putch(0x0D);
   463  00EF  300D               	movlw	13
   464  00F0  28F1               	ljmp	_putch
   465  00F1                     __end_of_ReturnToServer:	
   466  00F1                     __ptext238:	
   467 ;; =============== function _ReturnToServer ends ============
   468                           
   469                           
   470 ;; *************** function _putch *****************
   471 ;; Defined at:
   472 ;;		line 14 in file "usart.c"
   473 ;; Parameters:    Size  Location     Type
   474 ;;  byte            1    wreg     unsigned char 
   475 ;; Auto vars:     Size  Location     Type
   476 ;;  byte            1    4[COMMON] unsigned char 
   477 ;; Return value:  Size  Location     Type
   478 ;;		None               void
   479 ;; Registers used:
   480 ;;		wreg
   481 ;; Tracked objects:
   482 ;;		On entry : 17F/0
   483 ;;		On exit  : 17F/0
   484 ;;		Unchanged: FFE80/0
   485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   486 ;;      Params:         0       0       0       0       0
   487 ;;      Locals:         1       0       0       0       0
   488 ;;      Temps:          0       0       0       0       0
   489 ;;      Totals:         1       0       0       0       0
   490 ;;Total ram usage:        1 bytes
   491 ;; Hardware stack levels used:    1
   492 ;; Hardware stack levels required when called:    2
   493 ;; This function calls:
   494 ;;		Nothing
   495 ;; This function is called by:
   496 ;;		_ReturnToServer
   497 ;; This function uses a non-reentrant model
   498 ;;
   499  00F1                     _putch:	
   500                           
   501                           ; Regs used in _putch: [wreg]
   502                           ;putch@byte stored from wreg
   503  00F1  00F9               	movwf	putch@byte
   504  00F2                     l1262:	
   505                           ;usart.c: 16: while(!TXIF)
   506                           
   507  00F2  1E0C               	btfss	12,4
   508  00F3  28F2               	goto	l1262
   509                           
   510                           ;usart.c: 18: TXREG = byte;
   511  00F4  0879               	movf	putch@byte,w
   512  00F5  0099               	movwf	25	;volatile
   513  00F6  0008               	return
   514  00F7                     __end_of_putch:	
   515                           
   516                           	psect	text239
   517  0115                     __ptext239:	
   518 ;; =============== function _putch ends ============
   519                           
   520                           
   521 ;; *************** function _ClearRecvStruct *****************
   522 ;; Defined at:
   523 ;;		line 78 in file "usart.c"
   524 ;; Parameters:    Size  Location     Type
   525 ;;		None
   526 ;; Auto vars:     Size  Location     Type
   527 ;;		None
   528 ;; Return value:  Size  Location     Type
   529 ;;		None               void
   530 ;; Registers used:
   531 ;;		status,2
   532 ;; Tracked objects:
   533 ;;		On entry : 17F/0
   534 ;;		On exit  : 17F/0
   535 ;;		Unchanged: FFE80/0
   536 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   537 ;;      Params:         0       0       0       0       0
   538 ;;      Locals:         0       0       0       0       0
   539 ;;      Temps:          0       0       0       0       0
   540 ;;      Totals:         0       0       0       0       0
   541 ;;Total ram usage:        0 bytes
   542 ;; Hardware stack levels used:    1
   543 ;; Hardware stack levels required when called:    2
   544 ;; This function calls:
   545 ;;		Nothing
   546 ;; This function is called by:
   547 ;;		_main
   548 ;; This function uses a non-reentrant model
   549 ;;
   550  0115                     _ClearRecvStruct:	
   551                           
   552                           ;usart.c: 79: relayStruct.relay1 = 0x00;
   553                           
   554                           ; Regs used in _ClearRecvStruct: [status,2]
   555  0115  01F0               	clrf	_relayStruct
   556                           
   557                           ;usart.c: 80: relayStruct.relay2 = 0x00;
   558  0116  01F1               	clrf	_relayStruct+1
   559                           
   560                           ;usart.c: 81: relayStruct.relay3 = 0x00;
   561  0117  01F2               	clrf	_relayStruct+2
   562                           
   563                           ;usart.c: 82: relayStruct.relay4 = 0x00;
   564  0118  01F3               	clrf	_relayStruct+3
   565                           
   566                           ;usart.c: 83: relayStruct.bell = 0x00;
   567  0119  01F4               	clrf	_relayStruct+4
   568                           
   569                           ;usart.c: 85: relayFlag.rcvStartOk = 0;
   570  011A  01A0               	clrf	_relayFlag
   571                           
   572                           ;usart.c: 86: relayFlag.rcvRelay1Ok = 0;
   573  011B  01A1               	clrf	_relayFlag+1
   574                           
   575                           ;usart.c: 87: relayFlag.rcvRelay2Ok = 0;
   576  011C  01A2               	clrf	_relayFlag+2
   577                           
   578                           ;usart.c: 88: relayFlag.rcvRelay3Ok = 0;
   579  011D  01A3               	clrf	_relayFlag+3
   580                           
   581                           ;usart.c: 89: relayFlag.rcvRelay4Ok = 0;
   582  011E  01A4               	clrf	_relayFlag+4
   583                           
   584                           ;usart.c: 90: relayFlag.rcvBellOk = 0;
   585  011F  01A5               	clrf	_relayFlag+5
   586                           
   587                           ;usart.c: 91: relayFlag.rcvTerminalOk = 0;
   588  0120  01A6               	clrf	_relayFlag+6
   589  0121  0008               	return
   590  0122                     __end_of_ClearRecvStruct:	
   591                           
   592                           	psect	text240
   593  0095                     __ptext240:	
   594 ;; =============== function _ClearRecvStruct ends ============
   595                           
   596                           
   597 ;; *************** function _HandleData *****************
   598 ;; Defined at:
   599 ;;		line 36 in file "usart.c"
   600 ;; Parameters:    Size  Location     Type
   601 ;;		None
   602 ;; Auto vars:     Size  Location     Type
   603 ;;		None
   604 ;; Return value:  Size  Location     Type
   605 ;;		None               void
   606 ;; Registers used:
   607 ;;		wreg
   608 ;; Tracked objects:
   609 ;;		On entry : 17F/0
   610 ;;		On exit  : 17F/0
   611 ;;		Unchanged: FFE80/0
   612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   613 ;;      Params:         0       0       0       0       0
   614 ;;      Locals:         0       0       0       0       0
   615 ;;      Temps:          0       0       0       0       0
   616 ;;      Totals:         0       0       0       0       0
   617 ;;Total ram usage:        0 bytes
   618 ;; Hardware stack levels used:    1
   619 ;; Hardware stack levels required when called:    2
   620 ;; This function calls:
   621 ;;		Nothing
   622 ;; This function is called by:
   623 ;;		_main
   624 ;; This function uses a non-reentrant model
   625 ;;
   626  0095                     _HandleData:	
   627                           
   628                           ;usart.c: 37: if(relayStruct.relay1 == 0x01)
   629                           
   630                           ; Regs used in _HandleData: [wreg]
   631  0095  0B70               	decfsz	_relayStruct,w
   632  0096  2899               	goto	l3070
   633                           
   634                           ;usart.c: 38: PORTAbits.RA1 = 1;
   635  0097  1485               	bsf	5,1	;volatile
   636  0098  289D               	goto	l3074
   637  0099                     l3070:	
   638                           
   639                           ;usart.c: 39: else if(relayStruct.relay1 == 0x02)
   640  0099  0870               	movf	_relayStruct,w
   641  009A  3A02               	xorlw	2
   642  009B  1903               	btfsc	3,2
   643                           
   644                           ;usart.c: 40: PORTAbits.RA1 = 0;
   645  009C  1085               	bcf	5,1	;volatile
   646  009D                     l3074:	
   647                           
   648                           ;usart.c: 42: if(relayStruct.relay2 == 0x01)
   649  009D  0B71               	decfsz	_relayStruct+1,w
   650  009E  28A1               	goto	l3078
   651                           
   652                           ;usart.c: 43: PORTAbits.RA0 = 1;
   653  009F  1405               	bsf	5,0	;volatile
   654  00A0  28A5               	goto	l3082
   655  00A1                     l3078:	
   656                           
   657                           ;usart.c: 44: else if(relayStruct.relay2 == 0x02)
   658  00A1  0871               	movf	_relayStruct+1,w
   659  00A2  3A02               	xorlw	2
   660  00A3  1903               	btfsc	3,2
   661                           
   662                           ;usart.c: 45: PORTAbits.RA0 = 0;
   663  00A4  1005               	bcf	5,0	;volatile
   664  00A5                     l3082:	
   665                           
   666                           ;usart.c: 47: if(relayStruct.relay3 == 0x01)
   667  00A5  0B72               	decfsz	_relayStruct+2,w
   668  00A6  28A9               	goto	l3086
   669                           
   670                           ;usart.c: 48: PORTBbits.RB6 = 1;
   671  00A7  1706               	bsf	6,6	;volatile
   672  00A8  28AD               	goto	l3090
   673  00A9                     l3086:	
   674                           
   675                           ;usart.c: 49: else if(relayStruct.relay3 == 0x02)
   676  00A9  0872               	movf	_relayStruct+2,w
   677  00AA  3A02               	xorlw	2
   678  00AB  1903               	btfsc	3,2
   679                           
   680                           ;usart.c: 50: PORTBbits.RB6 = 0;
   681  00AC  1306               	bcf	6,6	;volatile
   682  00AD                     l3090:	
   683                           
   684                           ;usart.c: 52: if(relayStruct.relay4 == 0x01)
   685  00AD  0B73               	decfsz	_relayStruct+3,w
   686  00AE  28B1               	goto	l3094
   687                           
   688                           ;usart.c: 53: PORTBbits.RB4 = 1;
   689  00AF  1606               	bsf	6,4	;volatile
   690  00B0  28B5               	goto	l3098
   691  00B1                     l3094:	
   692                           
   693                           ;usart.c: 54: else if(relayStruct.relay4 == 0x02)
   694  00B1  0873               	movf	_relayStruct+3,w
   695  00B2  3A02               	xorlw	2
   696  00B3  1903               	btfsc	3,2
   697                           
   698                           ;usart.c: 55: PORTBbits.RB4 = 0;
   699  00B4  1206               	bcf	6,4	;volatile
   700  00B5                     l3098:	
   701                           
   702                           ;usart.c: 57: if(relayStruct.bell == 0x01)
   703  00B5  0B74               	decfsz	_relayStruct+4,w
   704  00B6  28B9               	goto	l3102
   705                           
   706                           ;usart.c: 58: TMR0IE = 0x1;
   707  00B7  168B               	bsf	11,5
   708  00B8  0008               	return
   709  00B9                     l3102:	
   710                           
   711                           ;usart.c: 59: else if(relayStruct.bell == 0x02)
   712  00B9  0874               	movf	_relayStruct+4,w
   713  00BA  3A02               	xorlw	2
   714  00BB  1D03               	skipz
   715  00BC  0008               	return
   716                           
   717                           ;usart.c: 60: {
   718                           ;usart.c: 61: TMR0IE = 0x0;
   719  00BD  128B               	bcf	11,5
   720                           
   721                           ;usart.c: 62: PORTBbits.RB1 = 0;
   722  00BE  1086               	bcf	6,1	;volatile
   723  00BF  0008               	return
   724  00C0                     __end_of_HandleData:	
   725                           
   726                           	psect	text241
   727  0133                     __ptext241:	
   728 ;; =============== function _HandleData ends ============
   729                           
   730                           
   731 ;; *************** function _SetInterrupt *****************
   732 ;; Defined at:
   733 ;;		line 33 in file "port.c"
   734 ;; Parameters:    Size  Location     Type
   735 ;;		None
   736 ;; Auto vars:     Size  Location     Type
   737 ;;		None
   738 ;; Return value:  Size  Location     Type
   739 ;;		None               void
   740 ;; Registers used:
   741 ;;		None
   742 ;; Tracked objects:
   743 ;;		On entry : 17F/0
   744 ;;		On exit  : 17F/20
   745 ;;		Unchanged: FFE80/0
   746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   747 ;;      Params:         0       0       0       0       0
   748 ;;      Locals:         0       0       0       0       0
   749 ;;      Temps:          0       0       0       0       0
   750 ;;      Totals:         0       0       0       0       0
   751 ;;Total ram usage:        0 bytes
   752 ;; Hardware stack levels used:    1
   753 ;; Hardware stack levels required when called:    2
   754 ;; This function calls:
   755 ;;		Nothing
   756 ;; This function is called by:
   757 ;;		_main
   758 ;; This function uses a non-reentrant model
   759 ;;
   760  0133                     _SetInterrupt:	
   761                           
   762                           ;port.c: 34: TMR0IE = 0x0;
   763                           
   764                           ; Regs used in _SetInterrupt: []
   765  0133  128B               	bcf	11,5
   766                           
   767                           ;port.c: 35: RCIE = 0X1;
   768  0134  1683               	bsf	3,5	;RP0=1, select bank1
   769  0135  168C               	bsf	12,5
   770                           
   771                           ;port.c: 36: GIE = 0X1;
   772  0136  178B               	bsf	11,7
   773                           
   774                           ;port.c: 37: PEIE = 0X1;
   775  0137  170B               	bsf	11,6
   776  0138  0008               	return
   777  0139                     __end_of_SetInterrupt:	
   778                           
   779                           	psect	text242
   780  012B                     __ptext242:	
   781 ;; =============== function _SetInterrupt ends ============
   782                           
   783                           
   784 ;; *************** function _InitTim0 *****************
   785 ;; Defined at:
   786 ;;		line 26 in file "port.c"
   787 ;; Parameters:    Size  Location     Type
   788 ;;		None
   789 ;; Auto vars:     Size  Location     Type
   790 ;;		None
   791 ;; Return value:  Size  Location     Type
   792 ;;		None               void
   793 ;; Registers used:
   794 ;;		wreg
   795 ;; Tracked objects:
   796 ;;		On entry : 17F/0
   797 ;;		On exit  : 17F/0
   798 ;;		Unchanged: FFE80/0
   799 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   800 ;;      Params:         0       0       0       0       0
   801 ;;      Locals:         0       0       0       0       0
   802 ;;      Temps:          0       0       0       0       0
   803 ;;      Totals:         0       0       0       0       0
   804 ;;Total ram usage:        0 bytes
   805 ;; Hardware stack levels used:    1
   806 ;; Hardware stack levels required when called:    2
   807 ;; This function calls:
   808 ;;		Nothing
   809 ;; This function is called by:
   810 ;;		_main
   811 ;; This function uses a non-reentrant model
   812 ;;
   813  012B                     _InitTim0:	
   814                           
   815                           ;port.c: 27: OPTION_REG = 0x87;
   816                           
   817                           ; Regs used in _InitTim0: [wreg]
   818  012B  3087               	movlw	135
   819  012C  1683               	bsf	3,5	;RP0=1, select bank1
   820  012D  0081               	movwf	1	;volatile
   821  012E  303D               	movlw	61
   822                           
   823                           ;port.c: 28: TMR0IF=0;
   824  012F  110B               	bcf	11,2
   825                           
   826                           ;port.c: 29: TMR0=61;
   827  0130  1283               	bcf	3,5	;RP0=0, select bank0
   828  0131  0081               	movwf	1	;volatile
   829  0132  0008               	return
   830  0133                     __end_of_InitTim0:	
   831                           
   832                           	psect	text243
   833  0122                     __ptext243:	
   834 ;; =============== function _InitTim0 ends ============
   835                           
   836                           
   837 ;; *************** function _InitUsart *****************
   838 ;; Defined at:
   839 ;;		line 7 in file "usart.c"
   840 ;; Parameters:    Size  Location     Type
   841 ;;		None
   842 ;; Auto vars:     Size  Location     Type
   843 ;;		None
   844 ;; Return value:  Size  Location     Type
   845 ;;		None               void
   846 ;; Registers used:
   847 ;;		wreg
   848 ;; Tracked objects:
   849 ;;		On entry : 17F/20
   850 ;;		On exit  : 17F/20
   851 ;;		Unchanged: FFE80/0
   852 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   853 ;;      Params:         0       0       0       0       0
   854 ;;      Locals:         0       0       0       0       0
   855 ;;      Temps:          0       0       0       0       0
   856 ;;      Totals:         0       0       0       0       0
   857 ;;Total ram usage:        0 bytes
   858 ;; Hardware stack levels used:    1
   859 ;; Hardware stack levels required when called:    2
   860 ;; This function calls:
   861 ;;		Nothing
   862 ;; This function is called by:
   863 ;;		_main
   864 ;; This function uses a non-reentrant model
   865 ;;
   866  0122                     _InitUsart:	
   867                           
   868                           ;usart.c: 8: SPBRG = ((int)(4000000L/(16UL * 9600) - 1));
   869                           
   870                           ; Regs used in _InitUsart: [wreg]
   871  0122  3019               	movlw	25
   872  0123  0099               	movwf	25	;volatile
   873                           
   874                           ;usart.c: 9: RCSTA = (0|0x90);
   875  0124  3090               	movlw	144
   876  0125  1283               	bcf	3,5	;RP0=0, select bank0
   877  0126  0098               	movwf	24	;volatile
   878                           
   879                           ;usart.c: 10: TXSTA = (0x4|0|0x20);
   880  0127  3024               	movlw	36
   881  0128  1683               	bsf	3,5	;RP0=1, select bank1
   882  0129  0098               	movwf	24	;volatile
   883  012A  0008               	return
   884  012B                     __end_of_InitUsart:	
   885                           
   886                           	psect	text244
   887  0106                     __ptext244:	
   888 ;; =============== function _InitUsart ends ============
   889                           
   890                           
   891 ;; *************** function _InitPort *****************
   892 ;; Defined at:
   893 ;;		line 11 in file "port.c"
   894 ;; Parameters:    Size  Location     Type
   895 ;;		None
   896 ;; Auto vars:     Size  Location     Type
   897 ;;		None
   898 ;; Return value:  Size  Location     Type
   899 ;;		None               void
   900 ;; Registers used:
   901 ;;		wreg, status,2
   902 ;; Tracked objects:
   903 ;;		On entry : 17F/0
   904 ;;		On exit  : 17F/20
   905 ;;		Unchanged: FFE80/0
   906 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   907 ;;      Params:         0       0       0       0       0
   908 ;;      Locals:         0       0       0       0       0
   909 ;;      Temps:          0       0       0       0       0
   910 ;;      Totals:         0       0       0       0       0
   911 ;;Total ram usage:        0 bytes
   912 ;; Hardware stack levels used:    1
   913 ;; Hardware stack levels required when called:    2
   914 ;; This function calls:
   915 ;;		Nothing
   916 ;; This function is called by:
   917 ;;		_main
   918 ;; This function uses a non-reentrant model
   919 ;;
   920  0106                     _InitPort:	
   921                           
   922                           ;port.c: 12: TRISA = 0x00;
   923                           
   924                           ; Regs used in _InitPort: [wreg+status,2]
   925  0106  1683               	bsf	3,5	;RP0=1, select bank1
   926  0107  0185               	clrf	5	;volatile
   927                           
   928                           ;port.c: 13: TRISB = 0x00|(1<<2)|(1<<5);
   929  0108  3024               	movlw	36
   930  0109  0086               	movwf	6	;volatile
   931                           
   932                           ;port.c: 15: PORTA = 0x00;
   933  010A  1283               	bcf	3,5	;RP0=0, select bank0
   934  010B  0185               	clrf	5	;volatile
   935                           
   936                           ;port.c: 16: PORTB = 0x00;
   937  010C  0186               	clrf	6	;volatile
   938                           
   939                           ;port.c: 18: ANSEL = 0x00;
   940  010D  1683               	bsf	3,5	;RP0=1, select bank1
   941  010E  019B               	clrf	27	;volatile
   942                           
   943                           ;port.c: 19: ADCON0 = 0x00;
   944  010F  1283               	bcf	3,5	;RP0=0, select bank0
   945  0110  019F               	clrf	31	;volatile
   946                           
   947                           ;port.c: 20: ADCON1 = 0x00;
   948  0111  1683               	bsf	3,5	;RP0=1, select bank1
   949  0112  019F               	clrf	31	;volatile
   950                           
   951                           ;port.c: 22: OPTION_REG |= (1<<7);
   952  0113  1781               	bsf	1,7	;volatile
   953  0114  0008               	return
   954  0115                     __end_of_InitPort:	
   955                           
   956                           	psect	text245
   957  000D                     __ptext245:	
   958 ;; =============== function _InitPort ends ============
   959                           
   960                           
   961 ;; *************** function _usart *****************
   962 ;; Defined at:
   963 ;;		line 54 in file "main.c"
   964 ;; Parameters:    Size  Location     Type
   965 ;;		None
   966 ;; Auto vars:     Size  Location     Type
   967 ;;  temp            1    3[COMMON] unsigned char 
   968 ;; Return value:  Size  Location     Type
   969 ;;		None               void
   970 ;; Registers used:
   971 ;;		wreg, status,2, status,0, pclath, cstack
   972 ;; Tracked objects:
   973 ;;		On entry : 0/0
   974 ;;		On exit  : 40/0
   975 ;;		Unchanged: FFE00/0
   976 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   977 ;;      Params:         0       0       0       0       0
   978 ;;      Locals:         1       0       0       0       0
   979 ;;      Temps:          2       0       0       0       0
   980 ;;      Totals:         3       0       0       0       0
   981 ;;Total ram usage:        3 bytes
   982 ;; Hardware stack levels used:    1
   983 ;; Hardware stack levels required when called:    1
   984 ;; This function calls:
   985 ;;		i1_ClearRecvStruct
   986 ;;		i1_putch
   987 ;; This function is called by:
   988 ;;		Interrupt level 1
   989 ;; This function uses a non-reentrant model
   990 ;;
   991  000D                     _usart:	
   992                           
   993                           ;main.c: 55: if(RCIE&&RCIF)
   994  000D  1683               	bsf	3,5	;RP0=1, select bank1
   995  000E  1303               	bcf	3,6	;RP1=0, select bank1
   996  000F  1E8C               	btfss	12,5
   997  0010  285A               	goto	i1l3164
   998  0011  1283               	bcf	3,5	;RP0=0, select bank0
   999  0012  1E8C               	btfss	12,5
  1000  0013  285A               	goto	i1l3164
  1001                           
  1002                           ;main.c: 56: {
  1003                           ;main.c: 60: if(relayFlag.rcvStartOk == 0) {
  1004  0014  08A0               	movf	_relayFlag,f
  1005  0015  1D03               	skipz
  1006  0016  2823               	goto	i1l3122
  1007                           
  1008                           ;main.c: 61: if(RCREG == 0xF0) {
  1009  0017  081A               	movf	26,w	;volatile
  1010  0018  3AF0               	xorlw	240
  1011  0019  1D03               	skipz
  1012  001A  2820               	goto	i1l3120
  1013                           
  1014                           ;main.c: 62: ClearRecvStruct();
  1015  001B  2080  118A         	fcall	i1_ClearRecvStruct
  1016                           
  1017                           ;main.c: 63: relayFlag.rcvStartOk = 1;
  1018  001D  01A0               	clrf	_relayFlag
  1019  001E  0AA0               	incf	_relayFlag,f
  1020                           
  1021                           ;main.c: 64: } else {
  1022  001F  285A               	goto	i1l3164
  1023  0020                     i1l3120:	
  1024                           
  1025                           ;main.c: 65: ClearRecvStruct();
  1026  0020  2080  118A         	fcall	i1_ClearRecvStruct
  1027  0022  285A               	goto	i1l3164
  1028  0023                     i1l3122:	
  1029  0023  08A1               	movf	_relayFlag+1,f
  1030  0024  1D03               	skipz
  1031  0025  282B               	goto	i1l3128
  1032                           
  1033                           ;main.c: 68: relayStruct.relay1 = RCREG;
  1034  0026  081A               	movf	26,w	;volatile
  1035  0027  00F0               	movwf	_relayStruct
  1036                           
  1037                           ;main.c: 69: relayFlag.rcvRelay1Ok = 1;
  1038  0028  01A1               	clrf	_relayFlag+1
  1039  0029  0AA1               	incf	_relayFlag+1,f
  1040                           
  1041                           ;main.c: 70: } else if (relayFlag.rcvRelay2Ok == 0) {
  1042  002A  285A               	goto	i1l3164
  1043  002B                     i1l3128:	
  1044  002B  08A2               	movf	_relayFlag+2,f
  1045  002C  1D03               	skipz
  1046  002D  2833               	goto	i1l3134
  1047                           
  1048                           ;main.c: 71: relayStruct.relay2 = RCREG;
  1049  002E  081A               	movf	26,w	;volatile
  1050  002F  00F1               	movwf	_relayStruct+1
  1051                           
  1052                           ;main.c: 72: relayFlag.rcvRelay2Ok = 1;
  1053  0030  01A2               	clrf	_relayFlag+2
  1054  0031  0AA2               	incf	_relayFlag+2,f
  1055                           
  1056                           ;main.c: 73: } else if (relayFlag.rcvRelay3Ok == 0) {
  1057  0032  285A               	goto	i1l3164
  1058  0033                     i1l3134:	
  1059  0033  08A3               	movf	_relayFlag+3,f
  1060  0034  1D03               	skipz
  1061  0035  283B               	goto	i1l3140
  1062                           
  1063                           ;main.c: 74: relayStruct.relay3 = RCREG;
  1064  0036  081A               	movf	26,w	;volatile
  1065  0037  00F2               	movwf	_relayStruct+2
  1066                           
  1067                           ;main.c: 75: relayFlag.rcvRelay3Ok = 1;
  1068  0038  01A3               	clrf	_relayFlag+3
  1069  0039  0AA3               	incf	_relayFlag+3,f
  1070                           
  1071                           ;main.c: 76: } else if (relayFlag.rcvRelay4Ok == 0) {
  1072  003A  285A               	goto	i1l3164
  1073  003B                     i1l3140:	
  1074  003B  08A4               	movf	_relayFlag+4,f
  1075  003C  1D03               	skipz
  1076  003D  2843               	goto	i1l3146
  1077                           
  1078                           ;main.c: 77: relayStruct.relay4 = RCREG;
  1079  003E  081A               	movf	26,w	;volatile
  1080  003F  00F3               	movwf	_relayStruct+3
  1081                           
  1082                           ;main.c: 78: relayFlag.rcvRelay4Ok = 1;
  1083  0040  01A4               	clrf	_relayFlag+4
  1084  0041  0AA4               	incf	_relayFlag+4,f
  1085                           
  1086                           ;main.c: 79: } else if (relayFlag.rcvBellOk == 0) {
  1087  0042  285A               	goto	i1l3164
  1088  0043                     i1l3146:	
  1089  0043  08A5               	movf	_relayFlag+5,f
  1090  0044  1D03               	skipz
  1091  0045  284B               	goto	i1l3152
  1092                           
  1093                           ;main.c: 80: relayStruct.bell = RCREG;
  1094  0046  081A               	movf	26,w	;volatile
  1095  0047  00F4               	movwf	_relayStruct+4
  1096                           
  1097                           ;main.c: 81: relayFlag.rcvBellOk = 1;
  1098  0048  01A5               	clrf	_relayFlag+5
  1099  0049  0AA5               	incf	_relayFlag+5,f
  1100                           
  1101                           ;main.c: 82: } else if (relayFlag.rcvTerminalOk == 0) {
  1102  004A  285A               	goto	i1l3164
  1103  004B                     i1l3152:	
  1104  004B  08A6               	movf	_relayFlag+6,f
  1105  004C  1D03               	skipz
  1106  004D  2855               	goto	i1l3160
  1107                           
  1108                           ;main.c: 83: if(RCREG == 0x0A)
  1109  004E  081A               	movf	26,w	;volatile
  1110  004F  3A0A               	xorlw	10
  1111  0050  1D03               	skipz
  1112  0051  2820               	goto	i1l3120
  1113                           
  1114                           ;main.c: 84: relayFlag.rcvTerminalOk = 1;
  1115  0052  01A6               	clrf	_relayFlag+6
  1116  0053  0AA6               	incf	_relayFlag+6,f
  1117  0054  285A               	goto	i1l3164
  1118  0055                     i1l3160:	
  1119                           
  1120                           ;main.c: 88: unsigned char temp = RCREG;
  1121  0055  081A               	movf	26,w	;volatile
  1122  0056  00F8               	movwf	usart@temp
  1123                           
  1124                           ;main.c: 89: putch(temp);
  1125  0057  0878               	movf	usart@temp,w
  1126  0058  208F  118A         	fcall	i1_putch
  1127  005A                     i1l3164:	
  1128                           
  1129                           ;main.c: 90: }
  1130                           ;main.c: 92: }
  1131                           ;main.c: 94: if(TMR0IF==1 && TMR0IE==1)
  1132  005A  190B               	btfsc	11,2
  1133  005B  1E8B               	btfss	11,5
  1134  005C  2879               	goto	i1l654
  1135                           
  1136                           ;main.c: 95: {
  1137                           ;main.c: 96: PORTBbits.RB3 = ~PORTBbits.RB3;
  1138  005D  1003               	clrc
  1139  005E  1283               	bcf	3,5	;RP0=0, select bank0
  1140  005F  1D86               	btfss	6,3	;volatile
  1141  0060  1403               	setc
  1142  0061  1C03               	btfss	3,0
  1143  0062  2867               	goto	u55_20
  1144  0063  1283               	bcf	3,5	;RP0=0, select bank0
  1145  0064  1303               	bcf	3,6	;RP1=0, select bank0
  1146  0065  1586               	bsf	6,3	;volatile
  1147  0066  286A               	goto	u56_24
  1148  0067                     u55_20:	
  1149  0067  1283               	bcf	3,5	;RP0=0, select bank0
  1150  0068  1303               	bcf	3,6	;RP1=0, select bank0
  1151  0069  1186               	bcf	6,3	;volatile
  1152  006A                     u56_24:	
  1153                           
  1154                           ;main.c: 97: PORTBbits.RB1 = ~PORTBbits.RB1;
  1155  006A  1003               	clrc
  1156  006B  1C86               	btfss	6,1	;volatile
  1157  006C  1403               	setc
  1158  006D  1C03               	btfss	3,0
  1159  006E  2873               	goto	u57_20
  1160  006F  1283               	bcf	3,5	;RP0=0, select bank0
  1161  0070  1303               	bcf	3,6	;RP1=0, select bank0
  1162  0071  1486               	bsf	6,1	;volatile
  1163  0072  2876               	goto	i1l3170
  1164  0073                     u57_20:	
  1165  0073  1283               	bcf	3,5	;RP0=0, select bank0
  1166  0074  1303               	bcf	3,6	;RP1=0, select bank0
  1167  0075  1086               	bcf	6,1	;volatile
  1168  0076                     i1l3170:	
  1169  0076  303D               	movlw	61
  1170                           
  1171                           ;main.c: 98: TMR0IF = 0;
  1172  0077  110B               	bcf	11,2
  1173                           
  1174                           ;main.c: 99: TMR0 = 61;
  1175  0078  0081               	movwf	1	;volatile
  1176  0079                     i1l654:	
  1177  0079  0877               	movf	??_usart+1,w
  1178  007A  008A               	movwf	10
  1179  007B  0E76               	swapf	??_usart^(0+-128),w
  1180  007C  0083               	movwf	3
  1181  007D  0EFE               	swapf	126,f
  1182  007E  0E7E               	swapf	126,w
  1183  007F  0009               	retfie
  1184  0080                     __end_of_usart:	
  1185  0080                     __ptext246:	
  1186 ;; =============== function _usart ends ============
  1187                           
  1188                           
  1189 ;; *************** function i1_ClearRecvStruct *****************
  1190 ;; Defined at:
  1191 ;;		line 78 in file "usart.c"
  1192 ;; Parameters:    Size  Location     Type
  1193 ;;		None
  1194 ;; Auto vars:     Size  Location     Type
  1195 ;;		None
  1196 ;; Return value:  Size  Location     Type
  1197 ;;		None               void
  1198 ;; Registers used:
  1199 ;;		status,2
  1200 ;; Tracked objects:
  1201 ;;		On entry : 0/0
  1202 ;;		On exit  : 60/0
  1203 ;;		Unchanged: FFF9F/0
  1204 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1205 ;;      Params:         0       0       0       0       0
  1206 ;;      Locals:         0       0       0       0       0
  1207 ;;      Temps:          0       0       0       0       0
  1208 ;;      Totals:         0       0       0       0       0
  1209 ;;Total ram usage:        0 bytes
  1210 ;; Hardware stack levels used:    1
  1211 ;; This function calls:
  1212 ;;		Nothing
  1213 ;; This function is called by:
  1214 ;;		_usart
  1215 ;; This function uses a non-reentrant model
  1216 ;;
  1217  0080                     i1_ClearRecvStruct:	
  1218                           
  1219                           ;usart.c: 79: relayStruct.relay1 = 0x00;
  1220                           
  1221                           ; Regs used in i1_ClearRecvStruct: [status,2]
  1222  0080  01F0               	clrf	_relayStruct
  1223                           
  1224                           ;usart.c: 80: relayStruct.relay2 = 0x00;
  1225  0081  01F1               	clrf	_relayStruct+1
  1226                           
  1227                           ;usart.c: 81: relayStruct.relay3 = 0x00;
  1228  0082  01F2               	clrf	_relayStruct+2
  1229                           
  1230                           ;usart.c: 82: relayStruct.relay4 = 0x00;
  1231  0083  01F3               	clrf	_relayStruct+3
  1232                           
  1233                           ;usart.c: 83: relayStruct.bell = 0x00;
  1234  0084  01F4               	clrf	_relayStruct+4
  1235                           
  1236                           ;usart.c: 85: relayFlag.rcvStartOk = 0;
  1237  0085  1283               	bcf	3,5	;RP0=0, select bank0
  1238  0086  1303               	bcf	3,6	;RP1=0, select bank0
  1239  0087  01A0               	clrf	_relayFlag
  1240                           
  1241                           ;usart.c: 86: relayFlag.rcvRelay1Ok = 0;
  1242  0088  01A1               	clrf	_relayFlag+1
  1243                           
  1244                           ;usart.c: 87: relayFlag.rcvRelay2Ok = 0;
  1245  0089  01A2               	clrf	_relayFlag+2
  1246                           
  1247                           ;usart.c: 88: relayFlag.rcvRelay3Ok = 0;
  1248  008A  01A3               	clrf	_relayFlag+3
  1249                           
  1250                           ;usart.c: 89: relayFlag.rcvRelay4Ok = 0;
  1251  008B  01A4               	clrf	_relayFlag+4
  1252                           
  1253                           ;usart.c: 90: relayFlag.rcvBellOk = 0;
  1254  008C  01A5               	clrf	_relayFlag+5
  1255                           
  1256                           ;usart.c: 91: relayFlag.rcvTerminalOk = 0;
  1257  008D  01A6               	clrf	_relayFlag+6
  1258  008E  0008               	return
  1259  008F                     __end_ofi1_ClearRecvStruct:	
  1260  008F                     __ptext247:	
  1261 ;; =============== function i1_ClearRecvStruct ends ============
  1262                           
  1263                           
  1264 ;; *************** function i1_putch *****************
  1265 ;; Defined at:
  1266 ;;		line 14 in file "usart.c"
  1267 ;; Parameters:    Size  Location     Type
  1268 ;;  putch           1    wreg     unsigned char 
  1269 ;; Auto vars:     Size  Location     Type
  1270 ;;  putch           1    0[COMMON] unsigned char 
  1271 ;; Return value:  Size  Location     Type
  1272 ;;		None               void
  1273 ;; Registers used:
  1274 ;;		wreg
  1275 ;; Tracked objects:
  1276 ;;		On entry : 60/0
  1277 ;;		On exit  : 60/0
  1278 ;;		Unchanged: FFF9F/0
  1279 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1280 ;;      Params:         0       0       0       0       0
  1281 ;;      Locals:         1       0       0       0       0
  1282 ;;      Temps:          0       0       0       0       0
  1283 ;;      Totals:         1       0       0       0       0
  1284 ;;Total ram usage:        1 bytes
  1285 ;; Hardware stack levels used:    1
  1286 ;; This function calls:
  1287 ;;		Nothing
  1288 ;; This function is called by:
  1289 ;;		_usart
  1290 ;; This function uses a non-reentrant model
  1291 ;;
  1292  008F                     i1_putch:	
  1293                           
  1294                           ; Regs used in i1_putch: [wreg]
  1295                           ;i1putch@byte stored from wreg
  1296  008F  00F5               	movwf	i1putch@byte
  1297  0090                     i1l1262:	
  1298                           ;usart.c: 16: while(!TXIF)
  1299                           
  1300  0090  1E0C               	btfss	12,4
  1301  0091  2890               	goto	i1l1262
  1302                           
  1303                           ;usart.c: 18: TXREG = byte;
  1304  0092  0875               	movf	i1putch@byte,w
  1305  0093  0099               	movwf	25	;volatile
  1306  0094  0008               	return
  1307  0095                     __end_ofi1_putch:	
  1308                           
  1309                           	psect	intentry
  1310  0004                     __pintentry:	
  1311                           ; Regs used in _usart: [wreg+status,2+status,0+pclath+cstack]
  1312                           
  1313  0004                     interrupt_function:	
  1314  007E                     saved_w	set	btemp
  1315  0004  00FE               	movwf	btemp
  1316  0005  0E03               	swapf	3,w
  1317  0006  00F6               	movwf	??_usart
  1318  0007  080A               	movf	10,w
  1319  0008  00F7               	movwf	??_usart+1
  1320  0009  118A  280D         	ljmp	_usart
  1321                           
  1322                           	psect	text248
  1323  0000                     __ptext248:	
  1324 ;; =============== function i1_putch ends ============
  1325                           
  1326  007E                     btemp	set	126	;btemp
  1327  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Thu Nov 16 13:55:25 2017

                       l621 00CF                         _GIE 005F                        l3100 0000  
                      l3102 00B9                        l1262 00F2                        l1265 0000  
                      l3050 0000                        l3042 0000                        l3106 0000  
                      l1259 0000                        l3052 0000                        l3044 0000  
                      l3060 0000                        l3054 0000                        l3046 0000  
                      l3062 0000                        l3070 0099                        l1295 0000  
                      l3056 0000                        l3048 0000                        l3064 0000  
                      l3058 0000                        l3090 00AD                        l3082 00A5  
                      l3074 009D                        l3066 0000                        l1298 0000  
                      l3092 0000                        l3084 0000                        l3076 0000  
                      l3068 0000                        l1902 0000                        l3094 00B1  
                      l3086 00A9                        l3078 00A1                        l3174 0000  
                      l3190 0000                        l3184 0000                        l3192 0000  
                      l1905 0000                        l3098 00B5                        l3186 0000  
                      l3196 0000                        l3188 0000                        l1899 0000  
                      _PEIE 005E                        _RCIE 0465                        _RCIF 0065  
                      _TMR0 0001                        _TXIF 0064                        _main 00C0  
                      btemp 007E                        start 000B             __end_ofi1_putch 0095  
                _HandleData 0095                       ?_main 0075                       _ANSEL 009B  
                     i1l654 0079                       _RCREG 001A                       _RCSTA 0018  
                     _SPBRG 0099                       _PORTA 0005                       _PORTB 0006  
                     u55_20 0067                       u56_24 006A                       u57_20 0073  
                     _TRISA 0085                       _TRISB 0086                       _TXREG 0019  
                     _TXSTA 0098            ?_ClearRecvStruct 0075                       _putch 00F1  
                     _usart 000D                       pclath 000A                       status 0003  
                     wtemp0 007E                __end_of_main 00DD            __end_of_InitTim0 0133  
          __end_of_InitPort 0115                      ??_main 007A                      _ADCON0 001F  
                    _ADCON1 009F                      ?_putch 0075                      ?_usart 0075  
                    i1l1262 0090                      i1l3120 0020                      i1l1265 0000  
                    i1l3122 0023                      i1l3140 003B                      i1l3132 0000  
                    i1l3108 0000                      i1l3150 0000                      i1l3134 0033  
                    i1l3126 0000                      i1l3118 0000                      i1l3160 0055  
                    i1l3152 004B                      i1l3144 0000                      i1l3128 002B  
                    i1l1298 0000                      i1l3170 0076                      i1l3162 0000  
                    i1l3146 0043                      i1l3138 0000                      i1l3172 0000  
                    i1l3164 005A                      i1l3182 0000                      i1l3178 0000  
                 ??i1_putch 0075                      _TMR0IE 005D                      _TMR0IF 005A  
        __size_of_InitUsart 0009                 ?_HandleData 0075     __size_of_ReturnToServer 0014  
                    saved_w 007E               ?_SetInterrupt 0075              __pcstackCOMMON 0075  
               i1putch@byte 0075               __end_of_putch 00F7               __end_of_usart 0080  
         __end_of_InitUsart 012B              ??_SetInterrupt 0079                     ??_putch 0079  
                   ??_usart 0076         __size_of_HandleData 002B                  __pbssBANK0 0020  
                 ?_InitTim0 0075                   ?_InitPort 0075                  __pmaintext 00C0  
                __pintentry 0004                  ??_InitTim0 0079                     i1_putch 008F  
                ??_InitPort 0079              _ReturnToServer 00DD           i1_ClearRecvStruct 0080  
        ?i1_ClearRecvStruct 0075        end_of_initialization 0103    __size_of_ClearRecvStruct 000D  
       ??i1_ClearRecvStruct 0075      __end_of_ReturnToServer 00F1                ??_HandleData 0079  
      __end_of_SetInterrupt 0139                   _PORTAbits 0005                   _PORTBbits 0006  
 __end_ofi1_ClearRecvStruct 008F          __end_of_HandleData 00C0             ?_ReturnToServer 0075  
       start_initialization 00F7                   _InitUsart 0122           __size_of_InitTim0 0008  
         __size_of_InitPort 000F           ??_ClearRecvStruct 0079  __size_ofi1_ClearRecvStruct 000F  
               __pbssCOMMON 0070                  ?_InitUsart 0075                    ?i1_putch 0075  
     __size_of_SetInterrupt 0006                   __ptext240 0095                   __ptext241 0133  
                 __ptext242 012B                   __ptext243 0122                   __ptext244 0106  
                 __ptext236 0000                   __ptext245 000D                   __ptext237 00DD  
                 __ptext246 0080                   __ptext238 00F1                   __ptext247 008F  
                 __ptext239 0115                   __ptext248 0000              __size_of_putch 0006  
            __size_of_usart 0073                _SetInterrupt 0133           interrupt_function 0004  
                 _relayFlag 0020                 ??_InitUsart 0079                    _InitTim0 012B  
                  _InitPort 0106            ??_ReturnToServer 007A            __size_ofi1_putch 0006  
           _ClearRecvStruct 0115               __size_of_main 001D                   putch@byte 0079  
               _relayStruct 0070                   usart@temp 0078                    intlevel1 0000  
                _OPTION_REG 0081     __end_of_ClearRecvStruct 0122  
