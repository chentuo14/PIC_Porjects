

HI-TECH Software PIC PRO Macro Assembler V9.83 build 10920 
                                                                                               Sat Dec 15 16:05:48 2018

HI-TECH Software Omniscient Code Generator (PRO mode) build 10920
     1                           	processor	16F88
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	config,global,class=CONFIG,delta=2
     5                           	psect	text1517,local,class=CODE,delta=2
     6                           	psect	cinit,global,class=CODE,delta=2
     7                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1
     8                           	psect	bitbssBANK1,global,bit,class=BANK1,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,delta=2
    15                           	psect	text1518,local,class=CODE,delta=2
    16                           	psect	text1521,local,class=CODE,delta=2
    17                           	psect	text1528,local,class=CODE,delta=2
    18                           	psect	text1531,local,class=CODE,delta=2
    19                           	psect	text1538,local,class=CODE,delta=2
    20                           	psect	text1544,local,class=CODE,delta=2
    21                           	psect	text1559,local,class=CODE,delta=2
    22                           	psect	text1560,local,class=CODE,delta=2
    23                           	psect	text1564,local,class=CODE,delta=2
    24                           	psect	text1565,local,class=CODE,delta=2
    25                           	psect	text1568,local,class=CODE,delta=2
    26                           	psect	intentry,global,class=CODE,delta=2
    27                           	psect	text1573,local,class=CODE,delta=2
    28                           	dabs	1,0x7E,2
    29  000A                     	;#
    30                           
    31                           	psect	config
    32  2007  FF2E               	dw	65326	;#
    33  2008  FFFC               	dw	65532	;#
    34                           
    35                           	psect	text1517
    36  0000                     __ptext1517:	
    37  001F                     _ADCON0	set	31
    38  0017                     _CCP1CON	set	23
    39  0016                     _CCPR1H	set	22
    40  0015                     _CCPR1L	set	21
    41  000B                     _INTCON	set	11
    42  000C                     _PIR1	set	12
    43  000C                     _PIR1bits	set	12
    44  000D                     _PIR2	set	13
    45  0005                     _PORTA	set	5
    46  0006                     _PORTB	set	6
    47  0006                     _PORTBbits	set	6
    48  001A                     _RCREG	set	26
    49  0018                     _RCSTA	set	24
    50  0014                     _SSPCON	set	20
    51  0010                     _T1CON	set	16
    52  0010                     _T1CONbits	set	16
    53  0012                     _T2CON	set	18
    54  000F                     _TMR1H	set	15
    55  000E                     _TMR1L	set	14
    56  0019                     _TXREG	set	25
    57  00A4                     _CKP	set	164
    58  00C4                     _CREN	set	196
    59  005F                     _GIE	set	95
    60  00C1                     _OERR	set	193
    61  005E                     _PEIE	set	94
    62  0028                     _RA0	set	40
    63  0030                     _RB0	set	48
    64  0031                     _RB1	set	49
    65  0034                     _RB4	set	52
    66  0065                     _RCIF	set	101
    67  00A5                     _SSPEN	set	165
    68  0064                     _TXIF	set	100
    69  009F                     _ADCON1	set	159
    70  009B                     _ANSEL	set	155
    71  008C                     _PIE1	set	140
    72  0092                     _PR2	set	146
    73  0099                     _SPBRG	set	153
    74  0085                     _TRISA	set	133
    75  0086                     _TRISB	set	134
    76  0086                     _TRISBbits	set	134
    77  0098                     _TXSTA	set	152
    78  0460                     _TMR1IE	set	1120
    79  0428                     _TRISA0	set	1064
    80  0431                     _TRISB1	set	1073
    81  0432                     _TRISB2	set	1074
    82  0434                     _TRISB4	set	1076
    83  0435                     _TRISB5	set	1077
    84  010D                     _EEADR	set	269
    85  010C                     _EEDATA	set	268
    86  018D                     _EECON2	set	397
    87  0C67                     _EEPGD	set	3175
    88  0C60                     _RD	set	3168
    89  0C61                     _WR	set	3169
    90  0C62                     _WREN	set	3170
    91                           
    92                           	psect	cinit
    93  0D86                     start_initialization:	
    94                           
    95                           ; Clear objects allocated to BITCOMMON
    96  0D86  01FD               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
    97                           
    98                           ; Clear objects allocated to BITBANK1
    99  0D87  1683               	bsf	3,5	;RP0=1, select bank1
   100  0D88  01D6               	clrf	(__pbitbssBANK1/(0+8))& (0+127)
   101                           
   102                           ; Clear objects allocated to BANK1
   103  0D89  1383               	bcf	3,7	;select IRP bank0
   104  0D8A  30A0               	movlw	low __pbssBANK1
   105  0D8B  0084               	movwf	4
   106  0D8C  30CE               	movlw	low (__pbssBANK1+46)
   107  0D8D  158A  257E         	fcall	clear_ram
   108  0D8F                     end_of_initialization:	
   109                           ;End of C runtime variable initialization code
   110                           
   111  0D8F  0183               	clrf	3
   112  0D90  158A  2DDA         	ljmp	_main	;jump to C main() function
   113                           
   114                           	psect	bitbssCOMMON
   115  03E8                     __pbitbssCOMMON:	
   116  03E8                     _rcvAddrOk:	
   117  03E8                     	ds	1
   118  03E9                     _rcvCRCOk:	
   119  03E9                     	ds	1
   120  03EA                     _rcvCommandOk:	
   121  03EA                     	ds	1
   122  03EB                     _rcvDataOk:	
   123  03EB                     	ds	1
   124  03EC                     _rcvLengthOk:	
   125  03EC                     	ds	1
   126  03ED                     _rcvTerminalOk:	
   127  03ED                     	ds	1
   128                           
   129                           	psect	bitbssBANK1
   130  06B0                     __pbitbssBANK1:	
   131  06B0                     _rcvStartOk:	
   132  06B0                     	ds	1
   133                           
   134                           	psect	bssBANK1
   135  00A0                     __pbssBANK1:	
   136  00A0                     _rcvData:	
   137  00A0                     	ds	8
   138  00A8                     Delay@k:	
   139  00A8                     	ds	2
   140  00AA                     _delay_flag:	
   141  00AA                     	ds	2
   142  00AC                     _idleCnt:	
   143  00AC                     	ds	2
   144  00AE                     _timer1_counter:	
   145  00AE                     	ds	2
   146  00B0                     ResetUart@i:	
   147  00B0                     	ds	1
   148  00B1                     _CFG_H:	
   149  00B1                     	ds	1
   150  00B2                     _CFG_L:	
   151  00B2                     	ds	1
   152  00B3                     _H_L:	
   153  00B3                     	ds	1
   154  00B4                     _H_M:	
   155  00B4                     	ds	1
   156  00B5                     _H_S:	
   157  00B5                     	ds	1
   158  00B6                     _L_L:	
   159  00B6                     	ds	1
   160  00B7                     _L_M:	
   161  00B7                     	ds	1
   162  00B8                     _L_S:	
   163  00B8                     	ds	1
   164  00B9                     _T_L:	
   165  00B9                     	ds	1
   166  00BA                     _T_Lsb:	
   167  00BA                     	ds	1
   168  00BB                     _T_M:	
   169  00BB                     	ds	1
   170  00BC                     _T_Msb:	
   171  00BC                     	ds	1
   172  00BD                     _rcvCRC:	
   173  00BD                     	ds	1
   174  00BE                     _rcvCommand:	
   175  00BE                     	ds	1
   176  00BF                     _rcvCount:	
   177  00BF                     	ds	1
   178  00C0                     _rcvLength:	
   179  00C0                     	ds	1
   180  00C1                     _sndCRC:	
   181  00C1                     	ds	1
   182  00C2                     _sndCommand:	
   183  00C2                     	ds	1
   184  00C3                     _sndCount:	
   185  00C3                     	ds	1
   186  00C4                     _sndLength:	
   187  00C4                     	ds	1
   188  00C5                     _sndData:	
   189  00C5                     	ds	8
   190  00CD                     _unitAddr:	
   191  00CD                     	ds	1
   192                           
   193                           	psect	clrtext
   194  0D7E                     clear_ram:	
   195                           ;	Called with FSR containing the base address, and
   196                           ;	W with the last address+1
   197                           
   198  0D7E  0064               	clrwdt	;clear the watchdog before getting into this loop
   199  0D7F                     clrloop:	
   200  0D7F  0180               	clrf	0	;clear RAM location pointed to by FSR
   201  0D80  0A84               	incf	4,f	;increment pointer
   202  0D81  0604               	xorwf	4,w	;XOR with final address
   203  0D82  1903               	btfsc	3,2	;have we reached the end yet?
   204  0D83  3400               	retlw	0	;all done for this memory range, return
   205  0D84  0604               	xorwf	4,w	;XOR again to restore value
   206  0D85  2D7F               	goto	clrloop	;do the next byte
   207                           
   208                           	psect	cstackBANK1
   209  00CE                     __pcstackBANK1:	
   210  00CE                     ??_DataHandle:	
   211                           
   212                           ; 0 bytes @ 0x0
   213  00CE                     	ds	2
   214  00D0                     DataHandle@snNumH:	
   215                           
   216                           ; 1 bytes @ 0x2
   217  00D0                     	ds	1
   218  00D1                     DataHandle@snNumL:	
   219                           
   220                           ; 1 bytes @ 0x3
   221  00D1                     	ds	1
   222  00D2                     ?_main:	
   223  00D2                     main@argc:	
   224                           ; 2 bytes @ 0x4
   225                           
   226                           
   227                           ; 2 bytes @ 0x4
   228  00D2                     	ds	2
   229  00D4                     main@argv:	
   230                           
   231                           ; 2 bytes @ 0x6
   232  00D4                     	ds	2
   233                           
   234                           	psect	cstackCOMMON
   235  0070                     __pcstackCOMMON:	
   236  0070                     ?_i2c_Restart:	
   237  0070                     ?_i2c_Stop:	
   238                           ; 0 bytes @ 0x0
   239                           
   240  0070                     ?_WriteQitty:	
   241                           ; 0 bytes @ 0x0
   242                           
   243  0070                     ?_FormatData:	
   244                           ; 0 bytes @ 0x0
   245                           
   246  0070                     ?_ReadSN:	
   247                           ; 0 bytes @ 0x0
   248                           
   249  0070                     ?_putch:	
   250                           ; 0 bytes @ 0x0
   251                           
   252  0070                     ?_DS18B20Initial:	
   253                           ; 0 bytes @ 0x0
   254                           
   255  0070                     ?_timer1_init:	
   256                           ; 0 bytes @ 0x0
   257                           
   258  0070                     ?_DS18B20ReadFlash:	
   259                           ; 0 bytes @ 0x0
   260                           
   261  0070                     ?_RelayOn:	
   262                           ; 0 bytes @ 0x0
   263                           
   264  0070                     ?_RelayOff:	
   265                           ; 0 bytes @ 0x0
   266                           
   267  0070                     ?_ResetUart:	
   268                           ; 0 bytes @ 0x0
   269                           
   270  0070                     ?_I2CReadH:	
   271                           ; 0 bytes @ 0x0
   272                           
   273  0070                     ?_I2CReadL:	
   274                           ; 0 bytes @ 0x0
   275                           
   276  0070                     ?_AutoAdjustGain:	
   277                           ; 0 bytes @ 0x0
   278                           
   279  0070                     ?_DataHandle:	
   280                           ; 0 bytes @ 0x0
   281                           
   282  0070                     ?_SendService:	
   283                           ; 0 bytes @ 0x0
   284                           
   285  0070                     ?_SendRelayOff:	
   286                           ; 0 bytes @ 0x0
   287                           
   288  0070                     ?_isr:	
   289                           ; 0 bytes @ 0x0
   290                           
   291  0070                     ?_i2c_SendAcknowledge:	
   292                           ; 0 bytes @ 0x0
   293                           
   294  0070                     ?_WriteByte:	
   295                           ; 0 bytes @ 0x0
   296                           
   297  0070                     ?i1_RelayOff:	
   298                           ; 0 bytes @ 0x0
   299                           
   300  0070                     ??i1_RelayOff:	
   301                           ; 0 bytes @ 0x0
   302                           
   303  0070                     ?i1_ResetUart:	
   304                           ; 0 bytes @ 0x0
   305                           
   306  0070                     ??i1_ResetUart:	
   307                           ; 0 bytes @ 0x0
   308                           
   309  0070                     ?i1_putch:	
   310                           ; 0 bytes @ 0x0
   311                           
   312  0070                     ??i1_putch:	
   313                           ; 0 bytes @ 0x0
   314                           
   315  0070                     ?_i2c_PutByte:	
   316                           ; 0 bytes @ 0x0
   317                           
   318  0070                     ?_i2c_GetByte:	
   319                           ; 1 bytes @ 0x0
   320                           
   321  0070                     ?_ReadQitty:	
   322                           ; 1 bytes @ 0x0
   323                           
   324  0070                     ?_ReadEE:	
   325                           ; 1 bytes @ 0x0
   326                           
   327  0070                     ?_DS18B20Convert:	
   328                           ; 1 bytes @ 0x0
   329                           
   330  0070                     ?_i2c_WaitForSCL:	
   331                           ; 1 bytes @ 0x0
   332                           
   333  0070                     ?_i2c_SendByte:	
   334                           ; 1 bytes @ 0x0
   335                           
   336  0070                     ?_i2c_ReadAcknowledge:	
   337                           ; 1 bytes @ 0x0
   338                           
   339  0070                     ?_i2c_ReadByte:	
   340                           ; 1 bytes @ 0x0
   341                           
   342  0070                     ?_Reset:	
   343                           ; 1 bytes @ 0x0
   344                           
   345  0070                     ?_ReadByte:	
   346                           ; 1 bytes @ 0x0
   347                           
   348  0070                     i1putch@byte:	
   349                           ; 1 bytes @ 0x0
   350                           
   351                           
   352                           ; 1 bytes @ 0x0
   353  0070                     	ds	1
   354  0071                     ??_SendRelayOff:	
   355  0071                     SendRelayOff@relayCRC:	
   356                           ; 0 bytes @ 0x1
   357                           
   358                           
   359                           ; 2 bytes @ 0x1
   360  0071                     	ds	2
   361  0073                     SendRelayOff@relayCommand:	
   362                           
   363                           ; 2 bytes @ 0x3
   364  0073                     	ds	4
   365  0077                     ??_isr:	
   366                           
   367                           ; 0 bytes @ 0x7
   368  0077                     	ds	6
   369                           
   370                           	psect	cstackBANK0
   371  0020                     __pcstackBANK0:	
   372  0020                     ??_i2c_Restart:	
   373  0020                     ??_i2c_Stop:	
   374                           ; 0 bytes @ 0x0
   375                           
   376  0020                     ?_WriteEE:	
   377                           ; 0 bytes @ 0x0
   378                           
   379  0020                     ??_ReadEE:	
   380                           ; 0 bytes @ 0x0
   381                           
   382  0020                     ??_putch:	
   383                           ; 0 bytes @ 0x0
   384                           
   385  0020                     ??_timer1_init:	
   386                           ; 0 bytes @ 0x0
   387                           
   388  0020                     ?_Delay:	
   389                           ; 0 bytes @ 0x0
   390                           
   391  0020                     ??_i2c_WaitForSCL:	
   392                           ; 0 bytes @ 0x0
   393                           
   394  0020                     ??_RelayOn:	
   395                           ; 0 bytes @ 0x0
   396                           
   397  0020                     ??_RelayOff:	
   398                           ; 0 bytes @ 0x0
   399                           
   400  0020                     ??_ResetUart:	
   401                           ; 0 bytes @ 0x0
   402                           
   403  0020                     ??_AutoAdjustGain:	
   404                           ; 0 bytes @ 0x0
   405                           
   406  0020                     ??_i2c_SendAcknowledge:	
   407                           ; 0 bytes @ 0x0
   408                           
   409  0020                     ??_Reset:	
   410                           ; 0 bytes @ 0x0
   411                           
   412  0020                     ??_WriteByte:	
   413                           ; 0 bytes @ 0x0
   414                           
   415  0020                     ??_ReadByte:	
   416                           ; 0 bytes @ 0x0
   417                           
   418  0020                     ?___ftge:	
   419                           ; 0 bytes @ 0x0
   420                           
   421  0020                     ?_memcpy:	
   422                           ; 1 bit 
   423                           
   424  0020                     ?_GetHighGainValue:	
   425                           ; 1 bytes @ 0x0
   426                           
   427  0020                     ?_GetLowGainValue:	
   428                           ; 2 bytes @ 0x0
   429                           
   430  0020                     ?_GetLowDataRateValue:	
   431                           ; 2 bytes @ 0x0
   432                           
   433  0020                     ?___ftpack:	
   434                           ; 2 bytes @ 0x0
   435                           
   436  0020                     ?___ftneg:	
   437                           ; 3 bytes @ 0x0
   438                           
   439  0020                     putch@byte:	
   440                           ; 3 bytes @ 0x0
   441                           
   442  0020                     Reset@k:	
   443                           ; 1 bytes @ 0x0
   444                           
   445  0020                     WriteByte@dat:	
   446                           ; 1 bytes @ 0x0
   447                           
   448  0020                     WriteEE@data:	
   449                           ; 1 bytes @ 0x0
   450                           
   451  0020                     ReadEE@addr:	
   452                           ; 1 bytes @ 0x0
   453                           
   454  0020                     memcpy@s1:	
   455                           ; 1 bytes @ 0x0
   456                           
   457  0020                     ReadByte@i:	
   458                           ; 1 bytes @ 0x0
   459                           
   460  0020                     Delay@t:	
   461                           ; 2 bytes @ 0x0
   462                           
   463  0020                     ___ftneg@f1:	
   464                           ; 2 bytes @ 0x0
   465                           
   466  0020                     ___ftge@ff1:	
   467                           ; 3 bytes @ 0x0
   468                           
   469  0020                     ___ftpack@arg:	
   470                           ; 3 bytes @ 0x0
   471                           
   472                           
   473                           ; 3 bytes @ 0x0
   474  0020                     	ds	1
   475  0021                     ??_WriteEE:	
   476  0021                     ??_SendService:	
   477                           ; 0 bytes @ 0x1
   478                           
   479  0021                     ??_i2c_SendByte:	
   480                           ; 0 bytes @ 0x1
   481                           
   482  0021                     ??_i2c_ReadAcknowledge:	
   483                           ; 0 bytes @ 0x1
   484                           
   485  0021                     ??_i2c_ReadByte:	
   486                           ; 0 bytes @ 0x1
   487                           
   488  0021                     i2c_SendAcknowledge@status:	
   489                           ; 0 bytes @ 0x1
   490                           
   491  0021                     WriteByte@j:	
   492                           ; 1 bytes @ 0x1
   493                           
   494  0021                     WriteEE@addr:	
   495                           ; 1 bytes @ 0x1
   496                           
   497  0021                     ReadEE@num:	
   498                           ; 1 bytes @ 0x1
   499                           
   500  0021                     Reset@i:	
   501                           ; 1 bytes @ 0x1
   502                           
   503  0021                     memcpy@n:	
   504                           ; 2 bytes @ 0x1
   505                           
   506                           
   507                           ; 2 bytes @ 0x1
   508  0021                     	ds	1
   509  0022                     ??_WriteQitty:	
   510  0022                     ??_ReadQitty:	
   511                           ; 0 bytes @ 0x2
   512                           
   513  0022                     ?_WriteSN:	
   514                           ; 0 bytes @ 0x2
   515                           
   516  0022                     ??_ReadSN:	
   517                           ; 0 bytes @ 0x2
   518                           
   519  0022                     ??_Delay:	
   520                           ; 0 bytes @ 0x2
   521                           
   522  0022                     ??_GetHighGainValue:	
   523                           ; 0 bytes @ 0x2
   524                           
   525  0022                     ??_GetLowGainValue:	
   526                           ; 0 bytes @ 0x2
   527                           
   528  0022                     ??_GetLowDataRateValue:	
   529                           ; 0 bytes @ 0x2
   530                           
   531  0022                     i2c_SendByte@byte:	
   532                           ; 0 bytes @ 0x2
   533                           
   534  0022                     i2c_ReadAcknowledge@ack:	
   535                           ; 1 bytes @ 0x2
   536                           
   537  0022                     i2c_ReadByte@byte:	
   538                           ; 1 bytes @ 0x2
   539                           
   540  0022                     ReadByte@buf:	
   541                           ; 1 bytes @ 0x2
   542                           
   543  0022                     WriteSN@numL:	
   544                           ; 1 bytes @ 0x2
   545                           
   546  0022                     WriteQitty@qitty:	
   547                           ; 1 bytes @ 0x2
   548                           
   549  0022                     GetHighGainValue@gain:	
   550                           ; 1 bytes @ 0x2
   551                           
   552  0022                     GetLowGainValue@gain:	
   553                           ; 1 bytes @ 0x2
   554                           
   555  0022                     WriteByte@i:	
   556                           ; 1 bytes @ 0x2
   557                           
   558                           
   559                           ; 2 bytes @ 0x2
   560  0022                     	ds	1
   561  0023                     ??_WriteSN:	
   562  0023                     ??_memcpy:	
   563                           ; 0 bytes @ 0x3
   564                           
   565  0023                     ??___ftneg:	
   566                           ; 0 bytes @ 0x3
   567                           
   568  0023                     i2c_SendByte@i:	
   569                           ; 0 bytes @ 0x3
   570                           
   571  0023                     i2c_ReadByte@i:	
   572                           ; 1 bytes @ 0x3
   573                           
   574  0023                     ReadByte@j:	
   575                           ; 1 bytes @ 0x3
   576                           
   577  0023                     WriteSN@numH:	
   578                           ; 1 bytes @ 0x3
   579                           
   580  0023                     ReadSN@data:	
   581                           ; 1 bytes @ 0x3
   582                           
   583  0023                     GetLowDataRateValue@dataRate:	
   584                           ; 1 bytes @ 0x3
   585                           
   586  0023                     ___ftpack@exp:	
   587                           ; 1 bytes @ 0x3
   588                           
   589  0023                     ___ftge@ff2:	
   590                           ; 1 bytes @ 0x3
   591                           
   592                           
   593                           ; 3 bytes @ 0x3
   594  0023                     	ds	1
   595  0024                     ??_i2c_PutByte:	
   596  0024                     ??_i2c_GetByte:	
   597                           ; 0 bytes @ 0x4
   598                           
   599  0024                     ??_DS18B20Initial:	
   600                           ; 0 bytes @ 0x4
   601                           
   602  0024                     ??_DS18B20Convert:	
   603                           ; 0 bytes @ 0x4
   604                           
   605  0024                     ??_DS18B20ReadFlash:	
   606                           ; 0 bytes @ 0x4
   607                           
   608  0024                     i2c_PutByte@data:	
   609                           ; 0 bytes @ 0x4
   610                           
   611  0024                     ReadSN@i:	
   612                           ; 1 bytes @ 0x4
   613                           
   614  0024                     memcpy@d1:	
   615                           ; 1 bytes @ 0x4
   616                           
   617  0024                     ___ftpack@sign:	
   618                           ; 1 bytes @ 0x4
   619                           
   620  0024                     i2c_GetByte@byte:	
   621                           ; 1 bytes @ 0x4
   622                           
   623  0024                     DS18B20Convert@i:	
   624                           ; 2 bytes @ 0x4
   625                           
   626  0024                     DS18B20ReadFlash@i:	
   627                           ; 2 bytes @ 0x4
   628                           
   629  0024                     DS18B20Initial@i:	
   630                           ; 2 bytes @ 0x4
   631                           
   632                           
   633                           ; 2 bytes @ 0x4
   634  0024                     	ds	1
   635  0025                     ??___ftpack:	
   636  0025                     memcpy@d:	
   637                           ; 0 bytes @ 0x5
   638                           
   639                           
   640                           ; 1 bytes @ 0x5
   641  0025                     	ds	1
   642  0026                     ??___ftge:	
   643  0026                     i2c_GetByte@more:	
   644                           ; 0 bytes @ 0x6
   645                           
   646  0026                     memcpy@s:	
   647                           ; 1 bytes @ 0x6
   648                           
   649                           
   650                           ; 1 bytes @ 0x6
   651  0026                     	ds	1
   652  0027                     ??_I2CReadH:	
   653  0027                     ??_I2CReadL:	
   654                           ; 0 bytes @ 0x7
   655                           
   656                           
   657                           ; 0 bytes @ 0x7
   658  0027                     	ds	1
   659  0028                     ?___ftadd:	
   660  0028                     ?___lbtoft:	
   661                           ; 3 bytes @ 0x8
   662                           
   663  0028                     ?___awtoft:	
   664                           ; 3 bytes @ 0x8
   665                           
   666  0028                     ?___lwtoft:	
   667                           ; 3 bytes @ 0x8
   668                           
   669  0028                     ___awtoft@c:	
   670                           ; 3 bytes @ 0x8
   671                           
   672  0028                     ___lwtoft@c:	
   673                           ; 2 bytes @ 0x8
   674                           
   675  0028                     ___ftadd@f1:	
   676                           ; 2 bytes @ 0x8
   677                           
   678                           
   679                           ; 3 bytes @ 0x8
   680  0028                     	ds	3
   681  002B                     ??___lbtoft:	
   682  002B                     ??___awtoft:	
   683                           ; 0 bytes @ 0xB
   684                           
   685  002B                     ??___lwtoft:	
   686                           ; 0 bytes @ 0xB
   687                           
   688  002B                     ___lbtoft@c:	
   689                           ; 0 bytes @ 0xB
   690                           
   691  002B                     ___awtoft@sign:	
   692                           ; 1 bytes @ 0xB
   693                           
   694  002B                     ___ftadd@f2:	
   695                           ; 1 bytes @ 0xB
   696                           
   697                           
   698                           ; 3 bytes @ 0xB
   699  002B                     	ds	3
   700  002E                     ??___ftadd:	
   701                           
   702                           ; 0 bytes @ 0xE
   703  002E                     	ds	3
   704  0031                     ___ftadd@sign:	
   705                           
   706                           ; 1 bytes @ 0x11
   707  0031                     	ds	1
   708  0032                     ___ftadd@exp2:	
   709                           
   710                           ; 1 bytes @ 0x12
   711  0032                     	ds	1
   712  0033                     ___ftadd@exp1:	
   713                           
   714                           ; 1 bytes @ 0x13
   715  0033                     	ds	1
   716  0034                     ?_fabs:	
   717  0034                     fabs@d:	
   718                           ; 3 bytes @ 0x14
   719                           
   720                           
   721                           ; 3 bytes @ 0x14
   722  0034                     	ds	3
   723  0037                     ??_fabs:	
   724  0037                     ?___ftmul:	
   725                           ; 0 bytes @ 0x17
   726                           
   727  0037                     ___ftmul@f1:	
   728                           ; 3 bytes @ 0x17
   729                           
   730                           
   731                           ; 3 bytes @ 0x17
   732  0037                     	ds	3
   733  003A                     ___ftmul@f2:	
   734                           
   735                           ; 3 bytes @ 0x1A
   736  003A                     	ds	3
   737  003D                     ??___ftmul:	
   738                           
   739                           ; 0 bytes @ 0x1D
   740  003D                     	ds	3
   741  0040                     ___ftmul@exp:	
   742                           
   743                           ; 1 bytes @ 0x20
   744  0040                     	ds	1
   745  0041                     ___ftmul@f3_as_product:	
   746                           
   747                           ; 3 bytes @ 0x21
   748  0041                     	ds	3
   749  0044                     ___ftmul@cntr:	
   750                           
   751                           ; 1 bytes @ 0x24
   752  0044                     	ds	1
   753  0045                     ___ftmul@sign:	
   754                           
   755                           ; 1 bytes @ 0x25
   756  0045                     	ds	1
   757  0046                     ?___ftsub:	
   758  0046                     ?___ftdiv:	
   759                           ; 3 bytes @ 0x26
   760                           
   761  0046                     ___ftsub@f2:	
   762                           ; 3 bytes @ 0x26
   763                           
   764  0046                     ___ftdiv@f2:	
   765                           ; 3 bytes @ 0x26
   766                           
   767                           
   768                           ; 3 bytes @ 0x26
   769  0046                     	ds	3
   770  0049                     ___ftsub@f1:	
   771  0049                     ___ftdiv@f1:	
   772                           ; 3 bytes @ 0x29
   773                           
   774                           
   775                           ; 3 bytes @ 0x29
   776  0049                     	ds	3
   777  004C                     ??___ftsub:	
   778  004C                     ??___ftdiv:	
   779                           ; 0 bytes @ 0x2C
   780                           
   781                           
   782                           ; 0 bytes @ 0x2C
   783  004C                     	ds	3
   784  004F                     ___ftdiv@cntr:	
   785                           
   786                           ; 1 bytes @ 0x2F
   787  004F                     	ds	1
   788  0050                     ___ftdiv@f3:	
   789                           
   790                           ; 3 bytes @ 0x30
   791  0050                     	ds	3
   792  0053                     ___ftdiv@exp:	
   793                           
   794                           ; 1 bytes @ 0x33
   795  0053                     	ds	1
   796  0054                     ___ftdiv@sign:	
   797                           
   798                           ; 1 bytes @ 0x34
   799  0054                     	ds	1
   800  0055                     ?_GetSensorH:	
   801  0055                     ?_GetSensorL:	
   802                           ; 3 bytes @ 0x35
   803                           
   804                           
   805                           ; 3 bytes @ 0x35
   806  0055                     	ds	3
   807  0058                     ??_GetSensorH:	
   808  0058                     ??_GetSensorL:	
   809                           ; 0 bytes @ 0x38
   810                           
   811  0058                     GetSensorH@minCode:	
   812                           ; 0 bytes @ 0x38
   813                           
   814  0058                     GetSensorL@minCode:	
   815                           ; 3 bytes @ 0x38
   816                           
   817                           
   818                           ; 3 bytes @ 0x38
   819  0058                     	ds	3
   820  005B                     GetSensorH@pga:	
   821  005B                     GetSensorL@pga:	
   822                           ; 3 bytes @ 0x3B
   823                           
   824                           
   825                           ; 3 bytes @ 0x3B
   826  005B                     	ds	3
   827  005E                     _GetSensorH$6671:	
   828  005E                     _GetSensorL$6672:	
   829                           ; 3 bytes @ 0x3E
   830                           
   831                           
   832                           ; 3 bytes @ 0x3E
   833  005E                     	ds	3
   834  0061                     GetSensorH@adValue:	
   835  0061                     GetSensorL@adValue:	
   836                           ; 2 bytes @ 0x41
   837                           
   838                           
   839                           ; 2 bytes @ 0x41
   840  0061                     	ds	2
   841  0063                     GetSensorH@ret:	
   842  0063                     GetSensorL@ret:	
   843                           ; 3 bytes @ 0x43
   844                           
   845                           
   846                           ; 3 bytes @ 0x43
   847  0063                     	ds	3
   848  0066                     ??_FormatData:	
   849  0066                     FormatData@high:	
   850                           ; 0 bytes @ 0x46
   851                           
   852                           
   853                           ; 3 bytes @ 0x46
   854  0066                     	ds	3
   855  0069                     FormatData@low:	
   856                           
   857                           ; 3 bytes @ 0x49
   858  0069                     	ds	3
   859  006C                     FormatData@data:	
   860                           
   861                           ; 1 bytes @ 0x4C
   862  006C                     	ds	1
   863  006D                     FormatData@value:	
   864                           
   865                           ; 3 bytes @ 0x4D
   866  006D                     	ds	3
   867  0070                     ??_main:	
   868                           
   869                           	psect	maintext
   870  0DDA                     __pmaintext:	
   871                           ; 0 bytes @ 0x50
   872 ;;Data sizes: Strings 0, constant 0, data 0, bss 46, persistent 0 stack 0
   873 ;;Auto spaces:   Size  Autos    Used
   874 ;; COMMON          14     13      14
   875 ;; BANK0           80     80      80
   876 ;; BANK1           80      8      55
   877 ;; BANK3           96      0       0
   878 ;; BANK2           96      0       0
   879 ;;
   880 ;; Pointer list with targets:
   881 ;; ?___lbtoft	float  size(1) Largest target is 0
   882 ;;
   883 ;; ?___ftadd	float  size(1) Largest target is 0
   884 ;;
   885 ;; ?___ftpack	float  size(1) Largest target is 0
   886 ;;
   887 ;; ?___ftneg	float  size(1) Largest target is 0
   888 ;;
   889 ;; ?_memcpy	PTR void  size(1) Largest target is 8
   890 ;;		 -> sndData(BANK1[8]), 
   891 ;;
   892 ;; ?___ftsub	float  size(1) Largest target is 0
   893 ;;
   894 ;; ?_fabs	float  size(1) Largest target is 0
   895 ;;
   896 ;; ?_GetSensorL	float  size(1) Largest target is 0
   897 ;;
   898 ;; ?_GetSensorH	float  size(1) Largest target is 0
   899 ;;
   900 ;; ?___ftmul	float  size(1) Largest target is 0
   901 ;;
   902 ;; ?___awtoft	float  size(1) Largest target is 0
   903 ;;
   904 ;; ?___ftdiv	float  size(1) Largest target is 0
   905 ;;
   906 ;; ?___lwtoft	float  size(1) Largest target is 0
   907 ;;
   908 ;; memcpy@d1	PTR void  size(1) Largest target is 8
   909 ;;		 -> sndData(BANK1[8]), 
   910 ;;
   911 ;; memcpy@d	PTR unsigned char  size(1) Largest target is 8
   912 ;;		 -> sndData(BANK1[8]), 
   913 ;;
   914 ;; memcpy@s1	PTR const void  size(1) Largest target is 3
   915 ;;		 -> FormatTemperature@temp(COMMON[3]), FormatData@value(BANK0[3]), 
   916 ;;
   917 ;; memcpy@s	PTR const unsigned char  size(1) Largest target is 3
   918 ;;		 -> FormatTemperature@temp(COMMON[3]), FormatData@value(BANK0[3]), 
   919 ;;
   920 ;; sp__memcpy	PTR void  size(1) Largest target is 8
   921 ;;		 -> sndData(BANK1[8]), 
   922 ;;
   923 ;; FormatData@data	PTR unsigned char  size(1) Largest target is 8
   924 ;;		 -> sndData(BANK1[8]), 
   925 ;;
   926 ;; ReadSN@data	PTR unsigned char  size(1) Largest target is 8
   927 ;;		 -> sndData(BANK1[8]), 
   928 ;;
   929 ;;
   930 ;; Critical Paths under _main in COMMON
   931 ;;
   932 ;;   None.
   933 ;;
   934 ;; Critical Paths under _isr in COMMON
   935 ;;
   936 ;;   _isr->_SendRelayOff
   937 ;;   _SendRelayOff->i1_putch
   938 ;;
   939 ;; Critical Paths under _main in BANK0
   940 ;;
   941 ;;   _DataHandle->_FormatData
   942 ;;   _I2CReadL->_i2c_GetByte
   943 ;;   _I2CReadH->_i2c_GetByte
   944 ;;   _FormatData->_GetSensorH
   945 ;;   _FormatData->_GetSensorL
   946 ;;   _i2c_GetByte->_i2c_ReadByte
   947 ;;   _i2c_PutByte->_i2c_SendByte
   948 ;;   ___ftsub->___ftmul
   949 ;;   _GetSensorL->___ftdiv
   950 ;;   _GetSensorH->___ftdiv
   951 ;;   _i2c_ReadByte->_i2c_WaitForSCL
   952 ;;   _i2c_ReadAcknowledge->_i2c_WaitForSCL
   953 ;;   _i2c_SendByte->_i2c_WaitForSCL
   954 ;;   _DS18B20ReadFlash->_WriteByte
   955 ;;   _DS18B20ReadFlash->_ReadByte
   956 ;;   _DS18B20Convert->_WriteByte
   957 ;;   _DS18B20Initial->_WriteByte
   958 ;;   ___lwtoft->___ftpack
   959 ;;   ___awtoft->___ftpack
   960 ;;   ___lbtoft->___ftpack
   961 ;;   ___ftmul->_fabs
   962 ;;   ___ftdiv->___ftmul
   963 ;;   ___ftadd->___ftpack
   964 ;;   _fabs->___ftadd
   965 ;;   _SendService->_putch
   966 ;;   _ReadSN->_ReadEE
   967 ;;   _WriteSN->_WriteEE
   968 ;;   _ReadQitty->_ReadEE
   969 ;;   _WriteQitty->_WriteEE
   970 ;;
   971 ;; Critical Paths under _isr in BANK0
   972 ;;
   973 ;;   None.
   974 ;;
   975 ;; Critical Paths under _main in BANK1
   976 ;;
   977 ;;   _main->_DataHandle
   978 ;;
   979 ;; Critical Paths under _isr in BANK1
   980 ;;
   981 ;;   None.
   982 ;;
   983 ;; Critical Paths under _main in BANK3
   984 ;;
   985 ;;   None.
   986 ;;
   987 ;; Critical Paths under _isr in BANK3
   988 ;;
   989 ;;   None.
   990 ;;
   991 ;; Critical Paths under _main in BANK2
   992 ;;
   993 ;;   None.
   994 ;;
   995 ;; Critical Paths under _isr in BANK2
   996 ;;
   997 ;;   None.
   998 ;;
   999 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1000 ;;
  1001 ;;
  1002 ;;Call Graph Tables:
  1003 ;;
  1004 ;; ---------------------------------------------------------------------------------
  1005 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1006 ;; ---------------------------------------------------------------------------------
  1007 ;; (0) _main                                                 4     0      4    8115
  1008 ;;                                              4 BANK1      4     0      4
  1009 ;;                          _ResetUart
  1010 ;;                     _DS18B20Initial
  1011 ;;                        _timer1_init
  1012 ;;                         _DataHandle
  1013 ;;                        _SendService
  1014 ;;                           _I2CReadH
  1015 ;;                              _Delay
  1016 ;;                           _I2CReadL
  1017 ;;                     _AutoAdjustGain
  1018 ;;                     _DS18B20Convert
  1019 ;;                   _DS18B20ReadFlash
  1020 ;; ---------------------------------------------------------------------------------
  1021 ;; (1) _DataHandle                                           4     4      0    6631
  1022 ;;                                              0 BANK1      4     4      0
  1023 ;;                            _RelayOn
  1024 ;;                           _RelayOff
  1025 ;;                         _WriteQitty
  1026 ;;                          _ReadQitty
  1027 ;;                         _FormatData
  1028 ;;                            _WriteEE
  1029 ;;                             _ReadEE
  1030 ;;                            _WriteSN
  1031 ;;                             _ReadSN
  1032 ;; ---------------------------------------------------------------------------------
  1033 ;; (1) _I2CReadL                                             0     0      0     317
  1034 ;;                        _i2c_Restart
  1035 ;;                        _i2c_PutByte
  1036 ;;                           _i2c_Stop
  1037 ;;                        _i2c_GetByte
  1038 ;; ---------------------------------------------------------------------------------
  1039 ;; (1) _I2CReadH                                             0     0      0     317
  1040 ;;                        _i2c_Restart
  1041 ;;                        _i2c_PutByte
  1042 ;;                           _i2c_Stop
  1043 ;;                        _i2c_GetByte
  1044 ;; ---------------------------------------------------------------------------------
  1045 ;; (2) _FormatData                                          12    12      0    6140
  1046 ;;                                             70 BANK0     10    10      0
  1047 ;;                         _GetSensorH
  1048 ;;                         _GetSensorL
  1049 ;;                          _ReadQitty
  1050 ;;                           ___lbtoft
  1051 ;;                            ___ftsub
  1052 ;;                               _fabs
  1053 ;;                            ___ftmul
  1054 ;;                             _memcpy
  1055 ;; ---------------------------------------------------------------------------------
  1056 ;; (2) _i2c_GetByte                                          3     3      0     138
  1057 ;;                                              4 BANK0      3     3      0
  1058 ;;                       _i2c_ReadByte
  1059 ;;                _i2c_SendAcknowledge
  1060 ;; ---------------------------------------------------------------------------------
  1061 ;; (2) _i2c_PutByte                                          1     1      0     179
  1062 ;;                                              4 BANK0      1     1      0
  1063 ;;                       _i2c_SendByte
  1064 ;;                _i2c_ReadAcknowledge
  1065 ;; ---------------------------------------------------------------------------------
  1066 ;; (3) ___ftsub                                              6     0      6    1094
  1067 ;;                                             38 BANK0      6     0      6
  1068 ;;                            ___ftadd
  1069 ;;                               _fabs (ARG)
  1070 ;;                            ___ftmul (ARG)
  1071 ;; ---------------------------------------------------------------------------------
  1072 ;; (3) _GetSensorL                                          17    14      3    1900
  1073 ;;                                             53 BANK0     17    14      3
  1074 ;;                _GetLowDataRateValue
  1075 ;;                           ___lwtoft
  1076 ;;                    _GetLowGainValue
  1077 ;;                           ___awtoft
  1078 ;;                            ___ftmul
  1079 ;;                            ___ftdiv
  1080 ;;                             ___ftge
  1081 ;; ---------------------------------------------------------------------------------
  1082 ;; (3) _GetSensorH                                          17    14      3    1876
  1083 ;;                                             53 BANK0     17    14      3
  1084 ;;                   _GetHighGainValue
  1085 ;;                           ___lwtoft
  1086 ;;                           ___awtoft
  1087 ;;                            ___ftmul
  1088 ;;                            ___ftdiv
  1089 ;;                             ___ftge
  1090 ;; ---------------------------------------------------------------------------------
  1091 ;; (3) _i2c_ReadByte                                         3     3      0      71
  1092 ;;                                              1 BANK0      3     3      0
  1093 ;;                     _i2c_WaitForSCL
  1094 ;; ---------------------------------------------------------------------------------
  1095 ;; (3) _i2c_ReadAcknowledge                                  2     2      0      23
  1096 ;;                                              1 BANK0      2     2      0
  1097 ;;                     _i2c_WaitForSCL
  1098 ;; ---------------------------------------------------------------------------------
  1099 ;; (3) _i2c_SendByte                                         3     3      0     134
  1100 ;;                                              1 BANK0      3     3      0
  1101 ;;                     _i2c_WaitForSCL
  1102 ;; ---------------------------------------------------------------------------------
  1103 ;; (1) _DS18B20ReadFlash                                     2     2      0     332
  1104 ;;                                              4 BANK0      2     2      0
  1105 ;;                              _Reset
  1106 ;;                          _WriteByte
  1107 ;;                           _ReadByte
  1108 ;; ---------------------------------------------------------------------------------
  1109 ;; (1) _DS18B20Convert                                       2     2      0     237
  1110 ;;                                              4 BANK0      2     2      0
  1111 ;;                              _Reset
  1112 ;;                          _WriteByte
  1113 ;; ---------------------------------------------------------------------------------
  1114 ;; (1) _DS18B20Initial                                       2     2      0     237
  1115 ;;                                              4 BANK0      2     2      0
  1116 ;;                              _Reset
  1117 ;;                          _WriteByte
  1118 ;; ---------------------------------------------------------------------------------
  1119 ;; (4) ___lwtoft                                             3     0      3     231
  1120 ;;                                              8 BANK0      3     0      3
  1121 ;;                           ___ftpack
  1122 ;;                _GetLowDataRateValue (ARG)
  1123 ;;                    _GetLowGainValue (ARG)
  1124 ;;                   _GetHighGainValue (ARG)
  1125 ;; ---------------------------------------------------------------------------------
  1126 ;; (4) ___awtoft                                             4     1      3     300
  1127 ;;                                              8 BANK0      4     1      3
  1128 ;;                           ___ftpack
  1129 ;; ---------------------------------------------------------------------------------
  1130 ;; (3) ___lbtoft                                             4     1      3     231
  1131 ;;                                              8 BANK0      4     1      3
  1132 ;;                           ___ftpack
  1133 ;; ---------------------------------------------------------------------------------
  1134 ;; (3) ___ftmul                                             15     9      6     535
  1135 ;;                                             23 BANK0     15     9      6
  1136 ;;                           ___ftpack
  1137 ;;                           ___lbtoft (ARG)
  1138 ;;                          _ReadQitty (ARG)
  1139 ;;                               _fabs (ARG)
  1140 ;;                            ___ftadd (ARG)
  1141 ;;                           ___awtoft (ARG)
  1142 ;; ---------------------------------------------------------------------------------
  1143 ;; (4) ___ftdiv                                             15     9      6     489
  1144 ;;                                             38 BANK0     15     9      6
  1145 ;;                           ___ftpack
  1146 ;;                            ___ftmul (ARG)
  1147 ;;                           ___awtoft (ARG)
  1148 ;; ---------------------------------------------------------------------------------
  1149 ;; (4) ___ftadd                                             12     6      6    1049
  1150 ;;                                              8 BANK0     12     6      6
  1151 ;;                           ___ftpack
  1152 ;; ---------------------------------------------------------------------------------
  1153 ;; (3) _fabs                                                 3     0      3     247
  1154 ;;                                             20 BANK0      3     0      3
  1155 ;;                             ___ftge
  1156 ;;                            ___ftneg
  1157 ;;                            ___ftadd (ARG)
  1158 ;; ---------------------------------------------------------------------------------
  1159 ;; (2) _ReadByte                                             4     4      0      95
  1160 ;;                                              0 BANK0      4     4      0
  1161 ;; ---------------------------------------------------------------------------------
  1162 ;; (2) _WriteByte                                            4     4      0     117
  1163 ;;                                              0 BANK0      4     4      0
  1164 ;; ---------------------------------------------------------------------------------
  1165 ;; (3) _i2c_SendAcknowledge                                  2     2      0      22
  1166 ;;                                              0 BANK0      2     2      0
  1167 ;; ---------------------------------------------------------------------------------
  1168 ;; (4) _i2c_WaitForSCL                                       1     1      0       0
  1169 ;;                                              0 BANK0      1     1      0
  1170 ;; ---------------------------------------------------------------------------------
  1171 ;; (1) _SendService                                          0     0      0      22
  1172 ;;                              _putch
  1173 ;; ---------------------------------------------------------------------------------
  1174 ;; (2) _ReadSN                                               3     3      0     157
  1175 ;;                                              2 BANK0      3     3      0
  1176 ;;                             _ReadEE
  1177 ;; ---------------------------------------------------------------------------------
  1178 ;; (2) _WriteSN                                              2     1      1      88
  1179 ;;                                              2 BANK0      2     1      1
  1180 ;;                            _WriteEE
  1181 ;; ---------------------------------------------------------------------------------
  1182 ;; (3) _ReadQitty                                            0     0      0      45
  1183 ;;                             _ReadEE
  1184 ;; ---------------------------------------------------------------------------------
  1185 ;; (2) _WriteQitty                                           1     1      0      66
  1186 ;;                                              2 BANK0      1     1      0
  1187 ;;                            _WriteEE
  1188 ;; ---------------------------------------------------------------------------------
  1189 ;; (2) _i2c_Stop                                             1     1      0       0
  1190 ;;                                              0 BANK0      1     1      0
  1191 ;; ---------------------------------------------------------------------------------
  1192 ;; (2) _i2c_Restart                                          1     1      0       0
  1193 ;;                                              0 BANK0      1     1      0
  1194 ;; ---------------------------------------------------------------------------------
  1195 ;; (4) ___ftge                                               6     0      6     136
  1196 ;;                                              0 BANK0      6     0      6
  1197 ;; ---------------------------------------------------------------------------------
  1198 ;; (4) ___ftneg                                              3     0      3      45
  1199 ;;                                              0 BANK0      3     0      3
  1200 ;; ---------------------------------------------------------------------------------
  1201 ;; (4) ___ftpack                                             8     3      5     209
  1202 ;;                                              0 BANK0      8     3      5
  1203 ;; ---------------------------------------------------------------------------------
  1204 ;; (3) _memcpy                                               7     4      3     120
  1205 ;;                                              0 BANK0      7     4      3
  1206 ;; ---------------------------------------------------------------------------------
  1207 ;; (4) _GetLowDataRateValue                                  4     2      2      24
  1208 ;;                                              0 BANK0      4     2      2
  1209 ;; ---------------------------------------------------------------------------------
  1210 ;; (4) _GetLowGainValue                                      3     1      2      24
  1211 ;;                                              0 BANK0      3     1      2
  1212 ;; ---------------------------------------------------------------------------------
  1213 ;; (4) _GetHighGainValue                                     3     1      2      24
  1214 ;;                                              0 BANK0      3     1      2
  1215 ;; ---------------------------------------------------------------------------------
  1216 ;; (2) _Reset                                                3     3      0      96
  1217 ;;                                              0 BANK0      3     3      0
  1218 ;; ---------------------------------------------------------------------------------
  1219 ;; (1) _Delay                                                2     0      2      22
  1220 ;;                                              0 BANK0      2     0      2
  1221 ;; ---------------------------------------------------------------------------------
  1222 ;; (1) _timer1_init                                          0     0      0       0
  1223 ;; ---------------------------------------------------------------------------------
  1224 ;; (2) _putch                                                1     1      0      22
  1225 ;;                                              0 BANK0      1     1      0
  1226 ;; ---------------------------------------------------------------------------------
  1227 ;; (3) _ReadEE                                               2     2      0      45
  1228 ;;                                              0 BANK0      2     2      0
  1229 ;; ---------------------------------------------------------------------------------
  1230 ;; (3) _WriteEE                                              2     1      1      44
  1231 ;;                                              0 BANK0      2     1      1
  1232 ;; ---------------------------------------------------------------------------------
  1233 ;; (1) _AutoAdjustGain                                       0     0      0       0
  1234 ;; ---------------------------------------------------------------------------------
  1235 ;; (1) _ResetUart                                            0     0      0       0
  1236 ;; ---------------------------------------------------------------------------------
  1237 ;; (2) _RelayOff                                             0     0      0       0
  1238 ;; ---------------------------------------------------------------------------------
  1239 ;; (2) _RelayOn                                              0     0      0       0
  1240 ;; ---------------------------------------------------------------------------------
  1241 ;; Estimated maximum stack depth 4
  1242 ;; ---------------------------------------------------------------------------------
  1243 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1244 ;; ---------------------------------------------------------------------------------
  1245 ;; (6) _isr                                                  6     6      0     258
  1246 ;;                                              7 COMMON     6     6      0
  1247 ;;                        i1_ResetUart
  1248 ;;                         i1_RelayOff
  1249 ;;                       _SendRelayOff
  1250 ;; ---------------------------------------------------------------------------------
  1251 ;; (7) _SendRelayOff                                         6     6      0     258
  1252 ;;                                              1 COMMON     6     6      0
  1253 ;;                            i1_putch
  1254 ;; ---------------------------------------------------------------------------------
  1255 ;; (8) i1_putch                                              1     1      0      88
  1256 ;;                                              0 COMMON     1     1      0
  1257 ;; ---------------------------------------------------------------------------------
  1258 ;; (7) i1_ResetUart                                          0     0      0       0
  1259 ;; ---------------------------------------------------------------------------------
  1260 ;; (7) i1_RelayOff                                           0     0      0       0
  1261 ;; ---------------------------------------------------------------------------------
  1262 ;; Estimated maximum stack depth 8
  1263 ;; ---------------------------------------------------------------------------------
  1264 ;; Call Graph Graphs:
  1265 ;; _main (ROOT)
  1266 ;;   _ResetUart
  1267 ;;   _DS18B20Initial
  1268 ;;     _Reset
  1269 ;;     _WriteByte
  1270 ;;   _timer1_init
  1271 ;;   _DataHandle
  1272 ;;     _RelayOn
  1273 ;;     _RelayOff
  1274 ;;     _WriteQitty
  1275 ;;       _WriteEE
  1276 ;;     _ReadQitty
  1277 ;;       _ReadEE
  1278 ;;     _FormatData
  1279 ;;       _GetSensorH
  1280 ;;         _GetHighGainValue
  1281 ;;         ___lwtoft
  1282 ;;           ___ftpack
  1283 ;;           _GetLowDataRateValue (ARG)
  1284 ;;           _GetLowGainValue (ARG)
  1285 ;;           _GetHighGainValue (ARG)
  1286 ;;         ___awtoft
  1287 ;;           ___ftpack
  1288 ;;         ___ftmul
  1289 ;;           ___ftpack
  1290 ;;           ___lbtoft (ARG)
  1291 ;;             ___ftpack
  1292 ;;           _ReadQitty (ARG)
  1293 ;;             _ReadEE
  1294 ;;           _fabs (ARG)
  1295 ;;             ___ftge
  1296 ;;             ___ftneg
  1297 ;;             ___ftadd (ARG)
  1298 ;;               ___ftpack
  1299 ;;           ___ftadd (ARG)
  1300 ;;             ___ftpack
  1301 ;;           ___awtoft (ARG)
  1302 ;;             ___ftpack
  1303 ;;         ___ftdiv
  1304 ;;           ___ftpack
  1305 ;;           ___ftmul (ARG)
  1306 ;;             ___ftpack
  1307 ;;             ___lbtoft (ARG)
  1308 ;;               ___ftpack
  1309 ;;             _ReadQitty (ARG)
  1310 ;;               _ReadEE
  1311 ;;             _fabs (ARG)
  1312 ;;               ___ftge
  1313 ;;               ___ftneg
  1314 ;;               ___ftadd (ARG)
  1315 ;;                 ___ftpack
  1316 ;;             ___ftadd (ARG)
  1317 ;;               ___ftpack
  1318 ;;             ___awtoft (ARG)
  1319 ;;               ___ftpack
  1320 ;;           ___awtoft (ARG)
  1321 ;;             ___ftpack
  1322 ;;         ___ftge
  1323 ;;       _GetSensorL
  1324 ;;         _GetLowDataRateValue
  1325 ;;         ___lwtoft
  1326 ;;           ___ftpack
  1327 ;;           _GetLowDataRateValue (ARG)
  1328 ;;           _GetLowGainValue (ARG)
  1329 ;;           _GetHighGainValue (ARG)
  1330 ;;         _GetLowGainValue
  1331 ;;         ___awtoft
  1332 ;;           ___ftpack
  1333 ;;         ___ftmul
  1334 ;;           ___ftpack
  1335 ;;           ___lbtoft (ARG)
  1336 ;;             ___ftpack
  1337 ;;           _ReadQitty (ARG)
  1338 ;;             _ReadEE
  1339 ;;           _fabs (ARG)
  1340 ;;             ___ftge
  1341 ;;             ___ftneg
  1342 ;;             ___ftadd (ARG)
  1343 ;;               ___ftpack
  1344 ;;           ___ftadd (ARG)
  1345 ;;             ___ftpack
  1346 ;;           ___awtoft (ARG)
  1347 ;;             ___ftpack
  1348 ;;         ___ftdiv
  1349 ;;           ___ftpack
  1350 ;;           ___ftmul (ARG)
  1351 ;;             ___ftpack
  1352 ;;             ___lbtoft (ARG)
  1353 ;;               ___ftpack
  1354 ;;             _ReadQitty (ARG)
  1355 ;;               _ReadEE
  1356 ;;             _fabs (ARG)
  1357 ;;               ___ftge
  1358 ;;               ___ftneg
  1359 ;;               ___ftadd (ARG)
  1360 ;;                 ___ftpack
  1361 ;;             ___ftadd (ARG)
  1362 ;;               ___ftpack
  1363 ;;             ___awtoft (ARG)
  1364 ;;               ___ftpack
  1365 ;;           ___awtoft (ARG)
  1366 ;;             ___ftpack
  1367 ;;         ___ftge
  1368 ;;       _ReadQitty
  1369 ;;         _ReadEE
  1370 ;;       ___lbtoft
  1371 ;;         ___ftpack
  1372 ;;       ___ftsub
  1373 ;;         ___ftadd
  1374 ;;           ___ftpack
  1375 ;;         _fabs (ARG)
  1376 ;;           ___ftge
  1377 ;;           ___ftneg
  1378 ;;           ___ftadd (ARG)
  1379 ;;             ___ftpack
  1380 ;;         ___ftmul (ARG)
  1381 ;;           ___ftpack
  1382 ;;           ___lbtoft (ARG)
  1383 ;;             ___ftpack
  1384 ;;           _ReadQitty (ARG)
  1385 ;;             _ReadEE
  1386 ;;           _fabs (ARG)
  1387 ;;             ___ftge
  1388 ;;             ___ftneg
  1389 ;;             ___ftadd (ARG)
  1390 ;;               ___ftpack
  1391 ;;           ___ftadd (ARG)
  1392 ;;             ___ftpack
  1393 ;;           ___awtoft (ARG)
  1394 ;;             ___ftpack
  1395 ;;       _fabs
  1396 ;;         ___ftge
  1397 ;;         ___ftneg
  1398 ;;         ___ftadd (ARG)
  1399 ;;           ___ftpack
  1400 ;;       ___ftmul
  1401 ;;         ___ftpack
  1402 ;;         ___lbtoft (ARG)
  1403 ;;           ___ftpack
  1404 ;;         _ReadQitty (ARG)
  1405 ;;           _ReadEE
  1406 ;;         _fabs (ARG)
  1407 ;;           ___ftge
  1408 ;;           ___ftneg
  1409 ;;           ___ftadd (ARG)
  1410 ;;             ___ftpack
  1411 ;;         ___ftadd (ARG)
  1412 ;;           ___ftpack
  1413 ;;         ___awtoft (ARG)
  1414 ;;           ___ftpack
  1415 ;;       _memcpy
  1416 ;;     _WriteEE
  1417 ;;     _ReadEE
  1418 ;;     _WriteSN
  1419 ;;       _WriteEE
  1420 ;;     _ReadSN
  1421 ;;       _ReadEE
  1422 ;;   _SendService
  1423 ;;     _putch
  1424 ;;   _I2CReadH
  1425 ;;     _i2c_Restart
  1426 ;;     _i2c_PutByte
  1427 ;;       _i2c_SendByte
  1428 ;;         _i2c_WaitForSCL
  1429 ;;       _i2c_ReadAcknowledge
  1430 ;;         _i2c_WaitForSCL
  1431 ;;     _i2c_Stop
  1432 ;;     _i2c_GetByte
  1433 ;;       _i2c_ReadByte
  1434 ;;         _i2c_WaitForSCL
  1435 ;;       _i2c_SendAcknowledge
  1436 ;;   _Delay
  1437 ;;   _I2CReadL
  1438 ;;     _i2c_Restart
  1439 ;;     _i2c_PutByte
  1440 ;;       _i2c_SendByte
  1441 ;;         _i2c_WaitForSCL
  1442 ;;       _i2c_ReadAcknowledge
  1443 ;;         _i2c_WaitForSCL
  1444 ;;     _i2c_Stop
  1445 ;;     _i2c_GetByte
  1446 ;;       _i2c_ReadByte
  1447 ;;         _i2c_WaitForSCL
  1448 ;;       _i2c_SendAcknowledge
  1449 ;;   _AutoAdjustGain
  1450 ;;   _DS18B20Convert
  1451 ;;     _Reset
  1452 ;;     _WriteByte
  1453 ;;   _DS18B20ReadFlash
  1454 ;;     _Reset
  1455 ;;     _WriteByte
  1456 ;;     _ReadByte
  1457 ;;
  1458 ;; _isr (ROOT)
  1459 ;;   i1_ResetUart
  1460 ;;   i1_RelayOff
  1461 ;;   _SendRelayOff
  1462 ;;     i1_putch
  1463 ;;
  1464 ;; Address spaces:
  1465 ;;Name               Size   Autos  Total    Cost      Usage
  1466 ;;BITCOMMON            E      0       1       0        7.1%
  1467 ;;EEDATA             100      0       0       0        0.0%
  1468 ;;NULL                 0      0       0       0        0.0%
  1469 ;;CODE                 0      0       0       0        0.0%
  1470 ;;COMMON               E      D       E       1      100.0%
  1471 ;;BITSFR0              0      0       0       1        0.0%
  1472 ;;SFR0                 0      0       0       1        0.0%
  1473 ;;BITSFR1              0      0       0       2        0.0%
  1474 ;;SFR1                 0      0       0       2        0.0%
  1475 ;;STACK                0      0       B       2        0.0%
  1476 ;;ABS                  0      0      95       3        0.0%
  1477 ;;BITBANK0            50      0       0       4        0.0%
  1478 ;;BITSFR3              0      0       0       4        0.0%
  1479 ;;SFR3                 0      0       0       4        0.0%
  1480 ;;BANK0               50     50      50       5      100.0%
  1481 ;;BITSFR2              0      0       0       5        0.0%
  1482 ;;SFR2                 0      0       0       5        0.0%
  1483 ;;BITBANK1            50      0       1       6        1.3%
  1484 ;;BANK1               50      8      37       7       68.8%
  1485 ;;BITBANK3            60      0       0       8        0.0%
  1486 ;;BANK3               60      0       0       9        0.0%
  1487 ;;BITBANK2            60      0       0      10        0.0%
  1488 ;;BANK2               60      0       0      11        0.0%
  1489 ;;DATA                 0      0      A0      12        0.0%
  1490                           
  1491                           
  1492 ;; *************** function _main *****************
  1493 ;; Defined at:
  1494 ;;		line 350 in file "../Main.c"
  1495 ;; Parameters:    Size  Location     Type
  1496 ;;  argc            2    4[BANK1 ] int 
  1497 ;;  argv            2    6[BANK1 ] PTR PTR unsigned char 
  1498 ;; Auto vars:     Size  Location     Type
  1499 ;;		None
  1500 ;; Return value:  Size  Location     Type
  1501 ;;                  2    4[BANK1 ] int 
  1502 ;; Registers used:
  1503 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1504 ;; Tracked objects:
  1505 ;;		On entry : 17F/0
  1506 ;;		On exit  : 60/20
  1507 ;;		Unchanged: 0/0
  1508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1509 ;;      Params:         0       0       4       0       0
  1510 ;;      Locals:         0       0       0       0       0
  1511 ;;      Temps:          0       0       0       0       0
  1512 ;;      Totals:         0       0       4       0       0
  1513 ;;Total ram usage:        4 bytes
  1514 ;; Hardware stack levels required when called:    8
  1515 ;; This function calls:
  1516 ;;		_ResetUart
  1517 ;;		_DS18B20Initial
  1518 ;;		_timer1_init
  1519 ;;		_DataHandle
  1520 ;;		_SendService
  1521 ;;		_I2CReadH
  1522 ;;		_Delay
  1523 ;;		_I2CReadL
  1524 ;;		_AutoAdjustGain
  1525 ;;		_DS18B20Convert
  1526 ;;		_DS18B20ReadFlash
  1527 ;; This function is called by:
  1528 ;;		Startup code after reset
  1529 ;; This function uses a non-reentrant model
  1530 ;;
  1531  0DDA                     _main:	
  1532                           
  1533                           ;Main.c: 351: TRISA = 0B11111111;
  1534                           
  1535                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1536  0DDA  30FF               	movlw	255
  1537  0DDB  1683               	bsf	3,5	;RP0=1, select bank1
  1538  0DDC  0085               	movwf	5	;volatile
  1539                           
  1540                           ;Main.c: 352: TRISB = 0B11110110;
  1541  0DDD  30F6               	movlw	246
  1542  0DDE  0086               	movwf	6	;volatile
  1543                           
  1544                           ;Main.c: 353: PORTA = 0x00;
  1545  0DDF  1283               	bcf	3,5	;RP0=0, select bank0
  1546  0DE0  0185               	clrf	5	;volatile
  1547                           
  1548                           ;Main.c: 354: PORTB = 0x00;
  1549  0DE1  0186               	clrf	6	;volatile
  1550                           
  1551                           ;Main.c: 356: ANSEL = 0x00;
  1552  0DE2  1683               	bsf	3,5	;RP0=1, select bank1
  1553  0DE3  019B               	clrf	27	;volatile
  1554                           
  1555                           ;Main.c: 357: ADCON0 = 0x00;
  1556  0DE4  1283               	bcf	3,5	;RP0=0, select bank0
  1557  0DE5  019F               	clrf	31	;volatile
  1558                           
  1559                           ;Main.c: 358: ADCON1 = 0x00;
  1560  0DE6  1683               	bsf	3,5	;RP0=1, select bank1
  1561  0DE7  019F               	clrf	31	;volatile
  1562                           
  1563                           ;Main.c: 360: CCP1CON = 0x00;
  1564  0DE8  1283               	bcf	3,5	;RP0=0, select bank0
  1565  0DE9  0197               	clrf	23	;volatile
  1566                           
  1567                           ;Main.c: 361: CCPR1L = 0x7F;
  1568  0DEA  307F               	movlw	127
  1569  0DEB  0095               	movwf	21	;volatile
  1570                           
  1571                           ;Main.c: 362: CCPR1H = 0x7F;
  1572  0DEC  0096               	movwf	22	;volatile
  1573                           
  1574                           ;Main.c: 363: T1CON = 0B00110001;
  1575  0DED  3031               	movlw	49
  1576  0DEE  0090               	movwf	16	;volatile
  1577                           
  1578                           ;Main.c: 364: T2CON = 0B01111111;
  1579  0DEF  307F               	movlw	127
  1580  0DF0  0092               	movwf	18	;volatile
  1581                           
  1582                           ;Main.c: 365: PR2 = 0xD7;
  1583  0DF1  30D7               	movlw	215
  1584  0DF2  1683               	bsf	3,5	;RP0=1, select bank1
  1585  0DF3  0092               	movwf	18	;volatile
  1586  0DF4  3019               	movlw	25
  1587                           
  1588                           ;Main.c: 367: TRISB2 = 1; TRISB5 = 1; SPBRG = ((int)(4000000L/(16UL * 9600) -1)); RCSTA 
      +                          = (0|0x90); TXSTA = (0x4|0|0x20);
  1589  0DF5  1506               	bsf	6,2
  1590  0DF6  1686               	bsf	6,5
  1591  0DF7  0099               	movwf	25	;volatile
  1592  0DF8  3090               	movlw	144
  1593  0DF9  1283               	bcf	3,5	;RP0=0, select bank0
  1594  0DFA  0098               	movwf	24	;volatile
  1595  0DFB  3024               	movlw	36
  1596  0DFC  1683               	bsf	3,5	;RP0=1, select bank1
  1597  0DFD  0098               	movwf	24	;volatile
  1598                           
  1599                           ;Main.c: 368: SSPCON &=0xF0; SSPCON|=(0B1011 & 0xf);
  1600  0DFE  30F0               	movlw	240
  1601  0DFF  1283               	bcf	3,5	;RP0=0, select bank0
  1602  0E00  0594               	andwf	20,f	;volatile
  1603  0E01  300B               	movlw	11
  1604  0E02  0494               	iorwf	20,f	;volatile
  1605  0E03  3020               	movlw	32
  1606                           
  1607                           ;Main.c: 369: SSPEN = 1;
  1608  0E04  1694               	bsf	20,5
  1609  0E05  1614               	bsf	20,4
  1610                           
  1611                           ;Main.c: 372: PIE1 = 0B00100000;
  1612  0E06  1683               	bsf	3,5	;RP0=1, select bank1
  1613  0E07  008C               	movwf	12	;volatile
  1614                           
  1615                           ;Main.c: 373: PIR1 = 0B00000000;
  1616  0E08  1283               	bcf	3,5	;RP0=0, select bank0
  1617  0E09  018C               	clrf	12	;volatile
  1618                           
  1619                           ;Main.c: 374: PIR2 = 0B00000000;
  1620  0E0A  018D               	clrf	13	;volatile
  1621                           
  1622                           ;Main.c: 376: INTCON = 0B11000000;
  1623  0E0B  30C0               	movlw	192
  1624  0E0C  008B               	movwf	11	;volatile
  1625                           
  1626                           ;Main.c: 378: ResetUart();
  1627  0E0D  118A  27D0  158A   	fcall	_ResetUart
  1628  0E10  300C               	movlw	12
  1629                           
  1630                           ;Main.c: 379: unitAddr = 0x00;
  1631  0E11  01CD               	clrf	_unitAddr^(0+128)
  1632                           
  1633                           ;Main.c: 380: CFG_H = 0x0C;
  1634  0E12  00B1               	movwf	_CFG_H^(0+128)
  1635                           
  1636                           ;Main.c: 381: CFG_L = 0x0C;
  1637  0E13  00B2               	movwf	_CFG_L^(0+128)
  1638                           
  1639                           ;Main.c: 382: DS18B20Initial();
  1640  0E14  118A  2710  158A   	fcall	_DS18B20Initial
  1641                           
  1642                           ;Main.c: 384: TRISBbits.TRISB7=0;
  1643  0E17  1683               	bsf	3,5	;RP0=1, select bank1
  1644  0E18  1386               	bcf	6,7	;volatile
  1645                           
  1646                           ;Main.c: 385: PORTBbits.RB7=0;
  1647  0E19  1283               	bcf	3,5	;RP0=0, select bank0
  1648  0E1A  1386               	bcf	6,7	;volatile
  1649                           
  1650                           ;Main.c: 386: timer1_init();
  1651  0E1B  158A  2592  158A   	fcall	_timer1_init
  1652  0E1E                     l8715:	
  1653                           
  1654                           ;Main.c: 389: if(OERR){ CREN = 0; CREN = 1; }
  1655  0E1E  1283               	bcf	3,5	;RP0=0, select bank0
  1656  0E1F  1C98               	btfss	24,1
  1657  0E20  2E23               	goto	l793
  1658  0E21  1218               	bcf	24,4
  1659  0E22  1618               	bsf	24,4
  1660  0E23                     l793:	
  1661                           
  1662                           ;Main.c: 390: if(rcvTerminalOk == 1){
  1663  0E23  1EFD               	btfss	_rcvTerminalOk/(0+8),_rcvTerminalOk& (0+7)
  1664  0E24  2E2E               	goto	l8721
  1665                           
  1666                           ;Main.c: 391: DataHandle();
  1667  0E25  118A  23C3  158A   	fcall	_DataHandle
  1668                           
  1669                           ;Main.c: 392: SendService();
  1670  0E28  158A  25A4  158A   	fcall	_SendService
  1671                           
  1672                           ;Main.c: 393: ResetUart();
  1673  0E2B  118A  27D0  158A   	fcall	_ResetUart
  1674  0E2E                     l8721:	
  1675                           
  1676                           ;Main.c: 394: }
  1677                           ;Main.c: 395: idleCnt++;
  1678  0E2E  1683               	bsf	3,5	;RP0=1, select bank1
  1679  0E2F  0AAC               	incf	_idleCnt^(0+128),f
  1680  0E30  1903               	skipnz
  1681  0E31  0AAD               	incf	(_idleCnt+1)^(0+128),f
  1682                           
  1683                           ;Main.c: 396: if(idleCnt >= 50000){
  1684  0E32  30C3               	movlw	195
  1685  0E33  022D               	subwf	(_idleCnt+1)^(0+128),w
  1686  0E34  3050               	movlw	80
  1687  0E35  1903               	skipnz
  1688  0E36  022C               	subwf	_idleCnt^(0+128),w
  1689  0E37  1C03               	skipc
  1690  0E38  2E1E               	goto	l8715
  1691                           
  1692                           ;Main.c: 397: idleCnt = 0;
  1693  0E39  01AC               	clrf	_idleCnt^(0+128)
  1694  0E3A  01AD               	clrf	(_idleCnt+1)^(0+128)
  1695                           
  1696                           ;Main.c: 398: I2CReadH();
  1697  0E3B  118A  25C2  158A   	fcall	_I2CReadH
  1698                           
  1699                           ;Main.c: 399: Delay(100);
  1700  0E3E  3064               	movlw	100
  1701  0E3F  1283               	bcf	3,5	;RP0=0, select bank0
  1702  0E40  00A0               	movwf	?_Delay
  1703  0E41  01A1               	clrf	?_Delay+1
  1704  0E42  118A  27E9  158A   	fcall	_Delay
  1705                           
  1706                           ;Main.c: 400: I2CReadL();
  1707  0E45  118A  25A2  158A   	fcall	_I2CReadL
  1708                           
  1709                           ;Main.c: 402: if(DS18B20Convert() == 1){
  1710                           
  1711                           ;Main.c: 401: AutoAdjustGain();
  1712  0E48  118A  26D2  158A   	fcall	_DS18B20Convert
  1713  0E4B  3A01               	xorlw	1
  1714  0E4C  1D03               	skipz
  1715  0E4D  2E1E               	goto	l8715
  1716                           
  1717                           ;Main.c: 403: DS18B20ReadFlash();
  1718  0E4E  118A  26EB  158A   	fcall	_DS18B20ReadFlash
  1719                           
  1720                           ;Main.c: 404: T_M = T_Msb;
  1721  0E51  083C               	movf	_T_Msb^(0+128),w
  1722  0E52  00BB               	movwf	_T_M^(0+128)
  1723                           
  1724                           ;Main.c: 405: T_L = T_Lsb;
  1725  0E53  083A               	movf	_T_Lsb^(0+128),w
  1726  0E54  00B9               	movwf	_T_L^(0+128)
  1727  0E55  2E1E               	goto	l8715
  1728  0E56                     __end_of_main:	
  1729                           
  1730                           	psect	text1518
  1731  03C3                     __ptext1518:	
  1732 ;; =============== function _main ends ============
  1733                           
  1734                           
  1735 ;; *************** function _DataHandle *****************
  1736 ;; Defined at:
  1737 ;;		line 178 in file "../Main.c"
  1738 ;; Parameters:    Size  Location     Type
  1739 ;;		None
  1740 ;; Auto vars:     Size  Location     Type
  1741 ;;  snNumL          1    3[BANK1 ] unsigned char 
  1742 ;;  snNumH          1    2[BANK1 ] unsigned char 
  1743 ;; Return value:  Size  Location     Type
  1744 ;;		None               void
  1745 ;; Registers used:
  1746 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1747 ;; Tracked objects:
  1748 ;;		On entry : 60/0
  1749 ;;		On exit  : 40/0
  1750 ;;		Unchanged: 0/0
  1751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1752 ;;      Params:         0       0       0       0       0
  1753 ;;      Locals:         0       0       2       0       0
  1754 ;;      Temps:          0       0       2       0       0
  1755 ;;      Totals:         0       0       4       0       0
  1756 ;;Total ram usage:        4 bytes
  1757 ;; Hardware stack levels used:    1
  1758 ;; Hardware stack levels required when called:    7
  1759 ;; This function calls:
  1760 ;;		_RelayOn
  1761 ;;		_RelayOff
  1762 ;;		_WriteQitty
  1763 ;;		_ReadQitty
  1764 ;;		_FormatData
  1765 ;;		_WriteEE
  1766 ;;		_ReadEE
  1767 ;;		_WriteSN
  1768 ;;		_ReadSN
  1769 ;; This function is called by:
  1770 ;;		_main
  1771 ;; This function uses a non-reentrant model
  1772 ;;
  1773  03C3                     _DataHandle:	
  1774                           
  1775                           ;Main.c: 180: if(rcvCommand == 0x00){
  1776                           
  1777                           ; Regs used in _DataHandle: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1778  03C3  1683               	bsf	3,5	;RP0=1, select bank1
  1779  03C4  08BE               	movf	_rcvCommand^(0+128),f
  1780  03C5  1D03               	skipz
  1781  03C6  2BDC               	goto	l8265
  1782                           
  1783                           ;Main.c: 181: sndCommand = rcvCommand;
  1784  03C7  083E               	movf	_rcvCommand^(0+128),w
  1785  03C8  00C2               	movwf	_sndCommand^(0+128)
  1786                           
  1787                           ;Main.c: 182: sndLength = rcvLength;
  1788  03C9  0840               	movf	_rcvLength^(0+128),w
  1789  03CA  00C4               	movwf	_sndLength^(0+128)
  1790                           
  1791                           ;Main.c: 183: sndData[0] = rcvData[0];
  1792  03CB  0820               	movf	_rcvData^(0+128),w
  1793  03CC  00C5               	movwf	_sndData^(0+128)
  1794                           
  1795                           ;Main.c: 184: sndData[1] = rcvData[1];
  1796  03CD  0821               	movf	(_rcvData^(0+128)+1),w
  1797  03CE  00C6               	movwf	(_sndData^(0+128)+1)
  1798                           
  1799                           ;Main.c: 185: sndData[2] = rcvData[2];
  1800  03CF  0822               	movf	(_rcvData^(0+128)+2),w
  1801  03D0  00C7               	movwf	(_sndData^(0+128)+2)
  1802                           
  1803                           ;Main.c: 186: sndData[3] = rcvData[3];
  1804  03D1  0823               	movf	(_rcvData^(0+128)+3),w
  1805  03D2  00C8               	movwf	(_sndData^(0+128)+3)
  1806                           
  1807                           ;Main.c: 187: sndData[4] = rcvData[4];
  1808  03D3  0824               	movf	(_rcvData^(0+128)+4),w
  1809  03D4  00C9               	movwf	(_sndData^(0+128)+4)
  1810                           
  1811                           ;Main.c: 188: sndData[5] = rcvData[5];
  1812  03D5  0825               	movf	(_rcvData^(0+128)+5),w
  1813  03D6  00CA               	movwf	(_sndData^(0+128)+5)
  1814                           
  1815                           ;Main.c: 189: sndData[6] = rcvData[6];
  1816  03D7  0826               	movf	(_rcvData^(0+128)+6),w
  1817  03D8  00CB               	movwf	(_sndData^(0+128)+6)
  1818                           
  1819                           ;Main.c: 190: sndData[7] = rcvData[7];
  1820  03D9  0827               	movf	(_rcvData^(0+128)+7),w
  1821  03DA  00CC               	movwf	(_sndData^(0+128)+7)
  1822                           
  1823                           ;Main.c: 192: }else if(rcvCommand == 0x11){
  1824  03DB  0008               	return
  1825  03DC                     l8265:	
  1826  03DC  083E               	movf	_rcvCommand^(0+128),w
  1827  03DD  3A11               	xorlw	17
  1828  03DE  1D03               	skipz
  1829  03DF  2C39               	goto	l8273
  1830                           
  1831                           ;Main.c: 193: RelayOn();
  1832  03E0  2509  118A         	fcall	_RelayOn
  1833  03E2  2C34               	goto	l8269
  1834  03E3                     l8275:	
  1835                           
  1836                           ;Main.c: 198: RelayOff();
  1837  03E3  2557  118A         	fcall	_RelayOff
  1838  03E5  2C34               	goto	l8269
  1839  03E6                     l8283:	
  1840                           
  1841                           ;Main.c: 203: RelayOn();
  1842  03E6  2509  118A         	fcall	_RelayOn
  1843                           
  1844                           ;Main.c: 204: timer1_counter = 0;
  1845  03E8  1683               	bsf	3,5	;RP0=1, select bank1
  1846  03E9  01AE               	clrf	_timer1_counter^(0+128)
  1847  03EA  01AF               	clrf	(_timer1_counter+1)^(0+128)
  1848                           
  1849                           ;Main.c: 205: delay_flag = 1;
  1850  03EB  01AA               	clrf	_delay_flag^(0+128)
  1851  03EC  0AAA               	incf	_delay_flag^(0+128),f
  1852  03ED  01AB               	clrf	(_delay_flag+1)^(0+128)
  1853  03EE  2C34               	goto	l8269
  1854  03EF                     l8295:	
  1855                           
  1856                           ;Main.c: 210: CFG_H = CFG_H & 0x7F | rcvData[0] << 7 & 0x80;
  1857  03EF  0820               	movf	_rcvData^(0+128),w
  1858  03F0  00CE               	movwf	??_DataHandle^(0+128)
  1859  03F1  3007               	movlw	7
  1860  03F2                     u2545:	
  1861  03F2  1003               	clrc
  1862  03F3  0DCE               	rlf	??_DataHandle^(0+128),f
  1863  03F4  3EFF               	addlw	-1
  1864  03F5  1D03               	skipz
  1865  03F6  2BF2               	goto	u2545
  1866  03F7  3080               	movlw	128
  1867  03F8  054E               	andwf	??_DataHandle^(0+128),w
  1868  03F9  00CF               	movwf	(??_DataHandle+1)^(0+128)
  1869  03FA  0831               	movf	_CFG_H^(0+128),w
  1870  03FB  397F               	andlw	127
  1871  03FC  2C16               	goto	L2
  1872  03FD                     l8303:	
  1873                           
  1874                           ;Main.c: 215: CFG_L = CFG_L & 0x7F | rcvData[0] << 7 & 0x80;
  1875  03FD  0820               	movf	_rcvData^(0+128),w
  1876  03FE  00CE               	movwf	??_DataHandle^(0+128)
  1877  03FF  3007               	movlw	7
  1878  0400                     u2565:	
  1879  0400  1003               	clrc
  1880  0401  0DCE               	rlf	??_DataHandle^(0+128),f
  1881  0402  3EFF               	addlw	-1
  1882  0403  1D03               	skipz
  1883  0404  2C00               	goto	u2565
  1884  0405  3080               	movlw	128
  1885  0406  054E               	andwf	??_DataHandle^(0+128),w
  1886  0407  00CF               	movwf	(??_DataHandle+1)^(0+128)
  1887  0408  0832               	movf	_CFG_L^(0+128),w
  1888  0409  397F               	andlw	127
  1889  040A  2C23               	goto	L3
  1890  040B                     l8311:	
  1891                           
  1892                           ;Main.c: 220: CFG_H = CFG_H & 0xF3 | rcvData[0] << 2 & 0x0C;
  1893  040B  0820               	movf	_rcvData^(0+128),w
  1894  040C  00CE               	movwf	??_DataHandle^(0+128)
  1895  040D  300C               	movlw	12
  1896  040E  1003               	clrc
  1897  040F  0DCE               	rlf	??_DataHandle^(0+128),f
  1898  0410  1003               	clrc
  1899  0411  0DCE               	rlf	??_DataHandle^(0+128),f
  1900  0412  054E               	andwf	??_DataHandle^(0+128),w
  1901  0413  00CF               	movwf	(??_DataHandle+1)^(0+128)
  1902  0414  0831               	movf	_CFG_H^(0+128),w
  1903  0415  39F3               	andlw	243
  1904  0416                     L2:	
  1905  0416  044F               	iorwf	(??_DataHandle+1)^(0+128),w
  1906  0417  2C2B               	goto	L4
  1907  0418                     l8319:	
  1908                           
  1909                           ;Main.c: 225: CFG_L = CFG_L & 0xF3 | rcvData[0] << 2 & 0x0C;
  1910  0418  0820               	movf	_rcvData^(0+128),w
  1911  0419  00CE               	movwf	??_DataHandle^(0+128)
  1912  041A  300C               	movlw	12
  1913  041B  1003               	clrc
  1914  041C  0DCE               	rlf	??_DataHandle^(0+128),f
  1915  041D  1003               	clrc
  1916  041E  0DCE               	rlf	??_DataHandle^(0+128),f
  1917  041F  054E               	andwf	??_DataHandle^(0+128),w
  1918  0420  00CF               	movwf	(??_DataHandle+1)^(0+128)
  1919  0421  0832               	movf	_CFG_L^(0+128),w
  1920  0422  39F3               	andlw	243
  1921  0423                     L3:	
  1922  0423  044F               	iorwf	(??_DataHandle+1)^(0+128),w
  1923  0424  2C33               	goto	L5
  1924  0425                     l8327:	
  1925                           
  1926                           ;Main.c: 230: CFG_H = CFG_H & 0xFC | rcvData[0] & 0x03;
  1927  0425  3003               	movlw	3
  1928  0426  0520               	andwf	_rcvData^(0+128),w
  1929  0427  00CE               	movwf	??_DataHandle^(0+128)
  1930  0428  0831               	movf	_CFG_H^(0+128),w
  1931  0429  39FC               	andlw	252
  1932  042A  044E               	iorwf	??_DataHandle^(0+128),w
  1933  042B                     L4:	
  1934  042B  00B1               	movwf	_CFG_H^(0+128)
  1935  042C  2C34               	goto	l8269
  1936  042D                     l8335:	
  1937                           
  1938                           ;Main.c: 235: CFG_L = CFG_L & 0xFC | rcvData[0] & 0x03;
  1939  042D  3003               	movlw	3
  1940  042E  0520               	andwf	_rcvData^(0+128),w
  1941  042F  00CE               	movwf	??_DataHandle^(0+128)
  1942  0430  0832               	movf	_CFG_L^(0+128),w
  1943  0431  39FC               	andlw	252
  1944  0432  044E               	iorwf	??_DataHandle^(0+128),w
  1945  0433                     L5:	
  1946  0433  00B2               	movwf	_CFG_L^(0+128)
  1947  0434                     l8269:	
  1948                           
  1949                           ;Main.c: 194: sndCommand = rcvCommand;
  1950  0434  1683               	bsf	3,5	;RP0=1, select bank1
  1951  0435  083E               	movf	_rcvCommand^(0+128),w
  1952  0436  00C2               	movwf	_sndCommand^(0+128)
  1953                           
  1954                           ;Main.c: 195: sndLength = 0;
  1955  0437  01C4               	clrf	_sndLength^(0+128)
  1956                           
  1957                           ;Main.c: 197: }else if(rcvCommand == 0x12){
  1958  0438  0008               	return
  1959  0439                     l8273:	
  1960  0439  083E               	movf	_rcvCommand^(0+128),w
  1961  043A  3A12               	xorlw	18
  1962  043B  1903               	btfsc	3,2
  1963  043C  2BE3               	goto	l8275
  1964  043D  083E               	movf	_rcvCommand^(0+128),w
  1965  043E  3A35               	xorlw	53
  1966  043F  1903               	btfsc	3,2
  1967  0440  2BE6               	goto	l8283
  1968  0441  083E               	movf	_rcvCommand^(0+128),w
  1969  0442  3A13               	xorlw	19
  1970  0443  1903               	btfsc	3,2
  1971  0444  2BEF               	goto	l8295
  1972  0445  083E               	movf	_rcvCommand^(0+128),w
  1973  0446  3A14               	xorlw	20
  1974  0447  1903               	btfsc	3,2
  1975  0448  2BFD               	goto	l8303
  1976  0449  083E               	movf	_rcvCommand^(0+128),w
  1977  044A  3A15               	xorlw	21
  1978  044B  1903               	btfsc	3,2
  1979  044C  2C0B               	goto	l8311
  1980  044D  083E               	movf	_rcvCommand^(0+128),w
  1981  044E  3A16               	xorlw	22
  1982  044F  1903               	btfsc	3,2
  1983  0450  2C18               	goto	l8319
  1984  0451  083E               	movf	_rcvCommand^(0+128),w
  1985  0452  3A17               	xorlw	23
  1986  0453  1903               	btfsc	3,2
  1987  0454  2C25               	goto	l8327
  1988  0455  083E               	movf	_rcvCommand^(0+128),w
  1989  0456  3A18               	xorlw	24
  1990  0457  1903               	btfsc	3,2
  1991  0458  2C2D               	goto	l8335
  1992  0459  083E               	movf	_rcvCommand^(0+128),w
  1993  045A  3A21               	xorlw	33
  1994  045B  1D03               	skipz
  1995  045C  2C68               	goto	l8345
  1996                           
  1997                           ;Main.c: 240: sndCommand = rcvCommand;
  1998  045D  083E               	movf	_rcvCommand^(0+128),w
  1999  045E  00C2               	movwf	_sndCommand^(0+128)
  2000                           
  2001                           ;Main.c: 241: sndLength = 3;
  2002  045F  3003               	movlw	3
  2003  0460  00C4               	movwf	_sndLength^(0+128)
  2004                           
  2005                           ;Main.c: 242: sndData[0] = H_M;
  2006  0461  0834               	movf	_H_M^(0+128),w
  2007  0462  00C5               	movwf	_sndData^(0+128)
  2008                           
  2009                           ;Main.c: 243: sndData[1] = H_L;
  2010  0463  0833               	movf	_H_L^(0+128),w
  2011  0464  00C6               	movwf	(_sndData^(0+128)+1)
  2012                           
  2013                           ;Main.c: 244: sndData[2] = H_S;
  2014  0465  0835               	movf	_H_S^(0+128),w
  2015  0466  00C7               	movwf	(_sndData^(0+128)+2)
  2016                           
  2017                           ;Main.c: 246: }else if(rcvCommand == 0x22){
  2018  0467  0008               	return
  2019  0468                     l8345:	
  2020  0468  083E               	movf	_rcvCommand^(0+128),w
  2021  0469  3A22               	xorlw	34
  2022  046A  1D03               	skipz
  2023  046B  2C77               	goto	l8349
  2024                           
  2025                           ;Main.c: 247: sndCommand = rcvCommand;
  2026  046C  083E               	movf	_rcvCommand^(0+128),w
  2027  046D  00C2               	movwf	_sndCommand^(0+128)
  2028                           
  2029                           ;Main.c: 248: sndLength = 3;
  2030  046E  3003               	movlw	3
  2031  046F  00C4               	movwf	_sndLength^(0+128)
  2032                           
  2033                           ;Main.c: 249: sndData[0] = L_M;
  2034  0470  0837               	movf	_L_M^(0+128),w
  2035  0471  00C5               	movwf	_sndData^(0+128)
  2036                           
  2037                           ;Main.c: 250: sndData[1] = L_L;
  2038  0472  0836               	movf	_L_L^(0+128),w
  2039  0473  00C6               	movwf	(_sndData^(0+128)+1)
  2040                           
  2041                           ;Main.c: 251: sndData[2] = L_S;
  2042  0474  0838               	movf	_L_S^(0+128),w
  2043  0475  00C7               	movwf	(_sndData^(0+128)+2)
  2044                           
  2045                           ;Main.c: 253: }else if(rcvCommand == 0x23){
  2046  0476  0008               	return
  2047  0477                     l8349:	
  2048  0477  083E               	movf	_rcvCommand^(0+128),w
  2049  0478  3A23               	xorlw	35
  2050  0479  1D03               	skipz
  2051  047A  2C84               	goto	l8353
  2052                           
  2053                           ;Main.c: 254: sndCommand = rcvCommand;
  2054  047B  083E               	movf	_rcvCommand^(0+128),w
  2055  047C  00C2               	movwf	_sndCommand^(0+128)
  2056                           
  2057                           ;Main.c: 255: sndLength = 2;
  2058  047D  3002               	movlw	2
  2059  047E  00C4               	movwf	_sndLength^(0+128)
  2060                           
  2061                           ;Main.c: 256: sndData[0] = T_M;
  2062  047F  083B               	movf	_T_M^(0+128),w
  2063  0480  00C5               	movwf	_sndData^(0+128)
  2064                           
  2065                           ;Main.c: 257: sndData[1] = T_L;
  2066  0481  0839               	movf	_T_L^(0+128),w
  2067  0482  00C6               	movwf	(_sndData^(0+128)+1)
  2068                           
  2069                           ;Main.c: 259: }else if(rcvCommand == 0x24){
  2070  0483  0008               	return
  2071  0484                     l8353:	
  2072  0484  083E               	movf	_rcvCommand^(0+128),w
  2073  0485  3A24               	xorlw	36
  2074  0486  1D03               	skipz
  2075  0487  2C9D               	goto	l8357
  2076                           
  2077                           ;Main.c: 260: sndCommand = rcvCommand;
  2078  0488  083E               	movf	_rcvCommand^(0+128),w
  2079  0489  00C2               	movwf	_sndCommand^(0+128)
  2080                           
  2081                           ;Main.c: 261: sndLength = 8;
  2082  048A  3008               	movlw	8
  2083  048B  00C4               	movwf	_sndLength^(0+128)
  2084                           
  2085                           ;Main.c: 262: sndData[0] = H_M;
  2086  048C  0834               	movf	_H_M^(0+128),w
  2087  048D  00C5               	movwf	_sndData^(0+128)
  2088                           
  2089                           ;Main.c: 263: sndData[1] = H_L;
  2090  048E  0833               	movf	_H_L^(0+128),w
  2091  048F  00C6               	movwf	(_sndData^(0+128)+1)
  2092                           
  2093                           ;Main.c: 264: sndData[2] = H_S;
  2094  0490  0835               	movf	_H_S^(0+128),w
  2095  0491  00C7               	movwf	(_sndData^(0+128)+2)
  2096                           
  2097                           ;Main.c: 265: sndData[3] = L_M;
  2098  0492  0837               	movf	_L_M^(0+128),w
  2099  0493  00C8               	movwf	(_sndData^(0+128)+3)
  2100                           
  2101                           ;Main.c: 266: sndData[4] = L_L;
  2102  0494  0836               	movf	_L_L^(0+128),w
  2103  0495  00C9               	movwf	(_sndData^(0+128)+4)
  2104                           
  2105                           ;Main.c: 267: sndData[5] = L_S;
  2106  0496  0838               	movf	_L_S^(0+128),w
  2107  0497  00CA               	movwf	(_sndData^(0+128)+5)
  2108                           
  2109                           ;Main.c: 268: sndData[6] = T_M;
  2110  0498  083B               	movf	_T_M^(0+128),w
  2111  0499  00CB               	movwf	(_sndData^(0+128)+6)
  2112                           
  2113                           ;Main.c: 269: sndData[7] = T_L;
  2114  049A  0839               	movf	_T_L^(0+128),w
  2115  049B  00CC               	movwf	(_sndData^(0+128)+7)
  2116                           
  2117                           ;Main.c: 271: }else if(rcvCommand == 0x40){
  2118  049C  0008               	return
  2119  049D                     l8357:	
  2120  049D  083E               	movf	_rcvCommand^(0+128),w
  2121  049E  3A40               	xorlw	64
  2122  049F  1D03               	skipz
  2123  04A0  2CAC               	goto	l8367
  2124                           
  2125                           ;Main.c: 272: sndCommand = rcvCommand;
  2126  04A1  083E               	movf	_rcvCommand^(0+128),w
  2127  04A2  00C2               	movwf	_sndCommand^(0+128)
  2128                           
  2129                           ;Main.c: 273: WriteQitty(rcvData[0]);
  2130  04A3  0820               	movf	_rcvData^(0+128),w
  2131  04A4  2569               	fcall	_WriteQitty
  2132                           
  2133                           ;Main.c: 274: sndLength = 1;
  2134  04A5  1683               	bsf	3,5	;RP0=1, select bank1
  2135  04A6  1303               	bcf	3,6	;RP1=0, select bank1
  2136  04A7  01C4               	clrf	_sndLength^(0+128)
  2137  04A8  0AC4               	incf	_sndLength^(0+128),f
  2138                           
  2139                           ;Main.c: 275: sndData[0] = rcvData[0];
  2140  04A9  0820               	movf	_rcvData^(0+128),w
  2141  04AA  00C5               	movwf	_sndData^(0+128)
  2142                           
  2143                           ;Main.c: 277: }else if(rcvCommand == 0x41) {
  2144  04AB  0008               	return
  2145  04AC                     l8367:	
  2146  04AC  083E               	movf	_rcvCommand^(0+128),w
  2147  04AD  3A41               	xorlw	65
  2148  04AE  1D03               	skipz
  2149  04AF  2CB9               	goto	l8375
  2150                           
  2151                           ;Main.c: 278: sndCommand = rcvCommand;
  2152  04B0  083E               	movf	_rcvCommand^(0+128),w
  2153  04B1  00C2               	movwf	_sndCommand^(0+128)
  2154                           
  2155                           ;Main.c: 279: sndLength = 1;
  2156  04B2  01C4               	clrf	_sndLength^(0+128)
  2157  04B3  0AC4               	incf	_sndLength^(0+128),f
  2158                           
  2159                           ;Main.c: 280: sndData[0] = ReadQitty();
  2160  04B4  118A  235B         	fcall	_ReadQitty
  2161  04B6  1683               	bsf	3,5	;RP0=1, select bank1
  2162  04B7  00C5               	movwf	_sndData^(0+128)
  2163                           
  2164                           ;Main.c: 282: }else if(rcvCommand == 0x42){
  2165  04B8  0008               	return
  2166  04B9                     l8375:	
  2167  04B9  083E               	movf	_rcvCommand^(0+128),w
  2168  04BA  3A42               	xorlw	66
  2169  04BB  1D03               	skipz
  2170  04BC  2CC4               	goto	l8381
  2171                           
  2172                           ;Main.c: 283: sndCommand = rcvCommand;
  2173  04BD  083E               	movf	_rcvCommand^(0+128),w
  2174  04BE  00C2               	movwf	_sndCommand^(0+128)
  2175                           
  2176                           ;Main.c: 284: sndLength = 8;
  2177  04BF  3008               	movlw	8
  2178  04C0  00C4               	movwf	_sndLength^(0+128)
  2179                           
  2180                           ;Main.c: 285: FormatData(sndData);
  2181  04C1  30C5               	movlw	_sndData& (0+255)
  2182  04C2  118A  280F         	ljmp	_FormatData
  2183  04C4                     l8381:	
  2184                           ;Main.c: 287: }else if(rcvCommand == 0x31){
  2185                           
  2186  04C4  083E               	movf	_rcvCommand^(0+128),w
  2187  04C5  3A31               	xorlw	49
  2188  04C6  1D03               	skipz
  2189  04C7  2CD8               	goto	l8393
  2190                           
  2191                           ;Main.c: 288: WriteEE(rcvData[0], rcvData[1]);
  2192  04C8  0821               	movf	(_rcvData^(0+128)+1),w
  2193  04C9  1283               	bcf	3,5	;RP0=0, select bank0
  2194  04CA  00A0               	movwf	?_WriteEE
  2195  04CB  1683               	bsf	3,5	;RP0=1, select bank1
  2196  04CC  0820               	movf	_rcvData^(0+128),w
  2197  04CD  253C               	fcall	_WriteEE
  2198                           
  2199                           ;Main.c: 289: sndCommand = rcvCommand;
  2200  04CE  1303               	bcf	3,6	;RP1=0, select bank1
  2201  04CF  083E               	movf	_rcvCommand^(0+128),w
  2202  04D0  00C2               	movwf	_sndCommand^(0+128)
  2203                           
  2204                           ;Main.c: 290: sndLength = 2;
  2205  04D1  3002               	movlw	2
  2206  04D2                     L1:	
  2207  04D2  00C4               	movwf	_sndLength^(0+128)
  2208                           
  2209                           ;Main.c: 291: sndData[0] = rcvData[0];
  2210  04D3  0820               	movf	_rcvData^(0+128),w
  2211  04D4  00C5               	movwf	_sndData^(0+128)
  2212                           
  2213                           ;Main.c: 292: sndData[1] = rcvData[1];
  2214  04D5  0821               	movf	(_rcvData^(0+128)+1),w
  2215  04D6  00C6               	movwf	(_sndData^(0+128)+1)
  2216                           
  2217                           ;Main.c: 293: }else if(rcvCommand == 0x32) {
  2218  04D7  0008               	return
  2219  04D8                     l8393:	
  2220  04D8  083E               	movf	_rcvCommand^(0+128),w
  2221  04D9  3A32               	xorlw	50
  2222  04DA  1D03               	skipz
  2223  04DB  2CE7               	goto	l8399
  2224                           
  2225                           ;Main.c: 294: sndCommand = rcvCommand;
  2226  04DC  083E               	movf	_rcvCommand^(0+128),w
  2227  04DD  00C2               	movwf	_sndCommand^(0+128)
  2228                           
  2229                           ;Main.c: 295: sndLength = 2;
  2230  04DE  3002               	movlw	2
  2231  04DF  00C4               	movwf	_sndLength^(0+128)
  2232                           
  2233                           ;Main.c: 296: sndData[0] = rcvData[0];
  2234  04E0  0820               	movf	_rcvData^(0+128),w
  2235  04E1  00C5               	movwf	_sndData^(0+128)
  2236                           
  2237                           ;Main.c: 297: sndData[1] = ReadEE(rcvData[0]);
  2238  04E2  0820               	movf	_rcvData^(0+128),w
  2239  04E3  255A               	fcall	_ReadEE
  2240  04E4  1683               	bsf	3,5	;RP0=1, select bank1
  2241  04E5  00C6               	movwf	(_sndData^(0+128)+1)
  2242                           
  2243                           ;Main.c: 298: }else if(rcvCommand == 0x33){
  2244  04E6  0008               	return
  2245  04E7                     l8399:	
  2246  04E7  083E               	movf	_rcvCommand^(0+128),w
  2247  04E8  3A33               	xorlw	51
  2248  04E9  1D03               	skipz
  2249  04EA  2CFF               	goto	l8415
  2250                           
  2251                           ;Main.c: 299: if(rcvLength == 0x02)
  2252  04EB  0840               	movf	_rcvLength^(0+128),w
  2253  04EC  3A02               	xorlw	2
  2254  04ED  1D03               	skipz
  2255  04EE  0008               	return
  2256                           
  2257                           ;Main.c: 300: {
  2258                           ;Main.c: 301: unsigned char snNumH, snNumL;
  2259                           ;Main.c: 302: snNumH = rcvData[0];
  2260  04EF  0820               	movf	_rcvData^(0+128),w
  2261  04F0  00D0               	movwf	DataHandle@snNumH^(0+128)
  2262                           
  2263                           ;Main.c: 303: snNumL = rcvData[1];
  2264  04F1  0821               	movf	(_rcvData^(0+128)+1),w
  2265  04F2  00D1               	movwf	DataHandle@snNumL^(0+128)
  2266                           
  2267                           ;Main.c: 304: WriteSN(snNumH, snNumL);
  2268  04F3  1283               	bcf	3,5	;RP0=0, select bank0
  2269  04F4  00A2               	movwf	?_WriteSN
  2270  04F5  1683               	bsf	3,5	;RP0=1, select bank1
  2271  04F6  0850               	movf	DataHandle@snNumH^(0+128),w
  2272  04F7  250C  118A         	fcall	_WriteSN
  2273                           
  2274                           ;Main.c: 306: sndCommand = rcvCommand;
  2275  04F9  1683               	bsf	3,5	;RP0=1, select bank1
  2276  04FA  1303               	bcf	3,6	;RP1=0, select bank1
  2277  04FB  083E               	movf	_rcvCommand^(0+128),w
  2278  04FC  00C2               	movwf	_sndCommand^(0+128)
  2279                           
  2280                           ;Main.c: 307: sndLength = rcvLength;
  2281  04FD  0840               	movf	_rcvLength^(0+128),w
  2282  04FE  2CD2               	goto	L1
  2283  04FF                     l8415:	
  2284  04FF  083E               	movf	_rcvCommand^(0+128),w
  2285  0500  3A34               	xorlw	52
  2286  0501  1D03               	skipz
  2287  0502  2C34               	goto	l8269
  2288                           
  2289                           ;Main.c: 312: sndCommand = rcvCommand;
  2290  0503  083E               	movf	_rcvCommand^(0+128),w
  2291  0504  00C2               	movwf	_sndCommand^(0+128)
  2292                           
  2293                           ;Main.c: 313: sndLength = 6;
  2294  0505  3006               	movlw	6
  2295  0506  00C4               	movwf	_sndLength^(0+128)
  2296                           
  2297                           ;Main.c: 314: ReadSN(sndData);
  2298  0507  30C5               	movlw	_sndData& (0+255)
  2299  0508  2D71               	ljmp	_ReadSN
  2300  0509                     __end_of_DataHandle:	
  2301  0509                     __ptext1567:	
  2302 ;; =============== function _RelayOff ends ============
  2303                           
  2304                           
  2305 ;; *************** function _RelayOn *****************
  2306 ;; Defined at:
  2307 ;;		line 125 in file "../Main.c"
  2308 ;; Parameters:    Size  Location     Type
  2309 ;;		None
  2310 ;; Auto vars:     Size  Location     Type
  2311 ;;		None
  2312 ;; Return value:  Size  Location     Type
  2313 ;;		None               void
  2314 ;; Registers used:
  2315 ;;		None
  2316 ;; Tracked objects:
  2317 ;;		On entry : 60/20
  2318 ;;		On exit  : 60/0
  2319 ;;		Unchanged: FFF9F/0
  2320 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2321 ;;      Params:         0       0       0       0       0
  2322 ;;      Locals:         0       0       0       0       0
  2323 ;;      Temps:          0       0       0       0       0
  2324 ;;      Totals:         0       0       0       0       0
  2325 ;;Total ram usage:        0 bytes
  2326 ;; Hardware stack levels used:    1
  2327 ;; Hardware stack levels required when called:    3
  2328 ;; This function calls:
  2329 ;;		Nothing
  2330 ;; This function is called by:
  2331 ;;		_DataHandle
  2332 ;; This function uses a non-reentrant model
  2333 ;;
  2334  0509                     _RelayOn:	
  2335                           
  2336                           ; Regs used in _RelayOn: []
  2337  0509  1283               	bcf	3,5	;RP0=0, select bank0
  2338  050A  1406               	bsf	6,0
  2339  050B  0008               	return
  2340  050C                     __end_of_RelayOn:	
  2341  050C                     __ptext1546:	
  2342 ;; =============== function _ReadSN ends ============
  2343                           
  2344                           
  2345 ;; *************** function _WriteSN *****************
  2346 ;; Defined at:
  2347 ;;		line 38 in file "../eeprom.c"
  2348 ;; Parameters:    Size  Location     Type
  2349 ;;  numH            1    wreg     unsigned char 
  2350 ;;  numL            1    2[BANK0 ] unsigned char 
  2351 ;; Auto vars:     Size  Location     Type
  2352 ;;  numH            1    3[BANK0 ] unsigned char 
  2353 ;; Return value:  Size  Location     Type
  2354 ;;		None               void
  2355 ;; Registers used:
  2356 ;;		wreg, status,2, status,0, pclath, cstack
  2357 ;; Tracked objects:
  2358 ;;		On entry : 60/20
  2359 ;;		On exit  : 0/0
  2360 ;;		Unchanged: 0/0
  2361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2362 ;;      Params:         0       1       0       0       0
  2363 ;;      Locals:         0       1       0       0       0
  2364 ;;      Temps:          0       0       0       0       0
  2365 ;;      Totals:         0       2       0       0       0
  2366 ;;Total ram usage:        2 bytes
  2367 ;; Hardware stack levels used:    1
  2368 ;; Hardware stack levels required when called:    4
  2369 ;; This function calls:
  2370 ;;		_WriteEE
  2371 ;; This function is called by:
  2372 ;;		_DataHandle
  2373 ;; This function uses a non-reentrant model
  2374 ;;
  2375  050C                     _WriteSN:	
  2376                           
  2377                           ; Regs used in _WriteSN: [wreg+status,2+status,0+pclath+cstack]
  2378                           ;WriteSN@numH stored from wreg
  2379  050C  1283               	bcf	3,5	;RP0=0, select bank0
  2380  050D  00A3               	movwf	WriteSN@numH
  2381                           
  2382                           ;eeprom.c: 40: WriteEE(0x00, 0x57);
  2383  050E  3057               	movlw	87
  2384  050F  00A0               	movwf	?_WriteEE
  2385  0510  3000               	movlw	0
  2386  0511  253C  118A         	fcall	_WriteEE
  2387                           
  2388                           ;eeprom.c: 41: _nop();
  2389  0513  0000               	nop
  2390                           
  2391                           ;eeprom.c: 42: WriteEE(0x01, 0x48);
  2392  0514  3048               	movlw	72
  2393  0515  1283               	bcf	3,5	;RP0=0, select bank0
  2394  0516  1303               	bcf	3,6	;RP1=0, select bank0
  2395  0517  00A0               	movwf	?_WriteEE
  2396  0518  3001               	movlw	1
  2397  0519  253C  118A         	fcall	_WriteEE
  2398                           
  2399                           ;eeprom.c: 43: _nop();
  2400  051B  0000               	nop
  2401                           
  2402                           ;eeprom.c: 44: WriteEE(0x02, 0x53);
  2403  051C  3053               	movlw	83
  2404  051D  1283               	bcf	3,5	;RP0=0, select bank0
  2405  051E  1303               	bcf	3,6	;RP1=0, select bank0
  2406  051F  00A0               	movwf	?_WriteEE
  2407  0520  3002               	movlw	2
  2408  0521  253C  118A         	fcall	_WriteEE
  2409                           
  2410                           ;eeprom.c: 45: _nop();
  2411  0523  0000               	nop
  2412                           
  2413                           ;eeprom.c: 46: WriteEE(0x03, 0x45);
  2414  0524  3045               	movlw	69
  2415  0525  1283               	bcf	3,5	;RP0=0, select bank0
  2416  0526  1303               	bcf	3,6	;RP1=0, select bank0
  2417  0527  00A0               	movwf	?_WriteEE
  2418  0528  3003               	movlw	3
  2419  0529  253C  118A         	fcall	_WriteEE
  2420                           
  2421                           ;eeprom.c: 47: _nop();
  2422  052B  0000               	nop
  2423                           
  2424                           ;eeprom.c: 48: WriteEE(0x04, numH&0xff);
  2425  052C  1283               	bcf	3,5	;RP0=0, select bank0
  2426  052D  1303               	bcf	3,6	;RP1=0, select bank0
  2427  052E  0823               	movf	WriteSN@numH,w
  2428  052F  00A0               	movwf	?_WriteEE
  2429  0530  3004               	movlw	4
  2430  0531  253C  118A         	fcall	_WriteEE
  2431                           
  2432                           ;eeprom.c: 49: _nop();
  2433  0533  0000               	nop
  2434                           
  2435                           ;eeprom.c: 50: WriteEE(0x05, numL&0xff);
  2436  0534  1283               	bcf	3,5	;RP0=0, select bank0
  2437  0535  1303               	bcf	3,6	;RP1=0, select bank0
  2438  0536  0822               	movf	WriteSN@numL,w
  2439  0537  00A0               	movwf	?_WriteEE
  2440  0538  3005               	movlw	5
  2441  0539  253C               	fcall	_WriteEE
  2442                           
  2443                           ;eeprom.c: 51: _nop();
  2444  053A  0000               	nop
  2445  053B  0008               	return
  2446  053C                     __end_of_WriteSN:	
  2447  053C                     __ptext1563:	
  2448 ;; =============== function _ReadEE ends ============
  2449                           
  2450                           
  2451 ;; *************** function _WriteEE *****************
  2452 ;; Defined at:
  2453 ;;		line 6 in file "../eeprom.c"
  2454 ;; Parameters:    Size  Location     Type
  2455 ;;  addr            1    wreg     unsigned char 
  2456 ;;  data            1    0[BANK0 ] unsigned char 
  2457 ;; Auto vars:     Size  Location     Type
  2458 ;;  addr            1    1[BANK0 ] unsigned char 
  2459 ;; Return value:  Size  Location     Type
  2460 ;;		None               void
  2461 ;; Registers used:
  2462 ;;		wreg
  2463 ;; Tracked objects:
  2464 ;;		On entry : 40/20
  2465 ;;		On exit  : 60/60
  2466 ;;		Unchanged: FFF9F/0
  2467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2468 ;;      Params:         0       1       0       0       0
  2469 ;;      Locals:         0       1       0       0       0
  2470 ;;      Temps:          0       0       0       0       0
  2471 ;;      Totals:         0       2       0       0       0
  2472 ;;Total ram usage:        2 bytes
  2473 ;; Hardware stack levels used:    1
  2474 ;; Hardware stack levels required when called:    3
  2475 ;; This function calls:
  2476 ;;		Nothing
  2477 ;; This function is called by:
  2478 ;;		_DataHandle
  2479 ;;		_WriteSN
  2480 ;;		_WriteQitty
  2481 ;; This function uses a non-reentrant model
  2482 ;;
  2483  053C                     _WriteEE:	
  2484                           
  2485                           ; Regs used in _WriteEE: [wreg]
  2486                           ;WriteEE@addr stored from wreg
  2487  053C  1283               	bcf	3,5	;RP0=0, select bank0
  2488  053D  00A1               	movwf	WriteEE@addr
  2489  053E                     l3391:	
  2490                           ;eeprom.c: 7: do{}
  2491                           
  2492                           
  2493                           ;eeprom.c: 8: while(WR == 1);
  2494  053E  1683               	bsf	3,5	;RP0=1, select bank3
  2495  053F  1703               	bsf	3,6	;RP1=1, select bank3
  2496  0540  188C               	btfsc	12,1
  2497  0541  2D3E               	goto	l3391
  2498                           
  2499                           ;eeprom.c: 10: EEADR = addr;
  2500  0542  1283               	bcf	3,5	;RP0=0, select bank0
  2501  0543  1303               	bcf	3,6	;RP1=0, select bank0
  2502  0544  0821               	movf	WriteEE@addr,w
  2503  0545  1703               	bsf	3,6	;RP1=1, select bank2
  2504  0546  008D               	movwf	13	;volatile
  2505                           
  2506                           ;eeprom.c: 11: EEDATA = data;
  2507  0547  1303               	bcf	3,6	;RP1=0, select bank0
  2508  0548  0820               	movf	WriteEE@data,w
  2509  0549  1703               	bsf	3,6	;RP1=1, select bank2
  2510  054A  008C               	movwf	12	;volatile
  2511                           
  2512                           ;eeprom.c: 12: EEPGD = 0;
  2513  054B  1683               	bsf	3,5	;RP0=1, select bank3
  2514  054C  3055               	movlw	85
  2515  054D  138C               	bcf	12,7
  2516  054E  150C               	bsf	12,2
  2517                           
  2518                           ;eeprom.c: 14: EECON2 = 0x55;
  2519  054F  008D               	movwf	13	;volatile
  2520                           
  2521                           ;eeprom.c: 15: EECON2 = 0xaa;
  2522  0550  30AA               	movlw	170
  2523  0551  008D               	movwf	13	;volatile
  2524                           
  2525                           ;eeprom.c: 16: WR = 1;
  2526  0552  148C               	bsf	12,1
  2527  0553                     l7343:	
  2528                           
  2529                           ;eeprom.c: 18: while(WR == 1);
  2530  0553  188C               	btfsc	12,1
  2531  0554  2D53               	goto	l7343
  2532                           
  2533                           ;eeprom.c: 19: WREN = 0;
  2534  0555  110C               	bcf	12,2
  2535  0556  0008               	return
  2536  0557                     __end_of_WriteEE:	
  2537  0557                     __ptext1566:	
  2538 ;; =============== function _ResetUart ends ============
  2539                           
  2540                           
  2541 ;; *************** function _RelayOff *****************
  2542 ;; Defined at:
  2543 ;;		line 126 in file "../Main.c"
  2544 ;; Parameters:    Size  Location     Type
  2545 ;;		None
  2546 ;; Auto vars:     Size  Location     Type
  2547 ;;		None
  2548 ;; Return value:  Size  Location     Type
  2549 ;;		None               void
  2550 ;; Registers used:
  2551 ;;		None
  2552 ;; Tracked objects:
  2553 ;;		On entry : 60/20
  2554 ;;		On exit  : 60/0
  2555 ;;		Unchanged: FFF9F/0
  2556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2557 ;;      Params:         0       0       0       0       0
  2558 ;;      Locals:         0       0       0       0       0
  2559 ;;      Temps:          0       0       0       0       0
  2560 ;;      Totals:         0       0       0       0       0
  2561 ;;Total ram usage:        0 bytes
  2562 ;; Hardware stack levels used:    1
  2563 ;; Hardware stack levels required when called:    3
  2564 ;; This function calls:
  2565 ;;		Nothing
  2566 ;; This function is called by:
  2567 ;;		_DataHandle
  2568 ;; This function uses a non-reentrant model
  2569 ;;
  2570  0557                     _RelayOff:	
  2571                           
  2572                           ; Regs used in _RelayOff: []
  2573  0557  1283               	bcf	3,5	;RP0=0, select bank0
  2574  0558  1006               	bcf	6,0
  2575  0559  0008               	return
  2576  055A                     __end_of_RelayOff:	
  2577  055A                     __ptext1562:	
  2578 ;; =============== function _putch ends ============
  2579                           
  2580                           
  2581 ;; *************** function _ReadEE *****************
  2582 ;; Defined at:
  2583 ;;		line 24 in file "../eeprom.c"
  2584 ;; Parameters:    Size  Location     Type
  2585 ;;  addr            1    wreg     unsigned char 
  2586 ;; Auto vars:     Size  Location     Type
  2587 ;;  addr            1    0[BANK0 ] unsigned char 
  2588 ;;  num             1    1[BANK0 ] unsigned char 
  2589 ;; Return value:  Size  Location     Type
  2590 ;;                  1    wreg      unsigned char 
  2591 ;; Registers used:
  2592 ;;		wreg
  2593 ;; Tracked objects:
  2594 ;;		On entry : 40/20
  2595 ;;		On exit  : 60/0
  2596 ;;		Unchanged: FFF9F/0
  2597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2598 ;;      Params:         0       0       0       0       0
  2599 ;;      Locals:         0       2       0       0       0
  2600 ;;      Temps:          0       0       0       0       0
  2601 ;;      Totals:         0       2       0       0       0
  2602 ;;Total ram usage:        2 bytes
  2603 ;; Hardware stack levels used:    1
  2604 ;; Hardware stack levels required when called:    3
  2605 ;; This function calls:
  2606 ;;		Nothing
  2607 ;; This function is called by:
  2608 ;;		_DataHandle
  2609 ;;		_ReadSN
  2610 ;;		_ReadQitty
  2611 ;; This function uses a non-reentrant model
  2612 ;;
  2613  055A                     _ReadEE:	
  2614                           
  2615                           ; Regs used in _ReadEE: [wreg]
  2616                           ;ReadEE@addr stored from wreg
  2617  055A  1283               	bcf	3,5	;RP0=0, select bank0
  2618  055B  00A0               	movwf	ReadEE@addr
  2619                           
  2620                           ;eeprom.c: 28: EEADR = addr;
  2621                           
  2622                           ;eeprom.c: 27: while(RD == -1);
  2623  055C  0820               	movf	ReadEE@addr,w
  2624  055D  1703               	bsf	3,6	;RP1=1, select bank2
  2625  055E  008D               	movwf	13	;volatile
  2626                           
  2627                           ;eeprom.c: 29: EEPGD = 0;
  2628  055F  1683               	bsf	3,5	;RP0=1, select bank3
  2629  0560  138C               	bcf	12,7
  2630                           
  2631                           ;eeprom.c: 30: RD = 1;
  2632  0561  140C               	bsf	12,0
  2633  0562                     l7351:	
  2634                           
  2635                           ;eeprom.c: 32: while(RD == 1);
  2636  0562  180C               	btfsc	12,0
  2637  0563  2D62               	goto	l7351
  2638                           
  2639                           ;eeprom.c: 33: num = EEDATA;
  2640  0564  1283               	bcf	3,5	;RP0=0, select bank2
  2641  0565  080C               	movf	12,w	;volatile
  2642  0566  1303               	bcf	3,6	;RP1=0, select bank0
  2643  0567  00A1               	movwf	ReadEE@num
  2644                           
  2645                           ;eeprom.c: 34: return num;
  2646  0568  0008               	return
  2647  0569                     __end_of_ReadEE:	
  2648  0569                     __ptext1548:	
  2649 ;; =============== function _ReadQitty ends ============
  2650                           
  2651                           
  2652 ;; *************** function _WriteQitty *****************
  2653 ;; Defined at:
  2654 ;;		line 62 in file "../eeprom.c"
  2655 ;; Parameters:    Size  Location     Type
  2656 ;;  qitty           1    wreg     unsigned char 
  2657 ;; Auto vars:     Size  Location     Type
  2658 ;;  qitty           1    2[BANK0 ] unsigned char 
  2659 ;; Return value:  Size  Location     Type
  2660 ;;		None               void
  2661 ;; Registers used:
  2662 ;;		wreg, status,2, status,0, pclath, cstack
  2663 ;; Tracked objects:
  2664 ;;		On entry : 60/20
  2665 ;;		On exit  : 0/0
  2666 ;;		Unchanged: 0/0
  2667 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2668 ;;      Params:         0       0       0       0       0
  2669 ;;      Locals:         0       1       0       0       0
  2670 ;;      Temps:          0       0       0       0       0
  2671 ;;      Totals:         0       1       0       0       0
  2672 ;;Total ram usage:        1 bytes
  2673 ;; Hardware stack levels used:    1
  2674 ;; Hardware stack levels required when called:    4
  2675 ;; This function calls:
  2676 ;;		_WriteEE
  2677 ;; This function is called by:
  2678 ;;		_DataHandle
  2679 ;; This function uses a non-reentrant model
  2680 ;;
  2681  0569                     _WriteQitty:	
  2682                           
  2683                           ; Regs used in _WriteQitty: [wreg+status,2+status,0+pclath+cstack]
  2684                           ;WriteQitty@qitty stored from wreg
  2685  0569  1283               	bcf	3,5	;RP0=0, select bank0
  2686  056A  00A2               	movwf	WriteQitty@qitty
  2687                           
  2688                           ;eeprom.c: 63: WriteEE(0x06, qitty);
  2689  056B  0822               	movf	WriteQitty@qitty,w
  2690  056C  00A0               	movwf	?_WriteEE
  2691  056D  3006               	movlw	6
  2692  056E  253C               	fcall	_WriteEE
  2693                           
  2694                           ;eeprom.c: 64: _nop();
  2695  056F  0000               	nop
  2696  0570  0008               	return
  2697  0571                     __end_of_WriteQitty:	
  2698  0571                     __ptext1545:	
  2699 ;; =============== function _SendService ends ============
  2700                           
  2701                           
  2702 ;; *************** function _ReadSN *****************
  2703 ;; Defined at:
  2704 ;;		line 55 in file "../eeprom.c"
  2705 ;; Parameters:    Size  Location     Type
  2706 ;;  data            1    wreg     PTR unsigned char 
  2707 ;;		 -> sndData(8), 
  2708 ;; Auto vars:     Size  Location     Type
  2709 ;;  data            1    3[BANK0 ] PTR unsigned char 
  2710 ;;		 -> sndData(8), 
  2711 ;;  i               1    4[BANK0 ] unsigned char 
  2712 ;; Return value:  Size  Location     Type
  2713 ;;		None               void
  2714 ;; Registers used:
  2715 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2716 ;; Tracked objects:
  2717 ;;		On entry : 60/20
  2718 ;;		On exit  : 160/0
  2719 ;;		Unchanged: FFE9F/0
  2720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2721 ;;      Params:         0       0       0       0       0
  2722 ;;      Locals:         0       2       0       0       0
  2723 ;;      Temps:          0       1       0       0       0
  2724 ;;      Totals:         0       3       0       0       0
  2725 ;;Total ram usage:        3 bytes
  2726 ;; Hardware stack levels used:    1
  2727 ;; Hardware stack levels required when called:    4
  2728 ;; This function calls:
  2729 ;;		_ReadEE
  2730 ;; This function is called by:
  2731 ;;		_DataHandle
  2732 ;; This function uses a non-reentrant model
  2733 ;;
  2734  0571                     _ReadSN:	
  2735                           
  2736                           ; Regs used in _ReadSN: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2737                           ;ReadSN@data stored from wreg
  2738  0571  1283               	bcf	3,5	;RP0=0, select bank0
  2739  0572  00A3               	movwf	ReadSN@data
  2740                           
  2741                           ;eeprom.c: 56: unsigned char i;
  2742                           ;eeprom.c: 57: for(i=0;i<6;i++)
  2743  0573  01A4               	clrf	ReadSN@i
  2744  0574                     l7757:	
  2745                           
  2746                           ;eeprom.c: 58: data[i] = ReadEE(i);
  2747  0574  0824               	movf	ReadSN@i,w
  2748  0575  0723               	addwf	ReadSN@data,w
  2749  0576  00A2               	movwf	??_ReadSN
  2750  0577  0084               	movwf	4
  2751  0578  0824               	movf	ReadSN@i,w
  2752  0579  255A  118A         	fcall	_ReadEE
  2753  057B  1383               	bcf	3,7	;select IRP bank0
  2754  057C  0080               	movwf	0
  2755  057D  3006               	movlw	6
  2756  057E  0AA4               	incf	ReadSN@i,f
  2757  057F  0224               	subwf	ReadSN@i,w
  2758  0580  1803               	btfsc	3,0
  2759  0581  0008               	return
  2760  0582  2D74               	goto	l7757
  2761  0583                     __end_of_ReadSN:	
  2762                           
  2763                           	psect	text1521
  2764  000F                     __ptext1521:	
  2765 ;; =============== function _I2CReadH ends ============
  2766                           
  2767                           
  2768 ;; *************** function _FormatData *****************
  2769 ;; Defined at:
  2770 ;;		line 108 in file "../function.c"
  2771 ;; Parameters:    Size  Location     Type
  2772 ;;  data            1    wreg     PTR unsigned char 
  2773 ;;		 -> sndData(8), 
  2774 ;; Auto vars:     Size  Location     Type
  2775 ;;  data            1   76[BANK0 ] PTR unsigned char 
  2776 ;;		 -> sndData(8), 
  2777 ;;  value           3   77[BANK0 ] PTR unsigned char 
  2778 ;;  low             3   73[BANK0 ] PTR unsigned char 
  2779 ;;  high            3   70[BANK0 ] PTR unsigned char 
  2780 ;;  i               2    0        int 
  2781 ;; Return value:  Size  Location     Type
  2782 ;;		None               void
  2783 ;; Registers used:
  2784 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2785 ;; Tracked objects:
  2786 ;;		On entry : 60/20
  2787 ;;		On exit  : 60/0
  2788 ;;		Unchanged: FFE9F/0
  2789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2790 ;;      Params:         0       0       0       0       0
  2791 ;;      Locals:         0      10       0       0       0
  2792 ;;      Temps:          0       0       0       0       0
  2793 ;;      Totals:         0      10       0       0       0
  2794 ;;Total ram usage:       10 bytes
  2795 ;; Hardware stack levels used:    1
  2796 ;; Hardware stack levels required when called:    6
  2797 ;; This function calls:
  2798 ;;		_GetSensorH
  2799 ;;		_GetSensorL
  2800 ;;		_ReadQitty
  2801 ;;		___lbtoft
  2802 ;;		___ftsub
  2803 ;;		_fabs
  2804 ;;		___ftmul
  2805 ;;		_memcpy
  2806 ;; This function is called by:
  2807 ;;		_DataHandle
  2808 ;; This function uses a non-reentrant model
  2809 ;;
  2810  000F                     _FormatData:	
  2811                           
  2812                           ; Regs used in _FormatData: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2813                           ;FormatData@data stored from wreg
  2814  000F  1283               	bcf	3,5	;RP0=0, select bank0
  2815  0010  00EC               	movwf	FormatData@data
  2816                           
  2817                           ;function.c: 109: double high = GetSensorH();
  2818  0011  20DC  118A         	fcall	_GetSensorH
  2819  0013  0855               	movf	?_GetSensorH,w
  2820  0014  00E6               	movwf	FormatData@high
  2821  0015  0856               	movf	?_GetSensorH+1,w
  2822  0016  00E7               	movwf	FormatData@high+1
  2823  0017  0857               	movf	?_GetSensorH+2,w
  2824  0018  00E8               	movwf	FormatData@high+2
  2825                           
  2826                           ;function.c: 110: double low = GetSensorL();
  2827  0019  2056  118A         	fcall	_GetSensorL
  2828  001B  0855               	movf	?_GetSensorL,w
  2829  001C  00E9               	movwf	FormatData@low
  2830  001D  0856               	movf	?_GetSensorL+1,w
  2831  001E  00EA               	movwf	FormatData@low+1
  2832  001F  0857               	movf	?_GetSensorL+2,w
  2833  0020  00EB               	movwf	FormatData@low+2
  2834                           
  2835                           ;function.c: 111: int i;
  2836                           ;function.c: 112: double value = (double)(fabs(high - low)*((double)ReadQitty()));
  2837  0021  235B  118A         	fcall	_ReadQitty
  2838  0023  2379  118A         	fcall	___lbtoft
  2839  0025  0828               	movf	?___lbtoft,w
  2840  0026  00B7               	movwf	?___ftmul
  2841  0027  0829               	movf	?___lbtoft+1,w
  2842  0028  00B8               	movwf	?___ftmul+1
  2843  0029  082A               	movf	?___lbtoft+2,w
  2844  002A  00B9               	movwf	?___ftmul+2
  2845  002B  0869               	movf	FormatData@low,w
  2846  002C  00C6               	movwf	?___ftsub
  2847  002D  086A               	movf	FormatData@low+1,w
  2848  002E  00C7               	movwf	?___ftsub+1
  2849  002F  086B               	movf	FormatData@low+2,w
  2850  0030  00C8               	movwf	?___ftsub+2
  2851  0031  0866               	movf	FormatData@high,w
  2852  0032  00C9               	movwf	?___ftsub+3
  2853  0033  0867               	movf	FormatData@high+1,w
  2854  0034  00CA               	movwf	?___ftsub+4
  2855  0035  0868               	movf	FormatData@high+2,w
  2856  0036  00CB               	movwf	?___ftsub+5
  2857  0037  2388  118A         	fcall	___ftsub
  2858  0039  0846               	movf	?___ftsub,w
  2859  003A  00B4               	movwf	?_fabs
  2860  003B  0847               	movf	?___ftsub+1,w
  2861  003C  00B5               	movwf	?_fabs+1
  2862  003D  0848               	movf	?___ftsub+2,w
  2863  003E  00B6               	movwf	?_fabs+2
  2864  003F  235E  118A         	fcall	_fabs
  2865  0041  0834               	movf	?_fabs,w
  2866  0042  00BA               	movwf	?___ftmul+3
  2867  0043  0835               	movf	?_fabs+1,w
  2868  0044  00BB               	movwf	?___ftmul+4
  2869  0045  0836               	movf	?_fabs+2,w
  2870  0046  00BC               	movwf	?___ftmul+5
  2871  0047  2203  118A         	fcall	___ftmul
  2872  0049  0837               	movf	?___ftmul,w
  2873  004A  00ED               	movwf	FormatData@value
  2874  004B  0838               	movf	?___ftmul+1,w
  2875  004C  00EE               	movwf	FormatData@value+1
  2876  004D  0839               	movf	?___ftmul+2,w
  2877  004E  00EF               	movwf	FormatData@value+2
  2878                           
  2879                           ;function.c: 113: memcpy(data, &value, 8);
  2880  004F  306D               	movlw	FormatData@value& (0+255)
  2881  0050  00A0               	movwf	?_memcpy
  2882  0051  3008               	movlw	8
  2883  0052  00A1               	movwf	?_memcpy+1
  2884  0053  01A2               	clrf	?_memcpy+2
  2885  0054  086C               	movf	FormatData@data,w
  2886  0055  2B9F               	ljmp	_memcpy
  2887  0056                     __end_of_FormatData:	
  2888  0056                     __ptext1525:	
  2889 ;; =============== function ___ftsub ends ============
  2890                           
  2891                           
  2892 ;; *************** function _GetSensorL *****************
  2893 ;; Defined at:
  2894 ;;		line 87 in file "../function.c"
  2895 ;; Parameters:    Size  Location     Type
  2896 ;;		None
  2897 ;; Auto vars:     Size  Location     Type
  2898 ;;  ret             3   67[BANK0 ] float 
  2899 ;;  pga             3   59[BANK0 ] float 
  2900 ;;  minCode         3   56[BANK0 ] float 
  2901 ;;  adValue         2   65[BANK0 ] int 
  2902 ;; Return value:  Size  Location     Type
  2903 ;;                  3   53[BANK0 ] int 
  2904 ;; Registers used:
  2905 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2906 ;; Tracked objects:
  2907 ;;		On entry : 60/0
  2908 ;;		On exit  : 60/0
  2909 ;;		Unchanged: FFF9F/0
  2910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2911 ;;      Params:         0       3       0       0       0
  2912 ;;      Locals:         0      14       0       0       0
  2913 ;;      Temps:          0       0       0       0       0
  2914 ;;      Totals:         0      17       0       0       0
  2915 ;;Total ram usage:       17 bytes
  2916 ;; Hardware stack levels used:    1
  2917 ;; Hardware stack levels required when called:    5
  2918 ;; This function calls:
  2919 ;;		_GetLowDataRateValue
  2920 ;;		___lwtoft
  2921 ;;		_GetLowGainValue
  2922 ;;		___awtoft
  2923 ;;		___ftmul
  2924 ;;		___ftdiv
  2925 ;;		___ftge
  2926 ;; This function is called by:
  2927 ;;		_FormatData
  2928 ;; This function uses a non-reentrant model
  2929 ;;
  2930  0056                     _GetSensorL:	
  2931                           
  2932                           ;function.c: 88: int adValue = (int)((L_M<<8)|L_L);
  2933                           
  2934                           ; Regs used in _GetSensorL: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2935  0056  1683               	bsf	3,5	;RP0=1, select bank1
  2936  0057  0837               	movf	_L_M^(0+128),w
  2937  0058  1283               	bcf	3,5	;RP0=0, select bank0
  2938  0059  00E2               	movwf	GetSensorL@adValue+1
  2939  005A  01E1               	clrf	GetSensorL@adValue
  2940  005B  1683               	bsf	3,5	;RP0=1, select bank1
  2941  005C  0836               	movf	_L_L^(0+128),w
  2942  005D  1283               	bcf	3,5	;RP0=0, select bank0
  2943  005E  04E1               	iorwf	GetSensorL@adValue,f
  2944                           
  2945                           ;function.c: 89: float minCode = GetLowDataRateValue();
  2946  005F  232C  118A         	fcall	_GetLowDataRateValue
  2947  0061  0821               	movf	?_GetLowDataRateValue+1,w
  2948  0062  00A9               	movwf	?___lwtoft+1
  2949  0063  0820               	movf	?_GetLowDataRateValue,w
  2950  0064  00A8               	movwf	?___lwtoft
  2951  0065  21F3  118A         	fcall	___lwtoft
  2952  0067  0828               	movf	?___lwtoft,w
  2953  0068  00D8               	movwf	GetSensorL@minCode
  2954  0069  0829               	movf	?___lwtoft+1,w
  2955  006A  00D9               	movwf	GetSensorL@minCode+1
  2956  006B  082A               	movf	?___lwtoft+2,w
  2957  006C  00DA               	movwf	GetSensorL@minCode+2
  2958                           
  2959                           ;function.c: 90: float pga = GetLowGainValue();
  2960  006D  2303  118A         	fcall	_GetLowGainValue
  2961  006F  0821               	movf	?_GetLowGainValue+1,w
  2962  0070  00A9               	movwf	?___lwtoft+1
  2963  0071  0820               	movf	?_GetLowGainValue,w
  2964  0072  00A8               	movwf	?___lwtoft
  2965  0073  21F3  118A         	fcall	___lwtoft
  2966  0075  0828               	movf	?___lwtoft,w
  2967  0076  00DB               	movwf	GetSensorL@pga
  2968  0077  0829               	movf	?___lwtoft+1,w
  2969  0078  00DC               	movwf	GetSensorL@pga+1
  2970  0079  082A               	movf	?___lwtoft+2,w
  2971  007A  00DD               	movwf	GetSensorL@pga+2
  2972                           
  2973                           ;function.c: 91: double ret = adValue*5.0/minCode/pga;
  2974  007B  0858               	movf	GetSensorL@minCode,w
  2975  007C  00C6               	movwf	?___ftdiv
  2976  007D  0859               	movf	GetSensorL@minCode+1,w
  2977  007E  00C7               	movwf	?___ftdiv+1
  2978  007F  085A               	movf	GetSensorL@minCode+2,w
  2979  0080  00C8               	movwf	?___ftdiv+2
  2980  0081  30A0               	movlw	160
  2981  0082  01B7               	clrf	?___ftmul
  2982  0083  00B8               	movwf	?___ftmul+1
  2983  0084  3040               	movlw	64
  2984  0085  00B9               	movwf	?___ftmul+2
  2985  0086  0862               	movf	GetSensorL@adValue+1,w
  2986  0087  00A9               	movwf	?___awtoft+1
  2987  0088  0861               	movf	GetSensorL@adValue,w
  2988  0089  00A8               	movwf	?___awtoft
  2989  008A  22AA  118A         	fcall	___awtoft
  2990  008C  0828               	movf	?___awtoft,w
  2991  008D  00BA               	movwf	?___ftmul+3
  2992  008E  0829               	movf	?___awtoft+1,w
  2993  008F  00BB               	movwf	?___ftmul+4
  2994  0090  082A               	movf	?___awtoft+2,w
  2995  0091  00BC               	movwf	?___ftmul+5
  2996  0092  2203  118A         	fcall	___ftmul
  2997  0094  0837               	movf	?___ftmul,w
  2998  0095  00C9               	movwf	?___ftdiv+3
  2999  0096  0838               	movf	?___ftmul+1,w
  3000  0097  00CA               	movwf	?___ftdiv+4
  3001  0098  0839               	movf	?___ftmul+2,w
  3002  0099  00CB               	movwf	?___ftdiv+5
  3003  009A  218B  118A         	fcall	___ftdiv
  3004  009C  0846               	movf	?___ftdiv,w
  3005  009D  00DE               	movwf	_GetSensorL$6672
  3006  009E  0847               	movf	?___ftdiv+1,w
  3007  009F  00DF               	movwf	_GetSensorL$6672+1
  3008  00A0  0848               	movf	?___ftdiv+2,w
  3009  00A1  00E0               	movwf	_GetSensorL$6672+2
  3010                           
  3011                           ;function.c: 91: double ret = adValue*5.0/minCode/pga;
  3012  00A2  085B               	movf	GetSensorL@pga,w
  3013  00A3  00C6               	movwf	?___ftdiv
  3014  00A4  085C               	movf	GetSensorL@pga+1,w
  3015  00A5  00C7               	movwf	?___ftdiv+1
  3016  00A6  085D               	movf	GetSensorL@pga+2,w
  3017  00A7  00C8               	movwf	?___ftdiv+2
  3018  00A8  085E               	movf	_GetSensorL$6672,w
  3019  00A9  00C9               	movwf	?___ftdiv+3
  3020  00AA  085F               	movf	_GetSensorL$6672+1,w
  3021  00AB  00CA               	movwf	?___ftdiv+4
  3022  00AC  0860               	movf	_GetSensorL$6672+2,w
  3023  00AD  00CB               	movwf	?___ftdiv+5
  3024  00AE  218B  118A         	fcall	___ftdiv
  3025  00B0  0846               	movf	?___ftdiv,w
  3026  00B1  00E3               	movwf	GetSensorL@ret
  3027  00B2  0847               	movf	?___ftdiv+1,w
  3028  00B3  00E4               	movwf	GetSensorL@ret+1
  3029  00B4  0848               	movf	?___ftdiv+2,w
  3030  00B5  00E5               	movwf	GetSensorL@ret+2
  3031                           
  3032                           ;function.c: 92: if(ret < 0)
  3033  00B6  0863               	movf	GetSensorL@ret,w
  3034  00B7  00A0               	movwf	?___ftge
  3035  00B8  0864               	movf	GetSensorL@ret+1,w
  3036  00B9  00A1               	movwf	?___ftge+1
  3037  00BA  0865               	movf	GetSensorL@ret+2,w
  3038  00BB  00A2               	movwf	?___ftge+2
  3039  00BC  01A3               	clrf	?___ftge+3
  3040  00BD  01A4               	clrf	?___ftge+4
  3041  00BE  01A5               	clrf	?___ftge+5
  3042  00BF  227E  118A         	fcall	___ftge
  3043  00C1  1803               	btfsc	3,0
  3044  00C2  28D5               	goto	l8219
  3045                           
  3046                           ;function.c: 93: ret = ret * (-1);
  3047  00C3  3080               	movlw	128
  3048  00C4  01B7               	clrf	?___ftmul
  3049  00C5  00B8               	movwf	?___ftmul+1
  3050  00C6  30BF               	movlw	191
  3051  00C7  00B9               	movwf	?___ftmul+2
  3052  00C8  0863               	movf	GetSensorL@ret,w
  3053  00C9  00BA               	movwf	?___ftmul+3
  3054  00CA  0864               	movf	GetSensorL@ret+1,w
  3055  00CB  00BB               	movwf	?___ftmul+4
  3056  00CC  0865               	movf	GetSensorL@ret+2,w
  3057  00CD  00BC               	movwf	?___ftmul+5
  3058  00CE  2203               	fcall	___ftmul
  3059  00CF  0837               	movf	?___ftmul,w
  3060  00D0  00E3               	movwf	GetSensorL@ret
  3061  00D1  0838               	movf	?___ftmul+1,w
  3062  00D2  00E4               	movwf	GetSensorL@ret+1
  3063  00D3  0839               	movf	?___ftmul+2,w
  3064  00D4  00E5               	movwf	GetSensorL@ret+2
  3065  00D5                     l8219:	
  3066                           
  3067                           ;function.c: 94: return ret;
  3068  00D5  0863               	movf	GetSensorL@ret,w
  3069  00D6  00D5               	movwf	?_GetSensorL
  3070  00D7  0864               	movf	GetSensorL@ret+1,w
  3071  00D8  00D6               	movwf	?_GetSensorL+1
  3072  00D9  0865               	movf	GetSensorL@ret+2,w
  3073  00DA  00D7               	movwf	?_GetSensorL+2
  3074  00DB  0008               	return
  3075  00DC                     __end_of_GetSensorL:	
  3076  00DC                     __ptext1526:	
  3077 ;; =============== function _GetSensorL ends ============
  3078                           
  3079                           
  3080 ;; *************** function _GetSensorH *****************
  3081 ;; Defined at:
  3082 ;;		line 76 in file "../function.c"
  3083 ;; Parameters:    Size  Location     Type
  3084 ;;		None
  3085 ;; Auto vars:     Size  Location     Type
  3086 ;;  ret             3   67[BANK0 ] int 
  3087 ;;  pga             3   59[BANK0 ] float 
  3088 ;;  minCode         3   56[BANK0 ] float 
  3089 ;;  adValue         2   65[BANK0 ] int 
  3090 ;; Return value:  Size  Location     Type
  3091 ;;                  3   53[BANK0 ] int 
  3092 ;; Registers used:
  3093 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3094 ;; Tracked objects:
  3095 ;;		On entry : 60/0
  3096 ;;		On exit  : 60/0
  3097 ;;		Unchanged: FFF9F/0
  3098 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3099 ;;      Params:         0       3       0       0       0
  3100 ;;      Locals:         0      14       0       0       0
  3101 ;;      Temps:          0       0       0       0       0
  3102 ;;      Totals:         0      17       0       0       0
  3103 ;;Total ram usage:       17 bytes
  3104 ;; Hardware stack levels used:    1
  3105 ;; Hardware stack levels required when called:    5
  3106 ;; This function calls:
  3107 ;;		_GetHighGainValue
  3108 ;;		___lwtoft
  3109 ;;		___awtoft
  3110 ;;		___ftmul
  3111 ;;		___ftdiv
  3112 ;;		___ftge
  3113 ;; This function is called by:
  3114 ;;		_FormatData
  3115 ;; This function uses a non-reentrant model
  3116 ;;
  3117  00DC                     _GetSensorH:	
  3118                           
  3119                           ;function.c: 77: int adValue = (int)((H_M<<8)|H_L);
  3120                           
  3121                           ; Regs used in _GetSensorH: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3122  00DC  1683               	bsf	3,5	;RP0=1, select bank1
  3123  00DD  0834               	movf	_H_M^(0+128),w
  3124  00DE  1283               	bcf	3,5	;RP0=0, select bank0
  3125  00DF  00E2               	movwf	GetSensorH@adValue+1
  3126  00E0  01E1               	clrf	GetSensorH@adValue
  3127  00E1  1683               	bsf	3,5	;RP0=1, select bank1
  3128  00E2  0833               	movf	_H_L^(0+128),w
  3129  00E3  1283               	bcf	3,5	;RP0=0, select bank0
  3130  00E4  04E1               	iorwf	GetSensorH@adValue,f
  3131                           
  3132                           ;function.c: 78: float minCode = GetHighGainValue();
  3133  00E5  2162  118A         	fcall	_GetHighGainValue
  3134  00E7  0821               	movf	?_GetHighGainValue+1,w
  3135  00E8  00A9               	movwf	?___lwtoft+1
  3136  00E9  0820               	movf	?_GetHighGainValue,w
  3137  00EA  00A8               	movwf	?___lwtoft
  3138  00EB  21F3  118A         	fcall	___lwtoft
  3139  00ED  0828               	movf	?___lwtoft,w
  3140  00EE  00D8               	movwf	GetSensorH@minCode
  3141  00EF  0829               	movf	?___lwtoft+1,w
  3142  00F0  00D9               	movwf	GetSensorH@minCode+1
  3143  00F1  082A               	movf	?___lwtoft+2,w
  3144  00F2  00DA               	movwf	GetSensorH@minCode+2
  3145                           
  3146                           ;function.c: 79: float pga = GetHighGainValue();
  3147  00F3  2162  118A         	fcall	_GetHighGainValue
  3148  00F5  0821               	movf	?_GetHighGainValue+1,w
  3149  00F6  00A9               	movwf	?___lwtoft+1
  3150  00F7  0820               	movf	?_GetHighGainValue,w
  3151  00F8  00A8               	movwf	?___lwtoft
  3152  00F9  21F3  118A         	fcall	___lwtoft
  3153  00FB  0828               	movf	?___lwtoft,w
  3154  00FC  00DB               	movwf	GetSensorH@pga
  3155  00FD  0829               	movf	?___lwtoft+1,w
  3156  00FE  00DC               	movwf	GetSensorH@pga+1
  3157  00FF  082A               	movf	?___lwtoft+2,w
  3158  0100  00DD               	movwf	GetSensorH@pga+2
  3159                           
  3160                           ;function.c: 80: double ret = adValue*5.0/minCode/pga;
  3161  0101  0858               	movf	GetSensorH@minCode,w
  3162  0102  00C6               	movwf	?___ftdiv
  3163  0103  0859               	movf	GetSensorH@minCode+1,w
  3164  0104  00C7               	movwf	?___ftdiv+1
  3165  0105  085A               	movf	GetSensorH@minCode+2,w
  3166  0106  00C8               	movwf	?___ftdiv+2
  3167  0107  30A0               	movlw	160
  3168  0108  01B7               	clrf	?___ftmul
  3169  0109  00B8               	movwf	?___ftmul+1
  3170  010A  3040               	movlw	64
  3171  010B  00B9               	movwf	?___ftmul+2
  3172  010C  0862               	movf	GetSensorH@adValue+1,w
  3173  010D  00A9               	movwf	?___awtoft+1
  3174  010E  0861               	movf	GetSensorH@adValue,w
  3175  010F  00A8               	movwf	?___awtoft
  3176  0110  22AA  118A         	fcall	___awtoft
  3177  0112  0828               	movf	?___awtoft,w
  3178  0113  00BA               	movwf	?___ftmul+3
  3179  0114  0829               	movf	?___awtoft+1,w
  3180  0115  00BB               	movwf	?___ftmul+4
  3181  0116  082A               	movf	?___awtoft+2,w
  3182  0117  00BC               	movwf	?___ftmul+5
  3183  0118  2203  118A         	fcall	___ftmul
  3184  011A  0837               	movf	?___ftmul,w
  3185  011B  00C9               	movwf	?___ftdiv+3
  3186  011C  0838               	movf	?___ftmul+1,w
  3187  011D  00CA               	movwf	?___ftdiv+4
  3188  011E  0839               	movf	?___ftmul+2,w
  3189  011F  00CB               	movwf	?___ftdiv+5
  3190  0120  218B  118A         	fcall	___ftdiv
  3191  0122  0846               	movf	?___ftdiv,w
  3192  0123  00DE               	movwf	_GetSensorH$6671
  3193  0124  0847               	movf	?___ftdiv+1,w
  3194  0125  00DF               	movwf	_GetSensorH$6671+1
  3195  0126  0848               	movf	?___ftdiv+2,w
  3196  0127  00E0               	movwf	_GetSensorH$6671+2
  3197                           
  3198                           ;function.c: 80: double ret = adValue*5.0/minCode/pga;
  3199  0128  085B               	movf	GetSensorH@pga,w
  3200  0129  00C6               	movwf	?___ftdiv
  3201  012A  085C               	movf	GetSensorH@pga+1,w
  3202  012B  00C7               	movwf	?___ftdiv+1
  3203  012C  085D               	movf	GetSensorH@pga+2,w
  3204  012D  00C8               	movwf	?___ftdiv+2
  3205  012E  085E               	movf	_GetSensorH$6671,w
  3206  012F  00C9               	movwf	?___ftdiv+3
  3207  0130  085F               	movf	_GetSensorH$6671+1,w
  3208  0131  00CA               	movwf	?___ftdiv+4
  3209  0132  0860               	movf	_GetSensorH$6671+2,w
  3210  0133  00CB               	movwf	?___ftdiv+5
  3211  0134  218B  118A         	fcall	___ftdiv
  3212  0136  0846               	movf	?___ftdiv,w
  3213  0137  00E3               	movwf	GetSensorH@ret
  3214  0138  0847               	movf	?___ftdiv+1,w
  3215  0139  00E4               	movwf	GetSensorH@ret+1
  3216  013A  0848               	movf	?___ftdiv+2,w
  3217  013B  00E5               	movwf	GetSensorH@ret+2
  3218                           
  3219                           ;function.c: 81: if(ret < 0)
  3220  013C  0863               	movf	GetSensorH@ret,w
  3221  013D  00A0               	movwf	?___ftge
  3222  013E  0864               	movf	GetSensorH@ret+1,w
  3223  013F  00A1               	movwf	?___ftge+1
  3224  0140  0865               	movf	GetSensorH@ret+2,w
  3225  0141  00A2               	movwf	?___ftge+2
  3226  0142  01A3               	clrf	?___ftge+3
  3227  0143  01A4               	clrf	?___ftge+4
  3228  0144  01A5               	clrf	?___ftge+5
  3229  0145  227E  118A         	fcall	___ftge
  3230  0147  1803               	btfsc	3,0
  3231  0148  295B               	goto	l8201
  3232                           
  3233                           ;function.c: 82: ret = ret * (-1);
  3234  0149  3080               	movlw	128
  3235  014A  01B7               	clrf	?___ftmul
  3236  014B  00B8               	movwf	?___ftmul+1
  3237  014C  30BF               	movlw	191
  3238  014D  00B9               	movwf	?___ftmul+2
  3239  014E  0863               	movf	GetSensorH@ret,w
  3240  014F  00BA               	movwf	?___ftmul+3
  3241  0150  0864               	movf	GetSensorH@ret+1,w
  3242  0151  00BB               	movwf	?___ftmul+4
  3243  0152  0865               	movf	GetSensorH@ret+2,w
  3244  0153  00BC               	movwf	?___ftmul+5
  3245  0154  2203               	fcall	___ftmul
  3246  0155  0837               	movf	?___ftmul,w
  3247  0156  00E3               	movwf	GetSensorH@ret
  3248  0157  0838               	movf	?___ftmul+1,w
  3249  0158  00E4               	movwf	GetSensorH@ret+1
  3250  0159  0839               	movf	?___ftmul+2,w
  3251  015A  00E5               	movwf	GetSensorH@ret+2
  3252  015B                     l8201:	
  3253                           
  3254                           ;function.c: 83: return ret;
  3255  015B  0863               	movf	GetSensorH@ret,w
  3256  015C  00D5               	movwf	?_GetSensorH
  3257  015D  0864               	movf	GetSensorH@ret+1,w
  3258  015E  00D6               	movwf	?_GetSensorH+1
  3259  015F  0865               	movf	GetSensorH@ret+2,w
  3260  0160  00D7               	movwf	?_GetSensorH+2
  3261  0161  0008               	return
  3262  0162                     __end_of_GetSensorH:	
  3263  0162                     __ptext1557:	
  3264 ;; =============== function _GetLowGainValue ends ============
  3265                           
  3266                           
  3267 ;; *************** function _GetHighGainValue *****************
  3268 ;; Defined at:
  3269 ;;		line 8 in file "../function.c"
  3270 ;; Parameters:    Size  Location     Type
  3271 ;;		None
  3272 ;; Auto vars:     Size  Location     Type
  3273 ;;  gain            1    2[BANK0 ] unsigned char 
  3274 ;; Return value:  Size  Location     Type
  3275 ;;                  2    0[BANK0 ] unsigned int 
  3276 ;; Registers used:
  3277 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3278 ;; Tracked objects:
  3279 ;;		On entry : 60/0
  3280 ;;		On exit  : 60/0
  3281 ;;		Unchanged: FFF9F/0
  3282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3283 ;;      Params:         0       2       0       0       0
  3284 ;;      Locals:         0       1       0       0       0
  3285 ;;      Temps:          0       0       0       0       0
  3286 ;;      Totals:         0       3       0       0       0
  3287 ;;Total ram usage:        3 bytes
  3288 ;; Hardware stack levels used:    1
  3289 ;; Hardware stack levels required when called:    3
  3290 ;; This function calls:
  3291 ;;		Nothing
  3292 ;; This function is called by:
  3293 ;;		_GetSensorH
  3294 ;; This function uses a non-reentrant model
  3295 ;;
  3296  0162                     _GetHighGainValue:	
  3297                           
  3298                           ;function.c: 9: unsigned char gain = (int)(H_S & 0x03);
  3299                           
  3300                           ; Regs used in _GetHighGainValue: [wreg-fsr0h+status,2+status,0]
  3301  0162  1683               	bsf	3,5	;RP0=1, select bank1
  3302  0163  0835               	movf	_H_S^(0+128),w
  3303  0164  1283               	bcf	3,5	;RP0=0, select bank0
  3304  0165  00A2               	movwf	GetHighGainValue@gain
  3305  0166  3003               	movlw	3
  3306  0167  05A2               	andwf	GetHighGainValue@gain,f
  3307                           
  3308                           ;function.c: 10: switch(gain) {
  3309  0168  297C               	goto	l7545
  3310  0169                     l7523:	
  3311                           
  3312                           ;function.c: 12: return 1;
  3313  0169  01A0               	clrf	?_GetHighGainValue
  3314  016A  0AA0               	incf	?_GetHighGainValue,f
  3315  016B  01A1               	clrf	?_GetHighGainValue+1
  3316  016C  0008               	return
  3317  016D                     l7527:	
  3318                           
  3319                           ;function.c: 14: return 2;
  3320  016D  3002               	movlw	2
  3321  016E  00A0               	movwf	?_GetHighGainValue
  3322  016F  01A1               	clrf	?_GetHighGainValue+1
  3323  0170  0008               	return
  3324  0171                     l7531:	
  3325                           
  3326                           ;function.c: 16: return 4;
  3327  0171  3004               	movlw	4
  3328  0172  00A0               	movwf	?_GetHighGainValue
  3329  0173  01A1               	clrf	?_GetHighGainValue+1
  3330  0174  0008               	return
  3331  0175                     l7535:	
  3332                           
  3333                           ;function.c: 18: return 8;
  3334  0175  3008               	movlw	8
  3335  0176  00A0               	movwf	?_GetHighGainValue
  3336  0177  01A1               	clrf	?_GetHighGainValue+1
  3337  0178  0008               	return
  3338  0179                     l7539:	
  3339                           
  3340                           ;function.c: 20: return 0;
  3341  0179  01A0               	clrf	?_GetHighGainValue
  3342  017A  01A1               	clrf	?_GetHighGainValue+1
  3343  017B  0008               	return
  3344  017C                     l7545:	
  3345  017C  0822               	movf	GetHighGainValue@gain,w
  3346                           
  3347                           ; Switch size 1, requested type "speed"
  3348                           ; Number of cases is 4, Range of values is 0 to 3
  3349                           ; switch strategies available:
  3350                           ; Name         Instructions Cycles
  3351                           ; simple_byte           13     7 (average)
  3352                           ; direct_byte           15     7 (fixed)
  3353                           ; jumptable            260     6 (fixed)
  3354                           ; rangetable             8     6 (fixed)
  3355                           ; spacedrange           14     9 (fixed)
  3356                           ; locatedrange           4     3 (fixed)
  3357                           ;	Chosen strategy is simple_byte
  3358  017D  3A00               	xorlw	0	; case 0
  3359  017E  1903               	skipnz
  3360  017F  2969               	goto	l7523
  3361  0180  3A01               	xorlw	1	; case 1
  3362  0181  1903               	skipnz
  3363  0182  296D               	goto	l7527
  3364  0183  3A03               	xorlw	3	; case 2
  3365  0184  1903               	skipnz
  3366  0185  2971               	goto	l7531
  3367  0186  3A01               	xorlw	1	; case 3
  3368  0187  1903               	skipnz
  3369  0188  2975               	goto	l7535
  3370  0189  2979               	goto	l7539
  3371  018A  0008               	return
  3372  018B                     __end_of_GetHighGainValue:	
  3373  018B                     __ptext1537:	
  3374 ;; =============== function ___ftmul ends ============
  3375                           
  3376                           
  3377 ;; *************** function ___ftdiv *****************
  3378 ;; Defined at:
  3379 ;;		line 50 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftdiv.c"
  3380 ;; Parameters:    Size  Location     Type
  3381 ;;  f2              3   38[BANK0 ] float 
  3382 ;;  f1              3   41[BANK0 ] float 
  3383 ;; Auto vars:     Size  Location     Type
  3384 ;;  f3              3   48[BANK0 ] float 
  3385 ;;  sign            1   52[BANK0 ] unsigned char 
  3386 ;;  exp             1   51[BANK0 ] unsigned char 
  3387 ;;  cntr            1   47[BANK0 ] unsigned char 
  3388 ;; Return value:  Size  Location     Type
  3389 ;;                  3   38[BANK0 ] float 
  3390 ;; Registers used:
  3391 ;;		wreg, status,2, status,0, pclath, cstack
  3392 ;; Tracked objects:
  3393 ;;		On entry : 60/0
  3394 ;;		On exit  : 60/0
  3395 ;;		Unchanged: FFF9F/0
  3396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3397 ;;      Params:         0       6       0       0       0
  3398 ;;      Locals:         0       6       0       0       0
  3399 ;;      Temps:          0       3       0       0       0
  3400 ;;      Totals:         0      15       0       0       0
  3401 ;;Total ram usage:       15 bytes
  3402 ;; Hardware stack levels used:    1
  3403 ;; Hardware stack levels required when called:    4
  3404 ;; This function calls:
  3405 ;;		___ftpack
  3406 ;; This function is called by:
  3407 ;;		_GetSensorH
  3408 ;;		_GetSensorL
  3409 ;; This function uses a non-reentrant model
  3410 ;;
  3411  018B                     ___ftdiv:	
  3412                           
  3413                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  3414  018B  0849               	movf	___ftdiv@f1,w
  3415  018C  00CC               	movwf	??___ftdiv
  3416  018D  084A               	movf	___ftdiv@f1+1,w
  3417  018E  00CD               	movwf	??___ftdiv+1
  3418  018F  084B               	movf	___ftdiv@f1+2,w
  3419  0190  00CE               	movwf	??___ftdiv+2
  3420  0191  1003               	clrc
  3421  0192  0D4D               	rlf	??___ftdiv+1,w
  3422  0193  0D4E               	rlf	??___ftdiv+2,w
  3423  0194  00D3               	movwf	___ftdiv@exp
  3424  0195  08D3               	movf	___ftdiv@exp,f
  3425  0196  1D03               	skipz
  3426  0197  299C               	goto	l7949
  3427  0198  01C6               	clrf	?___ftdiv
  3428  0199  01C7               	clrf	?___ftdiv+1
  3429  019A  01C8               	clrf	?___ftdiv+2
  3430  019B  0008               	return
  3431  019C                     l7949:	
  3432  019C  0846               	movf	___ftdiv@f2,w
  3433  019D  00CC               	movwf	??___ftdiv
  3434  019E  0847               	movf	___ftdiv@f2+1,w
  3435  019F  00CD               	movwf	??___ftdiv+1
  3436  01A0  0848               	movf	___ftdiv@f2+2,w
  3437  01A1  00CE               	movwf	??___ftdiv+2
  3438  01A2  1003               	clrc
  3439  01A3  0D4D               	rlf	??___ftdiv+1,w
  3440  01A4  0D4E               	rlf	??___ftdiv+2,w
  3441  01A5  00D4               	movwf	___ftdiv@sign
  3442  01A6  08D4               	movf	___ftdiv@sign,f
  3443  01A7  1D03               	skipz
  3444  01A8  29AD               	goto	l5415
  3445  01A9  01C6               	clrf	?___ftdiv
  3446  01AA  01C7               	clrf	?___ftdiv+1
  3447  01AB  01C8               	clrf	?___ftdiv+2
  3448  01AC  0008               	return
  3449  01AD                     l5415:	
  3450  01AD  3089               	movlw	137
  3451  01AE  01D0               	clrf	___ftdiv@f3
  3452  01AF  01D1               	clrf	___ftdiv@f3+1
  3453  01B0  01D2               	clrf	___ftdiv@f3+2
  3454  01B1  0754               	addwf	___ftdiv@sign,w
  3455  01B2  00CC               	movwf	??___ftdiv
  3456  01B3  02D3               	subwf	___ftdiv@exp,f
  3457  01B4  084B               	movf	___ftdiv@f1+2,w
  3458  01B5  00D4               	movwf	___ftdiv@sign
  3459  01B6  0848               	movf	___ftdiv@f2+2,w
  3460  01B7  06D4               	xorwf	___ftdiv@sign,f
  3461  01B8  3080               	movlw	128
  3462  01B9  05D4               	andwf	___ftdiv@sign,f
  3463  01BA  3018               	movlw	24
  3464  01BB  17CA               	bsf	___ftdiv@f1+1,7
  3465  01BC  01CB               	clrf	___ftdiv@f1+2
  3466  01BD  17C7               	bsf	___ftdiv@f2+1,7
  3467  01BE  01C8               	clrf	___ftdiv@f2+2
  3468  01BF  00CF               	movwf	___ftdiv@cntr
  3469  01C0                     l7973:	
  3470  01C0  1003               	clrc
  3471  01C1  0DD0               	rlf	___ftdiv@f3,f
  3472  01C2  0DD1               	rlf	___ftdiv@f3+1,f
  3473  01C3  0DD2               	rlf	___ftdiv@f3+2,f
  3474  01C4  0848               	movf	___ftdiv@f2+2,w
  3475  01C5  024B               	subwf	___ftdiv@f1+2,w
  3476  01C6  1D03               	skipz
  3477  01C7  29CE               	goto	u2185
  3478  01C8  0847               	movf	___ftdiv@f2+1,w
  3479  01C9  024A               	subwf	___ftdiv@f1+1,w
  3480  01CA  1D03               	skipz
  3481  01CB  29CE               	goto	u2185
  3482  01CC  0846               	movf	___ftdiv@f2,w
  3483  01CD  0249               	subwf	___ftdiv@f1,w
  3484  01CE                     u2185:	
  3485  01CE  1C03               	skipc
  3486  01CF  29DC               	goto	L6
  3487  01D0  0846               	movf	___ftdiv@f2,w
  3488  01D1  02C9               	subwf	___ftdiv@f1,f
  3489  01D2  0847               	movf	___ftdiv@f2+1,w
  3490  01D3  1C03               	skipc
  3491  01D4  0F47               	incfsz	___ftdiv@f2+1,w
  3492  01D5  02CA               	subwf	___ftdiv@f1+1,f
  3493  01D6  0848               	movf	___ftdiv@f2+2,w
  3494  01D7  1C03               	skipc
  3495  01D8  0A48               	incf	___ftdiv@f2+2,w
  3496  01D9  02CB               	subwf	___ftdiv@f1+2,f
  3497  01DA  1450               	bsf	___ftdiv@f3,0
  3498  01DB  1003               	clrc
  3499  01DC                     L6:	
  3500  01DC  0DC9               	rlf	___ftdiv@f1,f
  3501  01DD  0DCA               	rlf	___ftdiv@f1+1,f
  3502  01DE  0DCB               	rlf	___ftdiv@f1+2,f
  3503  01DF  0BCF               	decfsz	___ftdiv@cntr,f
  3504  01E0  29C0               	goto	l7973
  3505  01E1  0850               	movf	___ftdiv@f3,w
  3506  01E2  00A0               	movwf	?___ftpack
  3507  01E3  0851               	movf	___ftdiv@f3+1,w
  3508  01E4  00A1               	movwf	?___ftpack+1
  3509  01E5  0852               	movf	___ftdiv@f3+2,w
  3510  01E6  00A2               	movwf	?___ftpack+2
  3511  01E7  0853               	movf	___ftdiv@exp,w
  3512  01E8  00A3               	movwf	?___ftpack+3
  3513  01E9  0854               	movf	___ftdiv@sign,w
  3514  01EA  00A4               	movwf	?___ftpack+4
  3515  01EB  22C5               	fcall	___ftpack
  3516  01EC  0820               	movf	?___ftpack,w
  3517  01ED  00C6               	movwf	?___ftdiv
  3518  01EE  0821               	movf	?___ftpack+1,w
  3519  01EF  00C7               	movwf	?___ftdiv+1
  3520  01F0  0822               	movf	?___ftpack+2,w
  3521  01F1  00C8               	movwf	?___ftdiv+2
  3522  01F2  0008               	return
  3523  01F3                     __end_of___ftdiv:	
  3524  01F3                     __ptext1533:	
  3525 ;; =============== function _DS18B20Initial ends ============
  3526                           
  3527                           
  3528 ;; *************** function ___lwtoft *****************
  3529 ;; Defined at:
  3530 ;;		line 29 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lwtoft.c"
  3531 ;; Parameters:    Size  Location     Type
  3532 ;;  c               2    8[BANK0 ] unsigned int 
  3533 ;; Auto vars:     Size  Location     Type
  3534 ;;		None
  3535 ;; Return value:  Size  Location     Type
  3536 ;;                  3    8[BANK0 ] float 
  3537 ;; Registers used:
  3538 ;;		wreg, status,2, status,0, pclath, cstack
  3539 ;; Tracked objects:
  3540 ;;		On entry : 60/0
  3541 ;;		On exit  : 60/0
  3542 ;;		Unchanged: FFF9F/0
  3543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3544 ;;      Params:         0       3       0       0       0
  3545 ;;      Locals:         0       0       0       0       0
  3546 ;;      Temps:          0       0       0       0       0
  3547 ;;      Totals:         0       3       0       0       0
  3548 ;;Total ram usage:        3 bytes
  3549 ;; Hardware stack levels used:    1
  3550 ;; Hardware stack levels required when called:    4
  3551 ;; This function calls:
  3552 ;;		___ftpack
  3553 ;; This function is called by:
  3554 ;;		_GetSensorH
  3555 ;;		_GetSensorL
  3556 ;; This function uses a non-reentrant model
  3557 ;;
  3558  01F3                     ___lwtoft:	
  3559                           
  3560                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  3561  01F3  0828               	movf	___lwtoft@c,w
  3562  01F4  00A0               	movwf	?___ftpack
  3563  01F5  0829               	movf	___lwtoft@c+1,w
  3564  01F6  00A1               	movwf	?___ftpack+1
  3565  01F7  308E               	movlw	142
  3566  01F8  01A2               	clrf	?___ftpack+2
  3567  01F9  00A3               	movwf	?___ftpack+3
  3568  01FA  01A4               	clrf	?___ftpack+4
  3569  01FB  22C5               	fcall	___ftpack
  3570  01FC  0820               	movf	?___ftpack,w
  3571  01FD  00A8               	movwf	?___lwtoft
  3572  01FE  0821               	movf	?___ftpack+1,w
  3573  01FF  00A9               	movwf	?___lwtoft+1
  3574  0200  0822               	movf	?___ftpack+2,w
  3575  0201  00AA               	movwf	?___lwtoft+2
  3576  0202  0008               	return
  3577  0203                     __end_of___lwtoft:	
  3578  0203                     __ptext1536:	
  3579 ;; =============== function ___lbtoft ends ============
  3580                           
  3581                           
  3582 ;; *************** function ___ftmul *****************
  3583 ;; Defined at:
  3584 ;;		line 52 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftmul.c"
  3585 ;; Parameters:    Size  Location     Type
  3586 ;;  f1              3   23[BANK0 ] float 
  3587 ;;  f2              3   26[BANK0 ] float 
  3588 ;; Auto vars:     Size  Location     Type
  3589 ;;  f3_as_produc    3   33[BANK0 ] unsigned um
  3590 ;;  sign            1   37[BANK0 ] unsigned char 
  3591 ;;  cntr            1   36[BANK0 ] unsigned char 
  3592 ;;  exp             1   32[BANK0 ] unsigned char 
  3593 ;; Return value:  Size  Location     Type
  3594 ;;                  3   23[BANK0 ] float 
  3595 ;; Registers used:
  3596 ;;		wreg, status,2, status,0, pclath, cstack
  3597 ;; Tracked objects:
  3598 ;;		On entry : 60/0
  3599 ;;		On exit  : 60/0
  3600 ;;		Unchanged: FFF9F/0
  3601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3602 ;;      Params:         0       6       0       0       0
  3603 ;;      Locals:         0       6       0       0       0
  3604 ;;      Temps:          0       3       0       0       0
  3605 ;;      Totals:         0      15       0       0       0
  3606 ;;Total ram usage:       15 bytes
  3607 ;; Hardware stack levels used:    1
  3608 ;; Hardware stack levels required when called:    4
  3609 ;; This function calls:
  3610 ;;		___ftpack
  3611 ;; This function is called by:
  3612 ;;		_GetSensorH
  3613 ;;		_GetSensorL
  3614 ;;		_FormatData
  3615 ;; This function uses a non-reentrant model
  3616 ;;
  3617  0203                     ___ftmul:	
  3618                           
  3619                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  3620  0203  0837               	movf	___ftmul@f1,w
  3621  0204  00BD               	movwf	??___ftmul
  3622  0205  0838               	movf	___ftmul@f1+1,w
  3623  0206  00BE               	movwf	??___ftmul+1
  3624  0207  0839               	movf	___ftmul@f1+2,w
  3625  0208  00BF               	movwf	??___ftmul+2
  3626  0209  1003               	clrc
  3627  020A  0D3E               	rlf	??___ftmul+1,w
  3628  020B  0D3F               	rlf	??___ftmul+2,w
  3629  020C  00C0               	movwf	___ftmul@exp
  3630  020D  08C0               	movf	___ftmul@exp,f
  3631  020E  1D03               	skipz
  3632  020F  2A14               	goto	l7993
  3633  0210  01B7               	clrf	?___ftmul
  3634  0211  01B8               	clrf	?___ftmul+1
  3635  0212  01B9               	clrf	?___ftmul+2
  3636  0213  0008               	return
  3637  0214                     l7993:	
  3638  0214  083A               	movf	___ftmul@f2,w
  3639  0215  00BD               	movwf	??___ftmul
  3640  0216  083B               	movf	___ftmul@f2+1,w
  3641  0217  00BE               	movwf	??___ftmul+1
  3642  0218  083C               	movf	___ftmul@f2+2,w
  3643  0219  00BF               	movwf	??___ftmul+2
  3644  021A  1003               	clrc
  3645  021B  0D3E               	rlf	??___ftmul+1,w
  3646  021C  0D3F               	rlf	??___ftmul+2,w
  3647  021D  00C5               	movwf	___ftmul@sign
  3648  021E  08C5               	movf	___ftmul@sign,f
  3649  021F  1D03               	skipz
  3650  0220  2A25               	goto	l7999
  3651  0221  01B7               	clrf	?___ftmul
  3652  0222  01B8               	clrf	?___ftmul+1
  3653  0223  01B9               	clrf	?___ftmul+2
  3654  0224  0008               	return
  3655  0225                     l7999:	
  3656  0225  0845               	movf	___ftmul@sign,w
  3657  0226  3E7B               	addlw	123
  3658  0227  07C0               	addwf	___ftmul@exp,f
  3659  0228  0839               	movf	___ftmul@f1+2,w
  3660  0229  00C5               	movwf	___ftmul@sign
  3661  022A  083C               	movf	___ftmul@f2+2,w
  3662  022B  06C5               	xorwf	___ftmul@sign,f
  3663  022C  3080               	movlw	128
  3664  022D  05C5               	andwf	___ftmul@sign,f
  3665  022E  3007               	movlw	7
  3666  022F  17B8               	bsf	___ftmul@f1+1,7
  3667  0230  17BB               	bsf	___ftmul@f2+1,7
  3668  0231  01BC               	clrf	___ftmul@f2+2
  3669  0232  01C1               	clrf	___ftmul@f3_as_product
  3670  0233  01C2               	clrf	___ftmul@f3_as_product+1
  3671  0234  01C3               	clrf	___ftmul@f3_as_product+2
  3672  0235  00C4               	movwf	___ftmul@cntr
  3673  0236                     l8017:	
  3674  0236  1C37               	btfss	___ftmul@f1,0
  3675  0237  2A46               	goto	l8021
  3676  0238  083A               	movf	___ftmul@f2,w
  3677  0239  07C1               	addwf	___ftmul@f3_as_product,f
  3678  023A  083B               	movf	___ftmul@f2+1,w
  3679  023B  1103               	clrz
  3680  023C  1803               	skipnc
  3681  023D  0A3B               	incf	___ftmul@f2+1,w
  3682  023E  1D03               	btfss	3,2
  3683  023F  07C2               	addwf	___ftmul@f3_as_product+1,f
  3684  0240  083C               	movf	___ftmul@f2+2,w
  3685  0241  1103               	clrz
  3686  0242  1803               	skipnc
  3687  0243  0A3C               	incf	___ftmul@f2+2,w
  3688  0244  1D03               	btfss	3,2
  3689  0245  07C3               	addwf	___ftmul@f3_as_product+2,f
  3690  0246                     l8021:	
  3691  0246  1003               	clrc
  3692  0247  0CB9               	rrf	___ftmul@f1+2,f
  3693  0248  0CB8               	rrf	___ftmul@f1+1,f
  3694  0249  0CB7               	rrf	___ftmul@f1,f
  3695  024A  1003               	clrc
  3696  024B  0DBA               	rlf	___ftmul@f2,f
  3697  024C  0DBB               	rlf	___ftmul@f2+1,f
  3698  024D  0DBC               	rlf	___ftmul@f2+2,f
  3699  024E  0BC4               	decfsz	___ftmul@cntr,f
  3700  024F  2A36               	goto	l8017
  3701  0250  3009               	movlw	9
  3702  0251  00C4               	movwf	___ftmul@cntr
  3703  0252                     l8029:	
  3704  0252  1C37               	btfss	___ftmul@f1,0
  3705  0253  2A62               	goto	l8033
  3706  0254  083A               	movf	___ftmul@f2,w
  3707  0255  07C1               	addwf	___ftmul@f3_as_product,f
  3708  0256  083B               	movf	___ftmul@f2+1,w
  3709  0257  1103               	clrz
  3710  0258  1803               	skipnc
  3711  0259  0A3B               	incf	___ftmul@f2+1,w
  3712  025A  1D03               	btfss	3,2
  3713  025B  07C2               	addwf	___ftmul@f3_as_product+1,f
  3714  025C  083C               	movf	___ftmul@f2+2,w
  3715  025D  1103               	clrz
  3716  025E  1803               	skipnc
  3717  025F  0A3C               	incf	___ftmul@f2+2,w
  3718  0260  1D03               	btfss	3,2
  3719  0261  07C3               	addwf	___ftmul@f3_as_product+2,f
  3720  0262                     l8033:	
  3721  0262  1003               	clrc
  3722  0263  0CB9               	rrf	___ftmul@f1+2,f
  3723  0264  0CB8               	rrf	___ftmul@f1+1,f
  3724  0265  0CB7               	rrf	___ftmul@f1,f
  3725  0266  1003               	clrc
  3726  0267  0CC3               	rrf	___ftmul@f3_as_product+2,f
  3727  0268  0CC2               	rrf	___ftmul@f3_as_product+1,f
  3728  0269  0CC1               	rrf	___ftmul@f3_as_product,f
  3729  026A  0BC4               	decfsz	___ftmul@cntr,f
  3730  026B  2A52               	goto	l8029
  3731  026C  0841               	movf	___ftmul@f3_as_product,w
  3732  026D  00A0               	movwf	?___ftpack
  3733  026E  0842               	movf	___ftmul@f3_as_product+1,w
  3734  026F  00A1               	movwf	?___ftpack+1
  3735  0270  0843               	movf	___ftmul@f3_as_product+2,w
  3736  0271  00A2               	movwf	?___ftpack+2
  3737  0272  0840               	movf	___ftmul@exp,w
  3738  0273  00A3               	movwf	?___ftpack+3
  3739  0274  0845               	movf	___ftmul@sign,w
  3740  0275  00A4               	movwf	?___ftpack+4
  3741  0276  22C5               	fcall	___ftpack
  3742  0277  0820               	movf	?___ftpack,w
  3743  0278  00B7               	movwf	?___ftmul
  3744  0279  0821               	movf	?___ftpack+1,w
  3745  027A  00B8               	movwf	?___ftmul+1
  3746  027B  0822               	movf	?___ftpack+2,w
  3747  027C  00B9               	movwf	?___ftmul+2
  3748  027D  0008               	return
  3749  027E                     __end_of___ftmul:	
  3750  027E                     __ptext1551:	
  3751 ;; =============== function _i2c_Restart ends ============
  3752                           
  3753                           
  3754 ;; *************** function ___ftge *****************
  3755 ;; Defined at:
  3756 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftge.c"
  3757 ;; Parameters:    Size  Location     Type
  3758 ;;  ff1             3    0[BANK0 ] float 
  3759 ;;  ff2             3    3[BANK0 ] float 
  3760 ;; Auto vars:     Size  Location     Type
  3761 ;;		None
  3762 ;; Return value:  Size  Location     Type
  3763 ;;		None               void
  3764 ;; Registers used:
  3765 ;;		wreg, status,2, status,0
  3766 ;; Tracked objects:
  3767 ;;		On entry : 60/0
  3768 ;;		On exit  : 60/0
  3769 ;;		Unchanged: FFF9F/0
  3770 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3771 ;;      Params:         0       6       0       0       0
  3772 ;;      Locals:         0       0       0       0       0
  3773 ;;      Temps:          0       0       0       0       0
  3774 ;;      Totals:         0       6       0       0       0
  3775 ;;Total ram usage:        6 bytes
  3776 ;; Hardware stack levels used:    1
  3777 ;; Hardware stack levels required when called:    3
  3778 ;; This function calls:
  3779 ;;		Nothing
  3780 ;; This function is called by:
  3781 ;;		_GetSensorH
  3782 ;;		_GetSensorL
  3783 ;;		_fabs
  3784 ;; This function uses a non-reentrant model
  3785 ;;
  3786  027E                     ___ftge:	
  3787                           
  3788                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  3789  027E  1FA2               	btfss	___ftge@ff1+2,7
  3790  027F  2A8D               	goto	l7651
  3791  0280  0820               	movf	___ftge@ff1,w
  3792  0281  3C00               	sublw	0
  3793  0282  00A0               	movwf	___ftge@ff1
  3794  0283  0821               	movf	___ftge@ff1+1,w
  3795  0284  1C03               	skipc
  3796  0285  0F21               	incfsz	___ftge@ff1+1,w
  3797  0286  3C00               	sublw	0
  3798  0287  00A1               	movwf	___ftge@ff1+1
  3799  0288  0822               	movf	___ftge@ff1+2,w
  3800  0289  1C03               	skipc
  3801  028A  0F22               	incfsz	___ftge@ff1+2,w
  3802  028B  3C80               	sublw	128
  3803  028C  00A2               	movwf	___ftge@ff1+2
  3804  028D                     l7651:	
  3805  028D  1FA5               	btfss	___ftge@ff2+2,7
  3806  028E  2A9C               	goto	l7655
  3807  028F  0823               	movf	___ftge@ff2,w
  3808  0290  3C00               	sublw	0
  3809  0291  00A3               	movwf	___ftge@ff2
  3810  0292  0824               	movf	___ftge@ff2+1,w
  3811  0293  1C03               	skipc
  3812  0294  0F24               	incfsz	___ftge@ff2+1,w
  3813  0295  3C00               	sublw	0
  3814  0296  00A4               	movwf	___ftge@ff2+1
  3815  0297  0825               	movf	___ftge@ff2+2,w
  3816  0298  1C03               	skipc
  3817  0299  0F25               	incfsz	___ftge@ff2+2,w
  3818  029A  3C80               	sublw	128
  3819  029B  00A5               	movwf	___ftge@ff2+2
  3820  029C                     l7655:	
  3821  029C  3080               	movlw	128
  3822  029D  06A2               	xorwf	___ftge@ff1+2,f
  3823  029E  06A5               	xorwf	___ftge@ff2+2,f
  3824  029F  0825               	movf	___ftge@ff2+2,w
  3825  02A0  0222               	subwf	___ftge@ff1+2,w
  3826  02A1  1D03               	skipz
  3827  02A2  0008               	return
  3828  02A3  0824               	movf	___ftge@ff2+1,w
  3829  02A4  0221               	subwf	___ftge@ff1+1,w
  3830  02A5  1D03               	skipz
  3831  02A6  0008               	return
  3832  02A7  0823               	movf	___ftge@ff2,w
  3833  02A8  0220               	subwf	___ftge@ff1,w
  3834  02A9  0008               	return
  3835  02AA                     __end_of___ftge:	
  3836  02AA                     __ptext1534:	
  3837 ;; =============== function ___lwtoft ends ============
  3838                           
  3839                           
  3840 ;; *************** function ___awtoft *****************
  3841 ;; Defined at:
  3842 ;;		line 33 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\awtoft.c"
  3843 ;; Parameters:    Size  Location     Type
  3844 ;;  c               2    8[BANK0 ] int 
  3845 ;; Auto vars:     Size  Location     Type
  3846 ;;  sign            1   11[BANK0 ] unsigned char 
  3847 ;; Return value:  Size  Location     Type
  3848 ;;                  3    8[BANK0 ] float 
  3849 ;; Registers used:
  3850 ;;		wreg, status,2, status,0, pclath, cstack
  3851 ;; Tracked objects:
  3852 ;;		On entry : 60/0
  3853 ;;		On exit  : 60/0
  3854 ;;		Unchanged: FFF9F/0
  3855 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3856 ;;      Params:         0       3       0       0       0
  3857 ;;      Locals:         0       1       0       0       0
  3858 ;;      Temps:          0       0       0       0       0
  3859 ;;      Totals:         0       4       0       0       0
  3860 ;;Total ram usage:        4 bytes
  3861 ;; Hardware stack levels used:    1
  3862 ;; Hardware stack levels required when called:    4
  3863 ;; This function calls:
  3864 ;;		___ftpack
  3865 ;; This function is called by:
  3866 ;;		_GetSensorH
  3867 ;;		_GetSensorL
  3868 ;; This function uses a non-reentrant model
  3869 ;;
  3870  02AA                     ___awtoft:	
  3871                           
  3872                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  3873  02AA  01AB               	clrf	___awtoft@sign
  3874  02AB  1FA9               	btfss	___awtoft@c+1,7
  3875  02AC  2AB4               	goto	l8055
  3876  02AD  09A8               	comf	___awtoft@c,f
  3877  02AE  09A9               	comf	___awtoft@c+1,f
  3878  02AF  0AA8               	incf	___awtoft@c,f
  3879  02B0  1903               	skipnz
  3880  02B1  0AA9               	incf	___awtoft@c+1,f
  3881  02B2  01AB               	clrf	___awtoft@sign
  3882  02B3  0AAB               	incf	___awtoft@sign,f
  3883  02B4                     l8055:	
  3884  02B4  0828               	movf	___awtoft@c,w
  3885  02B5  00A0               	movwf	?___ftpack
  3886  02B6  0829               	movf	___awtoft@c+1,w
  3887  02B7  00A1               	movwf	?___ftpack+1
  3888  02B8  308E               	movlw	142
  3889  02B9  01A2               	clrf	?___ftpack+2
  3890  02BA  00A3               	movwf	?___ftpack+3
  3891  02BB  082B               	movf	___awtoft@sign,w
  3892  02BC  00A4               	movwf	?___ftpack+4
  3893  02BD  22C5               	fcall	___ftpack
  3894  02BE  0820               	movf	?___ftpack,w
  3895  02BF  00A8               	movwf	?___awtoft
  3896  02C0  0821               	movf	?___ftpack+1,w
  3897  02C1  00A9               	movwf	?___awtoft+1
  3898  02C2  0822               	movf	?___ftpack+2,w
  3899  02C3  00AA               	movwf	?___awtoft+2
  3900  02C4  0008               	return
  3901  02C5                     __end_of___awtoft:	
  3902  02C5                     __ptext1553:	
  3903 ;; =============== function ___ftneg ends ============
  3904                           
  3905                           
  3906 ;; *************** function ___ftpack *****************
  3907 ;; Defined at:
  3908 ;;		line 63 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\float.c"
  3909 ;; Parameters:    Size  Location     Type
  3910 ;;  arg             3    0[BANK0 ] unsigned um
  3911 ;;  exp             1    3[BANK0 ] unsigned char 
  3912 ;;  sign            1    4[BANK0 ] unsigned char 
  3913 ;; Auto vars:     Size  Location     Type
  3914 ;;		None
  3915 ;; Return value:  Size  Location     Type
  3916 ;;                  3    0[BANK0 ] float 
  3917 ;; Registers used:
  3918 ;;		wreg, status,2, status,0
  3919 ;; Tracked objects:
  3920 ;;		On entry : 60/0
  3921 ;;		On exit  : 60/0
  3922 ;;		Unchanged: FFF9F/0
  3923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3924 ;;      Params:         0       5       0       0       0
  3925 ;;      Locals:         0       0       0       0       0
  3926 ;;      Temps:          0       3       0       0       0
  3927 ;;      Totals:         0       8       0       0       0
  3928 ;;Total ram usage:        8 bytes
  3929 ;; Hardware stack levels used:    1
  3930 ;; Hardware stack levels required when called:    3
  3931 ;; This function calls:
  3932 ;;		Nothing
  3933 ;; This function is called by:
  3934 ;;		___ftadd
  3935 ;;		___ftdiv
  3936 ;;		___ftmul
  3937 ;;		___lbtoft
  3938 ;;		___awtoft
  3939 ;;		___lwtoft
  3940 ;; This function uses a non-reentrant model
  3941 ;;
  3942  02C5                     ___ftpack:	
  3943                           
  3944                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  3945  02C5  0823               	movf	___ftpack@exp,w
  3946  02C6  1903               	btfsc	3,2
  3947  02C7  2ACD               	goto	l7615
  3948  02C8  0822               	movf	___ftpack@arg+2,w
  3949  02C9  0421               	iorwf	___ftpack@arg+1,w
  3950  02CA  0420               	iorwf	___ftpack@arg,w
  3951  02CB  1D03               	skipz
  3952  02CC  2AD6               	goto	l7621
  3953  02CD                     l7615:	
  3954  02CD  01A0               	clrf	?___ftpack
  3955  02CE  01A1               	clrf	?___ftpack+1
  3956  02CF  01A2               	clrf	?___ftpack+2
  3957  02D0  0008               	return
  3958  02D1                     l7619:	
  3959  02D1  0AA3               	incf	___ftpack@exp,f
  3960  02D2  1003               	clrc
  3961  02D3  0CA2               	rrf	___ftpack@arg+2,f
  3962  02D4  0CA1               	rrf	___ftpack@arg+1,f
  3963  02D5  0CA0               	rrf	___ftpack@arg,f
  3964  02D6                     l7621:	
  3965  02D6  30FE               	movlw	254
  3966  02D7  0522               	andwf	___ftpack@arg+2,w
  3967  02D8  1903               	btfsc	3,2
  3968  02D9  2AE5               	goto	l7625
  3969  02DA  2AD1               	goto	l7619
  3970  02DB                     l7623:	
  3971  02DB  0AA3               	incf	___ftpack@exp,f
  3972  02DC  0AA0               	incf	___ftpack@arg,f
  3973  02DD  1903               	skipnz
  3974  02DE  0AA1               	incf	___ftpack@arg+1,f
  3975  02DF  1903               	skipnz
  3976  02E0  0AA2               	incf	___ftpack@arg+2,f
  3977  02E1  1003               	clrc
  3978  02E2  0CA2               	rrf	___ftpack@arg+2,f
  3979  02E3  0CA1               	rrf	___ftpack@arg+1,f
  3980  02E4  0CA0               	rrf	___ftpack@arg,f
  3981  02E5                     l7625:	
  3982  02E5  30FF               	movlw	255
  3983  02E6  0522               	andwf	___ftpack@arg+2,w
  3984  02E7  1903               	btfsc	3,2
  3985  02E8  2AEF               	goto	l7629
  3986  02E9  2ADB               	goto	l7623
  3987  02EA                     l7627:	
  3988  02EA  03A3               	decf	___ftpack@exp,f
  3989  02EB  1003               	clrc
  3990  02EC  0DA0               	rlf	___ftpack@arg,f
  3991  02ED  0DA1               	rlf	___ftpack@arg+1,f
  3992  02EE  0DA2               	rlf	___ftpack@arg+2,f
  3993  02EF                     l7629:	
  3994  02EF  1FA1               	btfss	___ftpack@arg+1,7
  3995  02F0  2AEA               	goto	l7627
  3996  02F1  1C23               	btfss	___ftpack@exp,0
  3997  02F2  13A1               	bcf	___ftpack@arg+1,7
  3998  02F3  1003               	clrc
  3999  02F4  0CA3               	rrf	___ftpack@exp,f
  4000  02F5  0823               	movf	___ftpack@exp,w
  4001  02F6  00A7               	movwf	??___ftpack+2
  4002  02F7  01A6               	clrf	??___ftpack+1
  4003  02F8  01A5               	clrf	??___ftpack
  4004  02F9  0825               	movf	??___ftpack,w
  4005  02FA  04A0               	iorwf	___ftpack@arg,f
  4006  02FB  0826               	movf	??___ftpack+1,w
  4007  02FC  04A1               	iorwf	___ftpack@arg+1,f
  4008  02FD  0827               	movf	??___ftpack+2,w
  4009  02FE  04A2               	iorwf	___ftpack@arg+2,f
  4010  02FF  0824               	movf	___ftpack@sign,w
  4011  0300  1D03               	skipz
  4012  0301  17A2               	bsf	___ftpack@arg+2,7
  4013  0302  0008               	return
  4014  0303                     __end_of___ftpack:	
  4015  0303                     __ptext1556:	
  4016 ;; =============== function _GetLowDataRateValue ends ============
  4017                           
  4018                           
  4019 ;; *************** function _GetLowGainValue *****************
  4020 ;; Defined at:
  4021 ;;		line 42 in file "../function.c"
  4022 ;; Parameters:    Size  Location     Type
  4023 ;;		None
  4024 ;; Auto vars:     Size  Location     Type
  4025 ;;  gain            1    2[BANK0 ] unsigned char 
  4026 ;; Return value:  Size  Location     Type
  4027 ;;                  2    0[BANK0 ] unsigned int 
  4028 ;; Registers used:
  4029 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4030 ;; Tracked objects:
  4031 ;;		On entry : 60/0
  4032 ;;		On exit  : 60/0
  4033 ;;		Unchanged: FFF9F/0
  4034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4035 ;;      Params:         0       2       0       0       0
  4036 ;;      Locals:         0       1       0       0       0
  4037 ;;      Temps:          0       0       0       0       0
  4038 ;;      Totals:         0       3       0       0       0
  4039 ;;Total ram usage:        3 bytes
  4040 ;; Hardware stack levels used:    1
  4041 ;; Hardware stack levels required when called:    3
  4042 ;; This function calls:
  4043 ;;		Nothing
  4044 ;; This function is called by:
  4045 ;;		_GetSensorL
  4046 ;; This function uses a non-reentrant model
  4047 ;;
  4048  0303                     _GetLowGainValue:	
  4049                           
  4050                           ;function.c: 43: unsigned char gain = (int)(L_S & 0x03);
  4051                           
  4052                           ; Regs used in _GetLowGainValue: [wreg-fsr0h+status,2+status,0]
  4053  0303  1683               	bsf	3,5	;RP0=1, select bank1
  4054  0304  0838               	movf	_L_S^(0+128),w
  4055  0305  1283               	bcf	3,5	;RP0=0, select bank0
  4056  0306  00A2               	movwf	GetLowGainValue@gain
  4057  0307  3003               	movlw	3
  4058  0308  05A2               	andwf	GetLowGainValue@gain,f
  4059                           
  4060                           ;function.c: 44: switch(gain) {
  4061  0309  2B1D               	goto	l7573
  4062  030A                     l7551:	
  4063                           
  4064                           ;function.c: 46: return 1;
  4065  030A  01A0               	clrf	?_GetLowGainValue
  4066  030B  0AA0               	incf	?_GetLowGainValue,f
  4067  030C  01A1               	clrf	?_GetLowGainValue+1
  4068  030D  0008               	return
  4069  030E                     l7555:	
  4070                           
  4071                           ;function.c: 48: return 2;
  4072  030E  3002               	movlw	2
  4073  030F  00A0               	movwf	?_GetLowGainValue
  4074  0310  01A1               	clrf	?_GetLowGainValue+1
  4075  0311  0008               	return
  4076  0312                     l7559:	
  4077                           
  4078                           ;function.c: 50: return 4;
  4079  0312  3004               	movlw	4
  4080  0313  00A0               	movwf	?_GetLowGainValue
  4081  0314  01A1               	clrf	?_GetLowGainValue+1
  4082  0315  0008               	return
  4083  0316                     l7563:	
  4084                           
  4085                           ;function.c: 52: return 8;
  4086  0316  3008               	movlw	8
  4087  0317  00A0               	movwf	?_GetLowGainValue
  4088  0318  01A1               	clrf	?_GetLowGainValue+1
  4089  0319  0008               	return
  4090  031A                     l7567:	
  4091                           
  4092                           ;function.c: 54: return 0;
  4093  031A  01A0               	clrf	?_GetLowGainValue
  4094  031B  01A1               	clrf	?_GetLowGainValue+1
  4095  031C  0008               	return
  4096  031D                     l7573:	
  4097  031D  0822               	movf	GetLowGainValue@gain,w
  4098                           
  4099                           ; Switch size 1, requested type "speed"
  4100                           ; Number of cases is 4, Range of values is 0 to 3
  4101                           ; switch strategies available:
  4102                           ; Name         Instructions Cycles
  4103                           ; simple_byte           13     7 (average)
  4104                           ; direct_byte           15     7 (fixed)
  4105                           ; jumptable            260     6 (fixed)
  4106                           ; rangetable             8     6 (fixed)
  4107                           ; spacedrange           14     9 (fixed)
  4108                           ; locatedrange           4     3 (fixed)
  4109                           ;	Chosen strategy is simple_byte
  4110  031E  3A00               	xorlw	0	; case 0
  4111  031F  1903               	skipnz
  4112  0320  2B0A               	goto	l7551
  4113  0321  3A01               	xorlw	1	; case 1
  4114  0322  1903               	skipnz
  4115  0323  2B0E               	goto	l7555
  4116  0324  3A03               	xorlw	3	; case 2
  4117  0325  1903               	skipnz
  4118  0326  2B12               	goto	l7559
  4119  0327  3A01               	xorlw	1	; case 3
  4120  0328  1903               	skipnz
  4121  0329  2B16               	goto	l7563
  4122  032A  2B1A               	goto	l7567
  4123  032B  0008               	return
  4124  032C                     __end_of_GetLowGainValue:	
  4125  032C                     __ptext1555:	
  4126 ;; =============== function _memcpy ends ============
  4127                           
  4128                           
  4129 ;; *************** function _GetLowDataRateValue *****************
  4130 ;; Defined at:
  4131 ;;		line 59 in file "../function.c"
  4132 ;; Parameters:    Size  Location     Type
  4133 ;;		None
  4134 ;; Auto vars:     Size  Location     Type
  4135 ;;  dataRate        1    3[BANK0 ] unsigned char 
  4136 ;; Return value:  Size  Location     Type
  4137 ;;                  2    0[BANK0 ] unsigned int 
  4138 ;; Registers used:
  4139 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4140 ;; Tracked objects:
  4141 ;;		On entry : 60/0
  4142 ;;		On exit  : 60/0
  4143 ;;		Unchanged: FFF9F/0
  4144 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4145 ;;      Params:         0       2       0       0       0
  4146 ;;      Locals:         0       1       0       0       0
  4147 ;;      Temps:          0       1       0       0       0
  4148 ;;      Totals:         0       4       0       0       0
  4149 ;;Total ram usage:        4 bytes
  4150 ;; Hardware stack levels used:    1
  4151 ;; Hardware stack levels required when called:    3
  4152 ;; This function calls:
  4153 ;;		Nothing
  4154 ;; This function is called by:
  4155 ;;		_GetSensorL
  4156 ;; This function uses a non-reentrant model
  4157 ;;
  4158  032C                     _GetLowDataRateValue:	
  4159                           
  4160                           ;function.c: 60: unsigned char dataRate = ((L_S>>2) &0x03);
  4161                           
  4162                           ; Regs used in _GetLowDataRateValue: [wreg-fsr0h+status,2+status,0]
  4163  032C  1683               	bsf	3,5	;RP0=1, select bank1
  4164  032D  0838               	movf	_L_S^(0+128),w
  4165  032E  1283               	bcf	3,5	;RP0=0, select bank0
  4166  032F  00A2               	movwf	??_GetLowDataRateValue
  4167  0330  1003               	clrc
  4168  0331  0CA2               	rrf	??_GetLowDataRateValue,f
  4169  0332  1003               	clrc
  4170  0333  0CA2               	rrf	??_GetLowDataRateValue,f
  4171  0334  0822               	movf	??_GetLowDataRateValue,w
  4172  0335  00A3               	movwf	GetLowDataRateValue@dataRate
  4173  0336  3003               	movlw	3
  4174  0337  05A3               	andwf	GetLowDataRateValue@dataRate,f
  4175                           
  4176                           ;function.c: 61: switch(dataRate) {
  4177  0338  2B4C               	goto	l7599
  4178  0339                     l7577:	
  4179                           
  4180                           ;function.c: 63: return 2048;
  4181  0339  3008               	movlw	8
  4182  033A  01A0               	clrf	?_GetLowDataRateValue
  4183  033B  00A1               	movwf	?_GetLowDataRateValue+1
  4184  033C  0008               	return
  4185  033D                     l7581:	
  4186                           
  4187                           ;function.c: 65: return 8192;
  4188  033D  3020               	movlw	32
  4189  033E  01A0               	clrf	?_GetLowDataRateValue
  4190  033F  00A1               	movwf	?_GetLowDataRateValue+1
  4191  0340  0008               	return
  4192  0341                     l7585:	
  4193                           
  4194                           ;function.c: 67: return 16384;
  4195  0341  3040               	movlw	64
  4196  0342  01A0               	clrf	?_GetLowDataRateValue
  4197  0343  00A1               	movwf	?_GetLowDataRateValue+1
  4198  0344  0008               	return
  4199  0345                     l7589:	
  4200                           
  4201                           ;function.c: 69: return 32768;
  4202  0345  3080               	movlw	128
  4203  0346  01A0               	clrf	?_GetLowDataRateValue
  4204  0347  00A1               	movwf	?_GetLowDataRateValue+1
  4205  0348  0008               	return
  4206  0349                     l7593:	
  4207                           
  4208                           ;function.c: 71: return 0;
  4209  0349  01A0               	clrf	?_GetLowDataRateValue
  4210  034A  01A1               	clrf	?_GetLowDataRateValue+1
  4211  034B  0008               	return
  4212  034C                     l7599:	
  4213  034C  0823               	movf	GetLowDataRateValue@dataRate,w
  4214                           
  4215                           ; Switch size 1, requested type "speed"
  4216                           ; Number of cases is 4, Range of values is 0 to 3
  4217                           ; switch strategies available:
  4218                           ; Name         Instructions Cycles
  4219                           ; simple_byte           13     7 (average)
  4220                           ; direct_byte           15     7 (fixed)
  4221                           ; jumptable            260     6 (fixed)
  4222                           ; rangetable             8     6 (fixed)
  4223                           ; spacedrange           14     9 (fixed)
  4224                           ; locatedrange           4     3 (fixed)
  4225                           ;	Chosen strategy is simple_byte
  4226  034D  3A00               	xorlw	0	; case 0
  4227  034E  1903               	skipnz
  4228  034F  2B39               	goto	l7577
  4229  0350  3A01               	xorlw	1	; case 1
  4230  0351  1903               	skipnz
  4231  0352  2B3D               	goto	l7581
  4232  0353  3A03               	xorlw	3	; case 2
  4233  0354  1903               	skipnz
  4234  0355  2B41               	goto	l7585
  4235  0356  3A01               	xorlw	1	; case 3
  4236  0357  1903               	skipnz
  4237  0358  2B45               	goto	l7589
  4238  0359  2B49               	goto	l7593
  4239  035A  0008               	return
  4240  035B                     __end_of_GetLowDataRateValue:	
  4241  035B                     __ptext1547:	
  4242 ;; =============== function _WriteSN ends ============
  4243                           
  4244                           
  4245 ;; *************** function _ReadQitty *****************
  4246 ;; Defined at:
  4247 ;;		line 68 in file "../eeprom.c"
  4248 ;; Parameters:    Size  Location     Type
  4249 ;;		None
  4250 ;; Auto vars:     Size  Location     Type
  4251 ;;		None
  4252 ;; Return value:  Size  Location     Type
  4253 ;;                  1    wreg      unsigned char 
  4254 ;; Registers used:
  4255 ;;		wreg, pclath, cstack
  4256 ;; Tracked objects:
  4257 ;;		On entry : 40/20
  4258 ;;		On exit  : 60/0
  4259 ;;		Unchanged: FFF9F/0
  4260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4261 ;;      Params:         0       0       0       0       0
  4262 ;;      Locals:         0       0       0       0       0
  4263 ;;      Temps:          0       0       0       0       0
  4264 ;;      Totals:         0       0       0       0       0
  4265 ;;Total ram usage:        0 bytes
  4266 ;; Hardware stack levels used:    1
  4267 ;; Hardware stack levels required when called:    4
  4268 ;; This function calls:
  4269 ;;		_ReadEE
  4270 ;; This function is called by:
  4271 ;;		_DataHandle
  4272 ;;		_FormatData
  4273 ;; This function uses a non-reentrant model
  4274 ;;
  4275  035B                     _ReadQitty:	
  4276                           
  4277                           ;eeprom.c: 69: return ReadEE(0x06);
  4278                           
  4279                           ; Regs used in _ReadQitty: [wreg+pclath+cstack]
  4280  035B  3006               	movlw	6
  4281  035C  118A  2D5A         	ljmp	_ReadEE
  4282  035E                     __end_of_ReadQitty:	
  4283  035E                     __ptext1539:	
  4284 ;; =============== function ___ftadd ends ============
  4285                           
  4286                           
  4287 ;; *************** function _fabs *****************
  4288 ;; Defined at:
  4289 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\fabs.c"
  4290 ;; Parameters:    Size  Location     Type
  4291 ;;  d               3   20[BANK0 ] float 
  4292 ;; Auto vars:     Size  Location     Type
  4293 ;;		None
  4294 ;; Return value:  Size  Location     Type
  4295 ;;                  3   20[BANK0 ] float 
  4296 ;; Registers used:
  4297 ;;		wreg, status,2, status,0, pclath, cstack
  4298 ;; Tracked objects:
  4299 ;;		On entry : 60/0
  4300 ;;		On exit  : 60/0
  4301 ;;		Unchanged: FFF9F/0
  4302 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4303 ;;      Params:         0       3       0       0       0
  4304 ;;      Locals:         0       0       0       0       0
  4305 ;;      Temps:          0       0       0       0       0
  4306 ;;      Totals:         0       3       0       0       0
  4307 ;;Total ram usage:        3 bytes
  4308 ;; Hardware stack levels used:    1
  4309 ;; Hardware stack levels required when called:    4
  4310 ;; This function calls:
  4311 ;;		___ftge
  4312 ;;		___ftneg
  4313 ;; This function is called by:
  4314 ;;		_FormatData
  4315 ;; This function uses a non-reentrant model
  4316 ;;
  4317  035E                     _fabs:	
  4318                           
  4319                           ; Regs used in _fabs: [wreg+status,2+status,0+pclath+cstack]
  4320  035E  0834               	movf	fabs@d,w
  4321  035F  00A0               	movwf	?___ftge
  4322  0360  0835               	movf	fabs@d+1,w
  4323  0361  00A1               	movwf	?___ftge+1
  4324  0362  0836               	movf	fabs@d+2,w
  4325  0363  00A2               	movwf	?___ftge+2
  4326  0364  01A3               	clrf	?___ftge+3
  4327  0365  01A4               	clrf	?___ftge+4
  4328  0366  01A5               	clrf	?___ftge+5
  4329  0367  227E  118A         	fcall	___ftge
  4330  0369  1803               	btfsc	3,0
  4331  036A  0008               	return
  4332  036B  0834               	movf	fabs@d,w
  4333  036C  00A0               	movwf	?___ftneg
  4334  036D  0835               	movf	fabs@d+1,w
  4335  036E  00A1               	movwf	?___ftneg+1
  4336  036F  0836               	movf	fabs@d+2,w
  4337  0370  00A2               	movwf	?___ftneg+2
  4338  0371  23BB               	fcall	___ftneg
  4339  0372  0820               	movf	?___ftneg,w
  4340  0373  00B4               	movwf	?_fabs
  4341  0374  0821               	movf	?___ftneg+1,w
  4342  0375  00B5               	movwf	?_fabs+1
  4343  0376  0822               	movf	?___ftneg+2,w
  4344  0377  00B6               	movwf	?_fabs+2
  4345  0378  0008               	return
  4346  0379                     __end_of_fabs:	
  4347  0379                     __ptext1535:	
  4348 ;; =============== function ___awtoft ends ============
  4349                           
  4350                           
  4351 ;; *************** function ___lbtoft *****************
  4352 ;; Defined at:
  4353 ;;		line 28 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lbtoft.c"
  4354 ;; Parameters:    Size  Location     Type
  4355 ;;  c               1    wreg     unsigned char 
  4356 ;; Auto vars:     Size  Location     Type
  4357 ;;  c               1   11[BANK0 ] unsigned char 
  4358 ;; Return value:  Size  Location     Type
  4359 ;;                  3    8[BANK0 ] float 
  4360 ;; Registers used:
  4361 ;;		wreg, status,2, status,0, pclath, cstack
  4362 ;; Tracked objects:
  4363 ;;		On entry : 60/0
  4364 ;;		On exit  : 60/0
  4365 ;;		Unchanged: FFF9F/0
  4366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4367 ;;      Params:         0       3       0       0       0
  4368 ;;      Locals:         0       1       0       0       0
  4369 ;;      Temps:          0       0       0       0       0
  4370 ;;      Totals:         0       4       0       0       0
  4371 ;;Total ram usage:        4 bytes
  4372 ;; Hardware stack levels used:    1
  4373 ;; Hardware stack levels required when called:    4
  4374 ;; This function calls:
  4375 ;;		___ftpack
  4376 ;; This function is called by:
  4377 ;;		_FormatData
  4378 ;; This function uses a non-reentrant model
  4379 ;;
  4380  0379                     ___lbtoft:	
  4381                           
  4382                           ; Regs used in ___lbtoft: [wreg+status,2+status,0+pclath+cstack]
  4383                           ;___lbtoft@c stored from wreg
  4384  0379  00AB               	movwf	___lbtoft@c
  4385  037A  00A0               	movwf	?___ftpack
  4386  037B  308E               	movlw	142
  4387  037C  01A1               	clrf	?___ftpack+1
  4388  037D  01A2               	clrf	?___ftpack+2
  4389  037E  00A3               	movwf	?___ftpack+3
  4390  037F  01A4               	clrf	?___ftpack+4
  4391  0380  22C5               	fcall	___ftpack
  4392  0381  0820               	movf	?___ftpack,w
  4393  0382  00A8               	movwf	?___lbtoft
  4394  0383  0821               	movf	?___ftpack+1,w
  4395  0384  00A9               	movwf	?___lbtoft+1
  4396  0385  0822               	movf	?___ftpack+2,w
  4397  0386  00AA               	movwf	?___lbtoft+2
  4398  0387  0008               	return
  4399  0388                     __end_of___lbtoft:	
  4400  0388                     __ptext1524:	
  4401 ;; =============== function _i2c_PutByte ends ============
  4402                           
  4403                           
  4404 ;; *************** function ___ftsub *****************
  4405 ;; Defined at:
  4406 ;;		line 17 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftsub.c"
  4407 ;; Parameters:    Size  Location     Type
  4408 ;;  f2              3   38[BANK0 ] float 
  4409 ;;  f1              3   41[BANK0 ] float 
  4410 ;; Auto vars:     Size  Location     Type
  4411 ;;		None
  4412 ;; Return value:  Size  Location     Type
  4413 ;;                  3   38[BANK0 ] float 
  4414 ;; Registers used:
  4415 ;;		wreg, status,2, status,0, pclath, cstack
  4416 ;; Tracked objects:
  4417 ;;		On entry : 60/0
  4418 ;;		On exit  : 60/0
  4419 ;;		Unchanged: FFF9F/0
  4420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4421 ;;      Params:         0       6       0       0       0
  4422 ;;      Locals:         0       0       0       0       0
  4423 ;;      Temps:          0       0       0       0       0
  4424 ;;      Totals:         0       6       0       0       0
  4425 ;;Total ram usage:        6 bytes
  4426 ;; Hardware stack levels used:    1
  4427 ;; Hardware stack levels required when called:    5
  4428 ;; This function calls:
  4429 ;;		___ftadd
  4430 ;; This function is called by:
  4431 ;;		_FormatData
  4432 ;; This function uses a non-reentrant model
  4433 ;;
  4434  0388                     ___ftsub:	
  4435                           
  4436                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  4437  0388  3080               	movlw	128
  4438  0389  06C8               	xorwf	___ftsub@f2+2,f
  4439  038A  0849               	movf	___ftsub@f1,w
  4440  038B  00A8               	movwf	?___ftadd
  4441  038C  084A               	movf	___ftsub@f1+1,w
  4442  038D  00A9               	movwf	?___ftadd+1
  4443  038E  084B               	movf	___ftsub@f1+2,w
  4444  038F  00AA               	movwf	?___ftadd+2
  4445  0390  0846               	movf	___ftsub@f2,w
  4446  0391  00AB               	movwf	?___ftadd+3
  4447  0392  0847               	movf	___ftsub@f2+1,w
  4448  0393  00AC               	movwf	?___ftadd+4
  4449  0394  0848               	movf	___ftsub@f2+2,w
  4450  0395  00AD               	movwf	?___ftadd+5
  4451  0396  158A  2656         	fcall	___ftadd
  4452  0398  0828               	movf	?___ftadd,w
  4453  0399  00C6               	movwf	?___ftsub
  4454  039A  0829               	movf	?___ftadd+1,w
  4455  039B  00C7               	movwf	?___ftsub+1
  4456  039C  082A               	movf	?___ftadd+2,w
  4457  039D  00C8               	movwf	?___ftsub+2
  4458  039E  0008               	return
  4459  039F                     __end_of___ftsub:	
  4460  039F                     __ptext1554:	
  4461 ;; =============== function ___ftpack ends ============
  4462                           
  4463                           
  4464 ;; *************** function _memcpy *****************
  4465 ;; Defined at:
  4466 ;;		line 10 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\memcpy.c"
  4467 ;; Parameters:    Size  Location     Type
  4468 ;;  d1              1    wreg     PTR void 
  4469 ;;		 -> sndData(8), 
  4470 ;;  s1              1    0[BANK0 ] PTR const void 
  4471 ;;		 -> FormatTemperature@temp(3), FormatData@value(3), 
  4472 ;;  n               2    1[BANK0 ] unsigned int 
  4473 ;; Auto vars:     Size  Location     Type
  4474 ;;  d1              1    4[BANK0 ] PTR void 
  4475 ;;		 -> sndData(8), 
  4476 ;;  s               1    6[BANK0 ] PTR const unsigned char 
  4477 ;;		 -> FormatTemperature@temp(3), FormatData@value(3), 
  4478 ;;  d               1    5[BANK0 ] PTR unsigned char 
  4479 ;;		 -> sndData(8), 
  4480 ;; Return value:  Size  Location     Type
  4481 ;;                  1    wreg      PTR void 
  4482 ;; Registers used:
  4483 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4484 ;; Tracked objects:
  4485 ;;		On entry : 60/0
  4486 ;;		On exit  : 60/0
  4487 ;;		Unchanged: FFE9F/0
  4488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4489 ;;      Params:         0       3       0       0       0
  4490 ;;      Locals:         0       3       0       0       0
  4491 ;;      Temps:          0       1       0       0       0
  4492 ;;      Totals:         0       7       0       0       0
  4493 ;;Total ram usage:        7 bytes
  4494 ;; Hardware stack levels used:    1
  4495 ;; Hardware stack levels required when called:    3
  4496 ;; This function calls:
  4497 ;;		Nothing
  4498 ;; This function is called by:
  4499 ;;		_FormatData
  4500 ;; This function uses a non-reentrant model
  4501 ;;
  4502  039F                     _memcpy:	
  4503                           
  4504                           ; Regs used in _memcpy: [wreg-fsr0h+status,2+status,0]
  4505                           ;memcpy@d1 stored from wreg
  4506  039F  00A4               	movwf	memcpy@d1
  4507  03A0  0820               	movf	memcpy@s1,w
  4508  03A1  00A6               	movwf	memcpy@s
  4509  03A2  0824               	movf	memcpy@d1,w
  4510  03A3  00A5               	movwf	memcpy@d
  4511  03A4                     l7609:	
  4512  03A4  3001               	movlw	1
  4513  03A5  02A1               	subwf	memcpy@n,f
  4514  03A6  3000               	movlw	0
  4515  03A7  1C03               	skipc
  4516  03A8  03A2               	decf	memcpy@n+1,f
  4517  03A9  02A2               	subwf	memcpy@n+1,f
  4518  03AA  0A21               	incf	memcpy@n,w
  4519  03AB  1903               	skipnz
  4520  03AC  0A22               	incf	memcpy@n+1,w
  4521  03AD  1903               	btfsc	3,2
  4522  03AE  0008               	return
  4523  03AF  0826               	movf	memcpy@s,w
  4524  03B0  0084               	movwf	4
  4525  03B1  1383               	bcf	3,7	;select IRP bank0
  4526  03B2  0800               	movf	0,w
  4527  03B3  00A3               	movwf	??_memcpy
  4528  03B4  0825               	movf	memcpy@d,w
  4529  03B5  0084               	movwf	4
  4530  03B6  0823               	movf	??_memcpy,w
  4531  03B7  0080               	movwf	0
  4532  03B8  0AA6               	incf	memcpy@s,f
  4533  03B9  0AA5               	incf	memcpy@d,f
  4534  03BA  2BA4               	goto	l7609
  4535  03BB                     __end_of_memcpy:	
  4536  03BB                     __ptext1552:	
  4537 ;; =============== function ___ftge ends ============
  4538                           
  4539                           
  4540 ;; *************** function ___ftneg *****************
  4541 ;; Defined at:
  4542 ;;		line 16 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftneg.c"
  4543 ;; Parameters:    Size  Location     Type
  4544 ;;  f1              3    0[BANK0 ] float 
  4545 ;; Auto vars:     Size  Location     Type
  4546 ;;		None
  4547 ;; Return value:  Size  Location     Type
  4548 ;;                  3    0[BANK0 ] float 
  4549 ;; Registers used:
  4550 ;;		wreg
  4551 ;; Tracked objects:
  4552 ;;		On entry : 60/0
  4553 ;;		On exit  : 60/0
  4554 ;;		Unchanged: FFF9F/0
  4555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4556 ;;      Params:         0       3       0       0       0
  4557 ;;      Locals:         0       0       0       0       0
  4558 ;;      Temps:          0       0       0       0       0
  4559 ;;      Totals:         0       3       0       0       0
  4560 ;;Total ram usage:        3 bytes
  4561 ;; Hardware stack levels used:    1
  4562 ;; Hardware stack levels required when called:    3
  4563 ;; This function calls:
  4564 ;;		Nothing
  4565 ;; This function is called by:
  4566 ;;		_fabs
  4567 ;; This function uses a non-reentrant model
  4568 ;;
  4569  03BB                     ___ftneg:	
  4570                           
  4571                           ; Regs used in ___ftneg: [wreg]
  4572  03BB  0822               	movf	___ftneg@f1+2,w
  4573  03BC  0421               	iorwf	___ftneg@f1+1,w
  4574  03BD  0420               	iorwf	___ftneg@f1,w
  4575  03BE  1903               	skipnz
  4576  03BF  0008               	return
  4577  03C0  3080               	movlw	128
  4578  03C1  06A2               	xorwf	___ftneg@f1+2,f
  4579  03C2  0008               	return
  4580  03C3                     __end_of___ftneg:	
  4581                           
  4582                           	psect	text1528
  4583  0583                     __ptext1528:	
  4584 ;; =============== function _i2c_ReadByte ends ============
  4585                           
  4586                           
  4587 ;; *************** function _i2c_ReadAcknowledge *****************
  4588 ;; Defined at:
  4589 ;;		line 93 in file "../i2c.c"
  4590 ;; Parameters:    Size  Location     Type
  4591 ;;		None
  4592 ;; Auto vars:     Size  Location     Type
  4593 ;;  ack             1    2[BANK0 ] unsigned char 
  4594 ;; Return value:  Size  Location     Type
  4595 ;;                  1    wreg      char 
  4596 ;; Registers used:
  4597 ;;		wreg, pclath, cstack
  4598 ;; Tracked objects:
  4599 ;;		On entry : 60/0
  4600 ;;		On exit  : 60/0
  4601 ;;		Unchanged: 0/0
  4602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4603 ;;      Params:         0       0       0       0       0
  4604 ;;      Locals:         0       1       0       0       0
  4605 ;;      Temps:          0       1       0       0       0
  4606 ;;      Totals:         0       2       0       0       0
  4607 ;;Total ram usage:        2 bytes
  4608 ;; Hardware stack levels used:    1
  4609 ;; Hardware stack levels required when called:    4
  4610 ;; This function calls:
  4611 ;;		_i2c_WaitForSCL
  4612 ;; This function is called by:
  4613 ;;		_i2c_PutByte
  4614 ;; This function uses a non-reentrant model
  4615 ;;
  4616  0583                     _i2c_ReadAcknowledge:	
  4617  0583                     l8137:	
  4618                           ; Regs used in _i2c_ReadAcknowledge: [wreg+pclath+cstack]
  4619                           
  4620                           
  4621                           ;i2c.c: 94: unsigned char ack;
  4622                           ;i2c.c: 96: TRISB4 = 0;
  4623  0583  1683               	bsf	3,5	;RP0=1, select bank1
  4624  0584  300D               	movlw	13
  4625  0585  1206               	bcf	6,4
  4626                           
  4627                           ;i2c.c: 97: TRISB1 = 1;
  4628  0586  1486               	bsf	6,1
  4629                           
  4630                           ;i2c.c: 98: _delay((unsigned long)((40)*(4000000/4000000.0)));
  4631  0587  1283               	bcf	3,5	;RP0=0, select bank0
  4632  0588  00A1               	movwf	??_i2c_ReadAcknowledge
  4633  0589                     u3057:	
  4634  0589  0BA1               	decfsz	??_i2c_ReadAcknowledge,f
  4635  058A  2D89               	goto	u3057
  4636                           
  4637                           ;i2c.c: 99: TRISB4 = 1;
  4638  058B  1683               	bsf	3,5	;RP0=1, select bank1
  4639  058C  3003               	movlw	3
  4640  058D  1303               	bcf	3,6	;RP1=0, select bank1
  4641  058E  1606               	bsf	6,4
  4642                           
  4643                           ;i2c.c: 100: _delay((unsigned long)((10)*(4000000/4000000.0)));
  4644  058F  1283               	bcf	3,5	;RP0=0, select bank0
  4645  0590  00A1               	movwf	??_i2c_ReadAcknowledge
  4646  0591                     u3067:	
  4647  0591  0BA1               	decfsz	??_i2c_ReadAcknowledge,f
  4648  0592  2D91               	goto	u3067
  4649                           
  4650                           ;i2c.c: 101: ack = RB1;
  4651  0593  3000               	movlw	0
  4652  0594  1283               	bcf	3,5	;RP0=0, select bank0
  4653  0595  1303               	bcf	3,6	;RP1=0, select bank0
  4654  0596  1886               	btfsc	6,1
  4655  0597  3001               	movlw	1
  4656  0598  00A2               	movwf	i2c_ReadAcknowledge@ack
  4657                           
  4658                           ;i2c.c: 102: TRISB4 = 0;
  4659  0599  1683               	bsf	3,5	;RP0=1, select bank1
  4660  059A  1206               	bcf	6,4
  4661                           
  4662                           ;i2c.c: 105: if(i2c_WaitForSCL())
  4663  059B  2683  118A         	fcall	_i2c_WaitForSCL
  4664  059D  3A00               	xorlw	0
  4665  059E  1D03               	btfss	3,2
  4666                           
  4667                           ;i2c.c: 106: return (-1);
  4668  059F  34FF               	retlw	-1
  4669                           
  4670                           ;i2c.c: 107: return ack;
  4671  05A0  0822               	movf	i2c_ReadAcknowledge@ack,w
  4672  05A1  0008               	return
  4673  05A2                     __end_of_i2c_ReadAcknowledge:	
  4674  05A2                     __ptext1519:	
  4675 ;; =============== function _DataHandle ends ============
  4676                           
  4677                           
  4678 ;; *************** function _I2CReadL *****************
  4679 ;; Defined at:
  4680 ;;		line 159 in file "../Main.c"
  4681 ;; Parameters:    Size  Location     Type
  4682 ;;		None
  4683 ;; Auto vars:     Size  Location     Type
  4684 ;;		None
  4685 ;; Return value:  Size  Location     Type
  4686 ;;		None               void
  4687 ;; Registers used:
  4688 ;;		wreg, status,2, status,0, pclath, cstack
  4689 ;; Tracked objects:
  4690 ;;		On entry : 60/20
  4691 ;;		On exit  : 60/20
  4692 ;;		Unchanged: 0/0
  4693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4694 ;;      Params:         0       0       0       0       0
  4695 ;;      Locals:         0       0       0       0       0
  4696 ;;      Temps:          0       0       0       0       0
  4697 ;;      Totals:         0       0       0       0       0
  4698 ;;Total ram usage:        0 bytes
  4699 ;; Hardware stack levels used:    1
  4700 ;; Hardware stack levels required when called:    6
  4701 ;; This function calls:
  4702 ;;		_i2c_Restart
  4703 ;;		_i2c_PutByte
  4704 ;;		_i2c_Stop
  4705 ;;		_i2c_GetByte
  4706 ;; This function is called by:
  4707 ;;		_main
  4708 ;; This function uses a non-reentrant model
  4709 ;;
  4710  05A2                     _I2CReadL:	
  4711                           
  4712                           ;Main.c: 160: i2c_Restart();
  4713                           
  4714                           ; Regs used in _I2CReadL: [wreg+status,2+status,0+pclath+cstack]
  4715  05A2  25FB  118A         	fcall	_i2c_Restart
  4716                           
  4717                           ;Main.c: 161: i2c_PutByte(0x92 | 0x00);
  4718  05A4  3092               	movlw	146
  4719  05A5  25E2  118A         	fcall	_i2c_PutByte
  4720                           
  4721                           ;Main.c: 162: i2c_PutByte(CFG_L);
  4722  05A7  1683               	bsf	3,5	;RP0=1, select bank1
  4723  05A8  0832               	movf	_CFG_L^(0+128),w
  4724  05A9  25E2  118A         	fcall	_i2c_PutByte
  4725                           
  4726                           ;Main.c: 163: i2c_Stop();
  4727  05AB  2615  118A         	fcall	_i2c_Stop
  4728                           
  4729                           ;Main.c: 164: i2c_Restart();
  4730  05AD  25FB  118A         	fcall	_i2c_Restart
  4731                           
  4732                           ;Main.c: 165: i2c_PutByte(0x92 | 0x01);
  4733  05AF  3093               	movlw	147
  4734  05B0  25E2  118A         	fcall	_i2c_PutByte
  4735                           
  4736                           ;Main.c: 166: L_M = i2c_GetByte(!0);
  4737  05B2  3001               	movlw	1
  4738  05B3  25EA  118A         	fcall	_i2c_GetByte
  4739  05B5  1683               	bsf	3,5	;RP0=1, select bank1
  4740  05B6  00B7               	movwf	_L_M^(0+128)
  4741                           
  4742                           ;Main.c: 167: L_L = i2c_GetByte(!0);
  4743  05B7  3001               	movlw	1
  4744  05B8  25EA  118A         	fcall	_i2c_GetByte
  4745  05BA  1683               	bsf	3,5	;RP0=1, select bank1
  4746  05BB  00B6               	movwf	_L_L^(0+128)
  4747                           
  4748                           ;Main.c: 168: L_S = i2c_GetByte(0);
  4749  05BC  3000               	movlw	0
  4750  05BD  25EA  118A         	fcall	_i2c_GetByte
  4751  05BF  1683               	bsf	3,5	;RP0=1, select bank1
  4752  05C0  00B8               	movwf	_L_S^(0+128)
  4753                           
  4754                           ;Main.c: 169: i2c_Stop();
  4755  05C1  2E15               	ljmp	l7713
  4756  05C2                     __end_of_I2CReadL:	
  4757  05C2                     __ptext1520:	
  4758 ;; =============== function _I2CReadL ends ============
  4759                           
  4760                           
  4761 ;; *************** function _I2CReadH *****************
  4762 ;; Defined at:
  4763 ;;		line 146 in file "../Main.c"
  4764 ;; Parameters:    Size  Location     Type
  4765 ;;		None
  4766 ;; Auto vars:     Size  Location     Type
  4767 ;;		None
  4768 ;; Return value:  Size  Location     Type
  4769 ;;		None               void
  4770 ;; Registers used:
  4771 ;;		wreg, status,2, status,0, pclath, cstack
  4772 ;; Tracked objects:
  4773 ;;		On entry : 60/20
  4774 ;;		On exit  : 60/20
  4775 ;;		Unchanged: 0/0
  4776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4777 ;;      Params:         0       0       0       0       0
  4778 ;;      Locals:         0       0       0       0       0
  4779 ;;      Temps:          0       0       0       0       0
  4780 ;;      Totals:         0       0       0       0       0
  4781 ;;Total ram usage:        0 bytes
  4782 ;; Hardware stack levels used:    1
  4783 ;; Hardware stack levels required when called:    6
  4784 ;; This function calls:
  4785 ;;		_i2c_Restart
  4786 ;;		_i2c_PutByte
  4787 ;;		_i2c_Stop
  4788 ;;		_i2c_GetByte
  4789 ;; This function is called by:
  4790 ;;		_main
  4791 ;; This function uses a non-reentrant model
  4792 ;;
  4793  05C2                     _I2CReadH:	
  4794                           
  4795                           ;Main.c: 147: i2c_Restart();
  4796                           
  4797                           ; Regs used in _I2CReadH: [wreg+status,2+status,0+pclath+cstack]
  4798  05C2  25FB  118A         	fcall	_i2c_Restart
  4799                           
  4800                           ;Main.c: 148: i2c_PutByte(0x90 | 0x00);
  4801  05C4  3090               	movlw	144
  4802  05C5  25E2  118A         	fcall	_i2c_PutByte
  4803                           
  4804                           ;Main.c: 149: i2c_PutByte(CFG_H);
  4805  05C7  1683               	bsf	3,5	;RP0=1, select bank1
  4806  05C8  0831               	movf	_CFG_H^(0+128),w
  4807  05C9  25E2  118A         	fcall	_i2c_PutByte
  4808                           
  4809                           ;Main.c: 150: i2c_Stop();
  4810  05CB  2615  118A         	fcall	_i2c_Stop
  4811                           
  4812                           ;Main.c: 151: i2c_Restart();
  4813  05CD  25FB  118A         	fcall	_i2c_Restart
  4814                           
  4815                           ;Main.c: 152: i2c_PutByte(0x90 | 0x01);
  4816  05CF  3091               	movlw	145
  4817  05D0  25E2  118A         	fcall	_i2c_PutByte
  4818                           
  4819                           ;Main.c: 153: H_M = i2c_GetByte(!0);
  4820  05D2  3001               	movlw	1
  4821  05D3  25EA  118A         	fcall	_i2c_GetByte
  4822  05D5  1683               	bsf	3,5	;RP0=1, select bank1
  4823  05D6  00B4               	movwf	_H_M^(0+128)
  4824                           
  4825                           ;Main.c: 154: H_L = i2c_GetByte(!0);
  4826  05D7  3001               	movlw	1
  4827  05D8  25EA  118A         	fcall	_i2c_GetByte
  4828  05DA  1683               	bsf	3,5	;RP0=1, select bank1
  4829  05DB  00B3               	movwf	_H_L^(0+128)
  4830                           
  4831                           ;Main.c: 155: H_S = i2c_GetByte(0);
  4832  05DC  3000               	movlw	0
  4833  05DD  25EA  118A         	fcall	_i2c_GetByte
  4834  05DF  1683               	bsf	3,5	;RP0=1, select bank1
  4835  05E0  00B5               	movwf	_H_S^(0+128)
  4836                           
  4837                           ;Main.c: 156: i2c_Stop();
  4838  05E1  2E15               	ljmp	l7713
  4839  05E2                     __end_of_I2CReadH:	
  4840  05E2                     __ptext1523:	
  4841 ;; =============== function _i2c_GetByte ends ============
  4842                           
  4843                           
  4844 ;; *************** function _i2c_PutByte *****************
  4845 ;; Defined at:
  4846 ;;		line 168 in file "../i2c.c"
  4847 ;; Parameters:    Size  Location     Type
  4848 ;;  data            1    wreg     unsigned char 
  4849 ;; Auto vars:     Size  Location     Type
  4850 ;;  data            1    4[BANK0 ] unsigned char 
  4851 ;; Return value:  Size  Location     Type
  4852 ;;                  1    wreg      char 
  4853 ;; Registers used:
  4854 ;;		wreg, status,2, status,0, pclath, cstack
  4855 ;; Tracked objects:
  4856 ;;		On entry : 60/20
  4857 ;;		On exit  : 60/0
  4858 ;;		Unchanged: 0/0
  4859 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4860 ;;      Params:         0       0       0       0       0
  4861 ;;      Locals:         0       1       0       0       0
  4862 ;;      Temps:          0       0       0       0       0
  4863 ;;      Totals:         0       1       0       0       0
  4864 ;;Total ram usage:        1 bytes
  4865 ;; Hardware stack levels used:    1
  4866 ;; Hardware stack levels required when called:    5
  4867 ;; This function calls:
  4868 ;;		_i2c_SendByte
  4869 ;;		_i2c_ReadAcknowledge
  4870 ;; This function is called by:
  4871 ;;		_I2CReadH
  4872 ;;		_I2CReadL
  4873 ;; This function uses a non-reentrant model
  4874 ;;
  4875  05E2                     _i2c_PutByte:	
  4876                           
  4877                           ; Regs used in _i2c_PutByte: [wreg+status,2+status,0+pclath+cstack]
  4878                           ;i2c_PutByte@data stored from wreg
  4879  05E2  1283               	bcf	3,5	;RP0=0, select bank0
  4880  05E3  00A4               	movwf	i2c_PutByte@data
  4881                           
  4882                           ;i2c.c: 169: if(i2c_SendByte(data))
  4883  05E4  2641  118A         	fcall	_i2c_SendByte
  4884  05E6  3A00               	xorlw	0
  4885  05E7  1D03               	btfss	3,2
  4886                           
  4887                           ;i2c.c: 170: return (-1);
  4888  05E8  34FF               	retlw	-1
  4889                           
  4890                           ;i2c.c: 171: return i2c_ReadAcknowledge();
  4891  05E9  2D83               	ljmp	l8137
  4892  05EA                     __end_of_i2c_PutByte:	
  4893  05EA                     __ptext1522:	
  4894 ;; =============== function _FormatData ends ============
  4895                           
  4896                           
  4897 ;; *************** function _i2c_GetByte *****************
  4898 ;; Defined at:
  4899 ;;		line 179 in file "../i2c.c"
  4900 ;; Parameters:    Size  Location     Type
  4901 ;;  more            1    wreg     unsigned char 
  4902 ;; Auto vars:     Size  Location     Type
  4903 ;;  more            1    6[BANK0 ] unsigned char 
  4904 ;;  byte            2    4[BANK0 ] int 
  4905 ;; Return value:  Size  Location     Type
  4906 ;;                  1    wreg      unsigned char 
  4907 ;; Registers used:
  4908 ;;		wreg, status,2, status,0, pclath, cstack
  4909 ;; Tracked objects:
  4910 ;;		On entry : 40/0
  4911 ;;		On exit  : 60/0
  4912 ;;		Unchanged: 0/0
  4913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4914 ;;      Params:         0       0       0       0       0
  4915 ;;      Locals:         0       3       0       0       0
  4916 ;;      Temps:          0       0       0       0       0
  4917 ;;      Totals:         0       3       0       0       0
  4918 ;;Total ram usage:        3 bytes
  4919 ;; Hardware stack levels used:    1
  4920 ;; Hardware stack levels required when called:    5
  4921 ;; This function calls:
  4922 ;;		_i2c_ReadByte
  4923 ;;		_i2c_SendAcknowledge
  4924 ;; This function is called by:
  4925 ;;		_I2CReadH
  4926 ;;		_I2CReadL
  4927 ;; This function uses a non-reentrant model
  4928 ;;
  4929  05EA                     _i2c_GetByte:	
  4930                           
  4931                           ; Regs used in _i2c_GetByte: [wreg+status,2+status,0+pclath+cstack]
  4932                           ;i2c_GetByte@more stored from wreg
  4933  05EA  1283               	bcf	3,5	;RP0=0, select bank0
  4934  05EB  00A6               	movwf	i2c_GetByte@more
  4935                           
  4936                           ;i2c.c: 180: int byte;
  4937                           ;i2c.c: 182: if((byte = i2c_ReadByte()) == (-1))
  4938  05EC  268F  118A         	fcall	_i2c_ReadByte
  4939  05EE  00A4               	movwf	i2c_GetByte@byte
  4940  05EF  01A5               	clrf	i2c_GetByte@byte+1
  4941  05F0  0A24               	incf	i2c_GetByte@byte,w
  4942  05F1  1903               	skipnz
  4943  05F2  0A25               	incf	i2c_GetByte@byte+1,w
  4944  05F3  1903               	btfsc	3,2
  4945                           
  4946                           ;i2c.c: 183: return (-1);
  4947  05F4  34FF               	retlw	255
  4948                           
  4949                           ;i2c.c: 185: i2c_SendAcknowledge(more);
  4950  05F5  0826               	movf	i2c_GetByte@more,w
  4951  05F6  26B8               	fcall	_i2c_SendAcknowledge
  4952                           
  4953                           ;i2c.c: 187: return byte;
  4954  05F7  1283               	bcf	3,5	;RP0=0, select bank0
  4955  05F8  1303               	bcf	3,6	;RP1=0, select bank0
  4956  05F9  0824               	movf	i2c_GetByte@byte,w
  4957  05FA  0008               	return
  4958  05FB                     __end_of_i2c_GetByte:	
  4959  05FB                     __ptext1550:	
  4960 ;; =============== function _i2c_Stop ends ============
  4961                           
  4962                           
  4963 ;; *************** function _i2c_Restart *****************
  4964 ;; Defined at:
  4965 ;;		line 43 in file "../i2c.c"
  4966 ;; Parameters:    Size  Location     Type
  4967 ;;		None
  4968 ;; Auto vars:     Size  Location     Type
  4969 ;;		None
  4970 ;; Return value:  Size  Location     Type
  4971 ;;		None               void
  4972 ;; Registers used:
  4973 ;;		wreg
  4974 ;; Tracked objects:
  4975 ;;		On entry : 60/20
  4976 ;;		On exit  : 60/20
  4977 ;;		Unchanged: 0/0
  4978 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4979 ;;      Params:         0       0       0       0       0
  4980 ;;      Locals:         0       0       0       0       0
  4981 ;;      Temps:          0       1       0       0       0
  4982 ;;      Totals:         0       1       0       0       0
  4983 ;;Total ram usage:        1 bytes
  4984 ;; Hardware stack levels used:    1
  4985 ;; Hardware stack levels required when called:    3
  4986 ;; This function calls:
  4987 ;;		Nothing
  4988 ;; This function is called by:
  4989 ;;		_I2CReadH
  4990 ;;		_I2CReadL
  4991 ;; This function uses a non-reentrant model
  4992 ;;
  4993  05FB                     _i2c_Restart:	
  4994  05FB  3003               	movlw	3
  4995                           
  4996                           ;i2c.c: 44: TRISB1 = 1;
  4997                           
  4998                           ; Regs used in _i2c_Restart: [wreg]
  4999  05FC  1486               	bsf	6,1
  5000                           
  5001                           ;i2c.c: 45: _delay((unsigned long)((10)*(4000000/4000000.0)));
  5002  05FD  1283               	bcf	3,5	;RP0=0, select bank0
  5003  05FE  00A0               	movwf	??_i2c_Restart
  5004  05FF                     u3177:	
  5005  05FF  0BA0               	decfsz	??_i2c_Restart,f
  5006  0600  2DFF               	goto	u3177
  5007                           
  5008                           ;i2c.c: 47: TRISB4 = 1;
  5009  0601  1683               	bsf	3,5	;RP0=1, select bank1
  5010  0602  300D               	movlw	13
  5011  0603  1303               	bcf	3,6	;RP1=0, select bank1
  5012  0604  1606               	bsf	6,4
  5013                           
  5014                           ;i2c.c: 48: _delay((unsigned long)((40)*(4000000/4000000.0)));
  5015  0605  1283               	bcf	3,5	;RP0=0, select bank0
  5016  0606  00A0               	movwf	??_i2c_Restart
  5017  0607                     u3187:	
  5018  0607  0BA0               	decfsz	??_i2c_Restart,f
  5019  0608  2E07               	goto	u3187
  5020                           
  5021                           ;i2c.c: 50: TRISB1 = 0;
  5022  0609  1683               	bsf	3,5	;RP0=1, select bank1
  5023  060A  300D               	movlw	13
  5024  060B  1303               	bcf	3,6	;RP1=0, select bank1
  5025  060C  1086               	bcf	6,1
  5026                           
  5027                           ;i2c.c: 51: _delay((unsigned long)((40)*(4000000/4000000.0)));
  5028  060D  1283               	bcf	3,5	;RP0=0, select bank0
  5029  060E  00A0               	movwf	??_i2c_Restart
  5030  060F                     u3197:	
  5031  060F  0BA0               	decfsz	??_i2c_Restart,f
  5032  0610  2E0F               	goto	u3197
  5033                           
  5034                           ;i2c.c: 53: TRISB4 = 0;
  5035  0611  1683               	bsf	3,5	;RP0=1, select bank1
  5036  0612  1303               	bcf	3,6	;RP1=0, select bank1
  5037  0613  1206               	bcf	6,4
  5038  0614  0008               	return
  5039  0615                     __end_of_i2c_Restart:	
  5040  0615                     __ptext1549:	
  5041 ;; =============== function _WriteQitty ends ============
  5042                           
  5043                           
  5044 ;; *************** function _i2c_Stop *****************
  5045 ;; Defined at:
  5046 ;;		line 19 in file "../i2c.c"
  5047 ;; Parameters:    Size  Location     Type
  5048 ;;		None
  5049 ;; Auto vars:     Size  Location     Type
  5050 ;;		None
  5051 ;; Return value:  Size  Location     Type
  5052 ;;		None               void
  5053 ;; Registers used:
  5054 ;;		wreg
  5055 ;; Tracked objects:
  5056 ;;		On entry : 40/0
  5057 ;;		On exit  : 60/20
  5058 ;;		Unchanged: 0/0
  5059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5060 ;;      Params:         0       0       0       0       0
  5061 ;;      Locals:         0       0       0       0       0
  5062 ;;      Temps:          0       1       0       0       0
  5063 ;;      Totals:         0       1       0       0       0
  5064 ;;Total ram usage:        1 bytes
  5065 ;; Hardware stack levels used:    1
  5066 ;; Hardware stack levels required when called:    3
  5067 ;; This function calls:
  5068 ;;		Nothing
  5069 ;; This function is called by:
  5070 ;;		_I2CReadH
  5071 ;;		_I2CReadL
  5072 ;; This function uses a non-reentrant model
  5073 ;;
  5074  0615                     _i2c_Stop:	
  5075  0615                     l7713:	
  5076                           ; Regs used in _i2c_Stop: [wreg]
  5077                           
  5078                           
  5079                           ;i2c.c: 21: TRISB4 = 0;
  5080  0615  1683               	bsf	3,5	;RP0=1, select bank1
  5081  0616  300D               	movlw	13
  5082  0617  1206               	bcf	6,4
  5083                           
  5084                           ;i2c.c: 22: _delay((unsigned long)((40)*(4000000/4000000.0)));
  5085  0618  1283               	bcf	3,5	;RP0=0, select bank0
  5086  0619  00A0               	movwf	??_i2c_Stop
  5087  061A                     u3127:	
  5088  061A  0BA0               	decfsz	??_i2c_Stop,f
  5089  061B  2E1A               	goto	u3127
  5090                           
  5091                           ;i2c.c: 23: TRISB1 = 0;
  5092  061C  1683               	bsf	3,5	;RP0=1, select bank1
  5093  061D  300D               	movlw	13
  5094  061E  1303               	bcf	3,6	;RP1=0, select bank1
  5095  061F  1086               	bcf	6,1
  5096                           
  5097                           ;i2c.c: 24: _delay((unsigned long)((40)*(4000000/4000000.0)));
  5098  0620  1283               	bcf	3,5	;RP0=0, select bank0
  5099  0621  00A0               	movwf	??_i2c_Stop
  5100  0622                     u3137:	
  5101  0622  0BA0               	decfsz	??_i2c_Stop,f
  5102  0623  2E22               	goto	u3137
  5103                           
  5104                           ;i2c.c: 25: TRISB4 = 1;
  5105  0624  1683               	bsf	3,5	;RP0=1, select bank1
  5106  0625  3003               	movlw	3
  5107  0626  1303               	bcf	3,6	;RP1=0, select bank1
  5108  0627  1606               	bsf	6,4
  5109                           
  5110                           ;i2c.c: 26: _delay((unsigned long)((10)*(4000000/4000000.0)));
  5111  0628  1283               	bcf	3,5	;RP0=0, select bank0
  5112  0629  00A0               	movwf	??_i2c_Stop
  5113  062A                     u3147:	
  5114  062A  0BA0               	decfsz	??_i2c_Stop,f
  5115  062B  2E2A               	goto	u3147
  5116                           
  5117                           ;i2c.c: 27: TRISB4 = 1;
  5118  062C  1683               	bsf	3,5	;RP0=1, select bank1
  5119  062D  300D               	movlw	13
  5120  062E  1303               	bcf	3,6	;RP1=0, select bank1
  5121  062F  1606               	bsf	6,4
  5122                           
  5123                           ;i2c.c: 28: _delay((unsigned long)((40)*(4000000/4000000.0)));
  5124  0630  1283               	bcf	3,5	;RP0=0, select bank0
  5125  0631  00A0               	movwf	??_i2c_Stop
  5126  0632                     u3157:	
  5127  0632  0BA0               	decfsz	??_i2c_Stop,f
  5128  0633  2E32               	goto	u3157
  5129                           
  5130                           ;i2c.c: 29: TRISB1 = 1;
  5131  0634  1683               	bsf	3,5	;RP0=1, select bank1
  5132  0635  3010               	movlw	16
  5133  0636  1303               	bcf	3,6	;RP1=0, select bank1
  5134  0637  1486               	bsf	6,1
  5135                           
  5136                           ;i2c.c: 30: _delay((unsigned long)((50)*(4000000/4000000.0)));
  5137  0638  1283               	bcf	3,5	;RP0=0, select bank0
  5138  0639  00A0               	movwf	??_i2c_Stop
  5139  063A                     u3167:	
  5140  063A  0BA0               	decfsz	??_i2c_Stop,f
  5141  063B  2E3A               	goto	u3167
  5142  063C  0064               	clrwdt
  5143                           
  5144                           ;i2c.c: 31: TRISB1 = 1;
  5145  063D  1683               	bsf	3,5	;RP0=1, select bank1
  5146  063E  1303               	bcf	3,6	;RP1=0, select bank1
  5147  063F  1486               	bsf	6,1
  5148  0640  0008               	return
  5149  0641                     __end_of_i2c_Stop:	
  5150  0641                     __ptext1529:	
  5151 ;; =============== function _i2c_ReadAcknowledge ends ============
  5152                           
  5153                           
  5154 ;; *************** function _i2c_SendByte *****************
  5155 ;; Defined at:
  5156 ;;		line 62 in file "../i2c.c"
  5157 ;; Parameters:    Size  Location     Type
  5158 ;;  byte            1    wreg     unsigned char 
  5159 ;; Auto vars:     Size  Location     Type
  5160 ;;  byte            1    2[BANK0 ] unsigned char 
  5161 ;;  i               1    3[BANK0 ] char 
  5162 ;; Return value:  Size  Location     Type
  5163 ;;                  1    wreg      unsigned char 
  5164 ;; Registers used:
  5165 ;;		wreg, status,2, status,0, pclath, cstack
  5166 ;; Tracked objects:
  5167 ;;		On entry : 60/0
  5168 ;;		On exit  : 60/0
  5169 ;;		Unchanged: 0/0
  5170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5171 ;;      Params:         0       0       0       0       0
  5172 ;;      Locals:         0       2       0       0       0
  5173 ;;      Temps:          0       1       0       0       0
  5174 ;;      Totals:         0       3       0       0       0
  5175 ;;Total ram usage:        3 bytes
  5176 ;; Hardware stack levels used:    1
  5177 ;; Hardware stack levels required when called:    4
  5178 ;; This function calls:
  5179 ;;		_i2c_WaitForSCL
  5180 ;; This function is called by:
  5181 ;;		_i2c_PutByte
  5182 ;; This function uses a non-reentrant model
  5183 ;;
  5184  0641                     _i2c_SendByte:	
  5185                           
  5186                           ; Regs used in _i2c_SendByte: [wreg+status,2+status,0+pclath+cstack]
  5187                           ;i2c_SendByte@byte stored from wreg
  5188  0641  00A2               	movwf	i2c_SendByte@byte
  5189                           
  5190                           ;i2c.c: 63: signed char i;
  5191                           ;i2c.c: 65: for(i=7; i>=0; i--)
  5192  0642  3007               	movlw	7
  5193  0643  00A3               	movwf	i2c_SendByte@i
  5194  0644                     l2063:	
  5195                           
  5196                           ;i2c.c: 66: {
  5197                           ;i2c.c: 67: TRISB4 = 0;
  5198  0644  1683               	bsf	3,5	;RP0=1, select bank1
  5199  0645  1206               	bcf	6,4
  5200                           
  5201                           ;i2c.c: 70: TRISB1 = ((byte>>i)&0x01);
  5202  0646  1283               	bcf	3,5	;RP0=0, select bank0
  5203  0647  0822               	movf	i2c_SendByte@byte,w
  5204  0648  00A1               	movwf	??_i2c_SendByte
  5205  0649  0A23               	incf	i2c_SendByte@i,w
  5206  064A  2E4D               	goto	u2354
  5207  064B                     u2355:	
  5208  064B  1003               	clrc
  5209  064C  0CA1               	rrf	??_i2c_SendByte,f
  5210  064D                     u2354:	
  5211  064D  3EFF               	addlw	-1
  5212  064E  1D03               	skipz
  5213  064F  2E4B               	goto	u2355
  5214  0650  1C21               	btfss	??_i2c_SendByte,0
  5215  0651  2E56               	goto	u2360
  5216  0652  1683               	bsf	3,5	;RP0=1, select bank1
  5217  0653  1303               	bcf	3,6	;RP1=0, select bank1
  5218  0654  1486               	bsf	6,1
  5219  0655  2E59               	goto	u2374
  5220  0656                     u2360:	
  5221  0656  1683               	bsf	3,5	;RP0=1, select bank1
  5222  0657  1303               	bcf	3,6	;RP1=0, select bank1
  5223  0658  1086               	bcf	6,1
  5224  0659                     u2374:	
  5225                           
  5226                           ;i2c.c: 71: if ((byte>>i)&0x01) {
  5227  0659  1283               	bcf	3,5	;RP0=0, select bank0
  5228  065A  0822               	movf	i2c_SendByte@byte,w
  5229  065B  00A1               	movwf	??_i2c_SendByte
  5230  065C  0A23               	incf	i2c_SendByte@i,w
  5231  065D  2E60               	goto	u2384
  5232  065E                     u2385:	
  5233  065E  1003               	clrc
  5234  065F  0CA1               	rrf	??_i2c_SendByte,f
  5235  0660                     u2384:	
  5236  0660  3EFF               	addlw	-1
  5237  0661  1D03               	skipz
  5238  0662  2E5E               	goto	u2385
  5239  0663  1C21               	btfss	??_i2c_SendByte,0
  5240  0664  2E68               	goto	l2065
  5241                           
  5242                           ;i2c.c: 72: TRISB1 = 1;
  5243  0665  1683               	bsf	3,5	;RP0=1, select bank1
  5244  0666  1486               	bsf	6,1
  5245                           
  5246                           ;i2c.c: 73: }else {
  5247  0667  2E6A               	goto	l8115
  5248  0668                     l2065:	
  5249                           
  5250                           ;i2c.c: 74: TRISB1 = 0;
  5251  0668  1683               	bsf	3,5	;RP0=1, select bank1
  5252  0669  1086               	bcf	6,1
  5253  066A                     l8115:	
  5254                           
  5255                           ;i2c.c: 75: }
  5256                           ;i2c.c: 76: _delay((unsigned long)((10)*(4000000/4000000.0)));
  5257  066A  3003               	movlw	3
  5258  066B  1283               	bcf	3,5	;RP0=0, select bank0
  5259  066C  00A1               	movwf	??_i2c_SendByte
  5260  066D                     u3077:	
  5261  066D  0BA1               	decfsz	??_i2c_SendByte,f
  5262  066E  2E6D               	goto	u3077
  5263                           
  5264                           ;i2c.c: 77: TRISB4 = 1;
  5265  066F  1683               	bsf	3,5	;RP0=1, select bank1
  5266  0670  1303               	bcf	3,6	;RP1=0, select bank1
  5267  0671  1606               	bsf	6,4
  5268                           
  5269                           ;i2c.c: 79: if(i2c_WaitForSCL())
  5270  0672  2683  118A         	fcall	_i2c_WaitForSCL
  5271  0674  3A00               	xorlw	0
  5272  0675  1D03               	btfss	3,2
  5273                           
  5274                           ;i2c.c: 80: return !0;
  5275  0676  3401               	retlw	1
  5276                           
  5277                           ;i2c.c: 82: _delay((unsigned long)((40)*(4000000/4000000.0)));
  5278  0677  300D               	movlw	13
  5279  0678  00A1               	movwf	??_i2c_SendByte
  5280  0679                     u3087:	
  5281  0679  0BA1               	decfsz	??_i2c_SendByte,f
  5282  067A  2E79               	goto	u3087
  5283                           
  5284                           ;i2c.c: 83: TRISB4 = 0;
  5285  067B  1683               	bsf	3,5	;RP0=1, select bank1
  5286  067C  1303               	bcf	3,6	;RP1=0, select bank1
  5287  067D  1206               	bcf	6,4
  5288  067E  1283               	bcf	3,5	;RP0=0, select bank0
  5289  067F  03A3               	decf	i2c_SendByte@i,f
  5290  0680  1BA3               	btfsc	i2c_SendByte@i,7
  5291                           
  5292                           ;i2c.c: 84: }
  5293                           ;i2c.c: 85: return 0;
  5294  0681  3400               	retlw	0
  5295  0682  2E44               	goto	l2063
  5296  0683                     __end_of_i2c_SendByte:	
  5297  0683                     __ptext1543:	
  5298 ;; =============== function _i2c_SendAcknowledge ends ============
  5299                           
  5300                           
  5301 ;; *************** function _i2c_WaitForSCL *****************
  5302 ;; Defined at:
  5303 ;;		line 240 in file "../i2c.c"
  5304 ;; Parameters:    Size  Location     Type
  5305 ;;		None
  5306 ;; Auto vars:     Size  Location     Type
  5307 ;;		None
  5308 ;; Return value:  Size  Location     Type
  5309 ;;                  1    wreg      unsigned char 
  5310 ;; Registers used:
  5311 ;;		wreg
  5312 ;; Tracked objects:
  5313 ;;		On entry : 60/20
  5314 ;;		On exit  : 60/0
  5315 ;;		Unchanged: 0/0
  5316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5317 ;;      Params:         0       0       0       0       0
  5318 ;;      Locals:         0       0       0       0       0
  5319 ;;      Temps:          0       1       0       0       0
  5320 ;;      Totals:         0       1       0       0       0
  5321 ;;Total ram usage:        1 bytes
  5322 ;; Hardware stack levels used:    1
  5323 ;; Hardware stack levels required when called:    3
  5324 ;; This function calls:
  5325 ;;		Nothing
  5326 ;; This function is called by:
  5327 ;;		_i2c_SendByte
  5328 ;;		_i2c_ReadAcknowledge
  5329 ;;		_i2c_ReadByte
  5330 ;; This function uses a non-reentrant model
  5331 ;;
  5332  0683                     _i2c_WaitForSCL:	
  5333                           
  5334                           ;i2c.c: 242: if(!RB4)
  5335                           
  5336                           ; Regs used in _i2c_WaitForSCL: [wreg]
  5337  0683  1283               	bcf	3,5	;RP0=0, select bank0
  5338  0684  1A06               	btfsc	6,4
  5339  0685  3400               	retlw	0
  5340                           
  5341                           ;i2c.c: 243: {
  5342                           ;i2c.c: 244: _delay((unsigned long)((10)*(4000000/4000000.0)));
  5343  0686  3003               	movlw	3
  5344  0687  00A0               	movwf	??_i2c_WaitForSCL
  5345  0688                     u3117:	
  5346  0688  0BA0               	decfsz	??_i2c_WaitForSCL,f
  5347  0689  2E88               	goto	u3117
  5348                           
  5349                           ;i2c.c: 246: if(!RB4)
  5350  068A  1283               	bcf	3,5	;RP0=0, select bank0
  5351  068B  1303               	bcf	3,6	;RP1=0, select bank0
  5352  068C  1E06               	btfss	6,4
  5353                           
  5354                           ;i2c.c: 247: return !0;
  5355  068D  3401               	retlw	1
  5356  068E  3400               	retlw	0
  5357  068F                     __end_of_i2c_WaitForSCL:	
  5358                           ;i2c.c: 248: }
  5359                           ;i2c.c: 249: return 0;
  5360                           
  5361  068F                     __ptext1527:	
  5362 ;; =============== function _GetSensorH ends ============
  5363                           
  5364                           
  5365 ;; *************** function _i2c_ReadByte *****************
  5366 ;; Defined at:
  5367 ;;		line 124 in file "../i2c.c"
  5368 ;; Parameters:    Size  Location     Type
  5369 ;;		None
  5370 ;; Auto vars:     Size  Location     Type
  5371 ;;  i               1    3[BANK0 ] unsigned char 
  5372 ;;  byte            1    2[BANK0 ] unsigned char 
  5373 ;; Return value:  Size  Location     Type
  5374 ;;                  1    wreg      unsigned char 
  5375 ;; Registers used:
  5376 ;;		wreg, status,2, status,0, pclath, cstack
  5377 ;; Tracked objects:
  5378 ;;		On entry : 60/0
  5379 ;;		On exit  : 60/0
  5380 ;;		Unchanged: 0/0
  5381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5382 ;;      Params:         0       0       0       0       0
  5383 ;;      Locals:         0       2       0       0       0
  5384 ;;      Temps:          0       1       0       0       0
  5385 ;;      Totals:         0       3       0       0       0
  5386 ;;Total ram usage:        3 bytes
  5387 ;; Hardware stack levels used:    1
  5388 ;; Hardware stack levels required when called:    4
  5389 ;; This function calls:
  5390 ;;		_i2c_WaitForSCL
  5391 ;; This function is called by:
  5392 ;;		_i2c_GetByte
  5393 ;; This function uses a non-reentrant model
  5394 ;;
  5395  068F                     _i2c_ReadByte:	
  5396                           
  5397                           ;i2c.c: 125: unsigned char i;
  5398                           ;i2c.c: 126: unsigned char byte = 0;
  5399                           
  5400                           ; Regs used in _i2c_ReadByte: [wreg+status,2+status,0+pclath+cstack]
  5401  068F  01A2               	clrf	i2c_ReadByte@byte
  5402                           
  5403                           ;i2c.c: 128: for(i=0; i<8; i++)
  5404  0690  01A3               	clrf	i2c_ReadByte@i
  5405  0691                     l2078:	
  5406                           
  5407                           ;i2c.c: 129: {
  5408                           ;i2c.c: 130: TRISB4 = 0;
  5409  0691  1683               	bsf	3,5	;RP0=1, select bank1
  5410  0692  3010               	movlw	16
  5411  0693  1206               	bcf	6,4
  5412                           
  5413                           ;i2c.c: 131: _delay((unsigned long)((50)*(4000000/4000000.0)));
  5414  0694  1283               	bcf	3,5	;RP0=0, select bank0
  5415  0695  00A1               	movwf	??_i2c_ReadByte
  5416  0696                     u3037:	
  5417  0696  0BA1               	decfsz	??_i2c_ReadByte,f
  5418  0697  2E96               	goto	u3037
  5419  0698  0064               	clrwdt
  5420                           
  5421                           ;i2c.c: 132: TRISB1 = 1;
  5422  0699  1683               	bsf	3,5	;RP0=1, select bank1
  5423  069A  1303               	bcf	3,6	;RP1=0, select bank1
  5424  069B  1486               	bsf	6,1
  5425                           
  5426                           ;i2c.c: 134: TRISB4 = 1;
  5427  069C  1606               	bsf	6,4
  5428                           
  5429                           ;i2c.c: 135: if(i2c_WaitForSCL())
  5430  069D  2683  118A         	fcall	_i2c_WaitForSCL
  5431  069F  3A00               	xorlw	0
  5432  06A0  1D03               	btfss	3,2
  5433                           
  5434                           ;i2c.c: 136: return (-1);
  5435  06A1  34FF               	retlw	255
  5436                           
  5437                           ;i2c.c: 137: _delay((unsigned long)((40)*(4000000/4000000.0)));
  5438  06A2  300D               	movlw	13
  5439  06A3  00A1               	movwf	??_i2c_ReadByte
  5440  06A4                     u3047:	
  5441  06A4  0BA1               	decfsz	??_i2c_ReadByte,f
  5442  06A5  2EA4               	goto	u3047
  5443                           
  5444                           ;i2c.c: 138: byte = byte << 1;
  5445  06A6  1283               	bcf	3,5	;RP0=0, select bank0
  5446  06A7  3000               	movlw	0
  5447  06A8  1303               	bcf	3,6	;RP1=0, select bank0
  5448  06A9  1003               	clrc
  5449  06AA  0DA2               	rlf	i2c_ReadByte@byte,f
  5450                           
  5451                           ;i2c.c: 139: byte |= RB1;
  5452  06AB  1886               	btfsc	6,1
  5453  06AC  3001               	movlw	1
  5454  06AD  04A2               	iorwf	i2c_ReadByte@byte,f
  5455                           
  5456                           ;i2c.c: 140: TRISB4 = 0;
  5457  06AE  1683               	bsf	3,5	;RP0=1, select bank1
  5458  06AF  1206               	bcf	6,4
  5459  06B0  1283               	bcf	3,5	;RP0=0, select bank0
  5460  06B1  3008               	movlw	8
  5461  06B2  0AA3               	incf	i2c_ReadByte@i,f
  5462  06B3  0223               	subwf	i2c_ReadByte@i,w
  5463  06B4  1C03               	skipc
  5464  06B5  2E91               	goto	l2078
  5465                           
  5466                           ;i2c.c: 141: }
  5467                           ;i2c.c: 142: return (int)byte;
  5468  06B6  0822               	movf	i2c_ReadByte@byte,w
  5469  06B7  0008               	return
  5470  06B8                     __end_of_i2c_ReadByte:	
  5471  06B8                     __ptext1542:	
  5472 ;; =============== function _WriteByte ends ============
  5473                           
  5474                           
  5475 ;; *************** function _i2c_SendAcknowledge *****************
  5476 ;; Defined at:
  5477 ;;		line 150 in file "../i2c.c"
  5478 ;; Parameters:    Size  Location     Type
  5479 ;;  status          1    wreg     unsigned char 
  5480 ;; Auto vars:     Size  Location     Type
  5481 ;;  status          1    1[BANK0 ] unsigned char 
  5482 ;; Return value:  Size  Location     Type
  5483 ;;		None               void
  5484 ;; Registers used:
  5485 ;;		wreg
  5486 ;; Tracked objects:
  5487 ;;		On entry : 60/0
  5488 ;;		On exit  : 0/0
  5489 ;;		Unchanged: 0/0
  5490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5491 ;;      Params:         0       0       0       0       0
  5492 ;;      Locals:         0       1       0       0       0
  5493 ;;      Temps:          0       1       0       0       0
  5494 ;;      Totals:         0       2       0       0       0
  5495 ;;Total ram usage:        2 bytes
  5496 ;; Hardware stack levels used:    1
  5497 ;; Hardware stack levels required when called:    3
  5498 ;; This function calls:
  5499 ;;		Nothing
  5500 ;; This function is called by:
  5501 ;;		_i2c_GetByte
  5502 ;; This function uses a non-reentrant model
  5503 ;;
  5504  06B8                     _i2c_SendAcknowledge:	
  5505                           
  5506                           ; Regs used in _i2c_SendAcknowledge: [wreg]
  5507                           ;i2c_SendAcknowledge@status stored from wreg
  5508  06B8  00A1               	movwf	i2c_SendAcknowledge@status
  5509                           
  5510                           ;i2c.c: 151: TRISB4 = 0;
  5511  06B9  1683               	bsf	3,5	;RP0=1, select bank1
  5512  06BA  1206               	bcf	6,4
  5513                           
  5514                           ;i2c.c: 152: if (status) {
  5515  06BB  1283               	bcf	3,5	;RP0=0, select bank0
  5516  06BC  0821               	movf	i2c_SendAcknowledge@status,w
  5517  06BD  1903               	btfsc	3,2
  5518  06BE  2EC2               	goto	l2084
  5519                           
  5520                           ;i2c.c: 153: TRISB1 = 0;
  5521  06BF  1683               	bsf	3,5	;RP0=1, select bank1
  5522  06C0  1086               	bcf	6,1
  5523                           
  5524                           ;i2c.c: 154: }else {
  5525  06C1  2EC4               	goto	l7805
  5526  06C2                     l2084:	
  5527                           
  5528                           ;i2c.c: 155: TRISB1 = 1;
  5529  06C2  1683               	bsf	3,5	;RP0=1, select bank1
  5530  06C3  1486               	bsf	6,1
  5531  06C4                     l7805:	
  5532                           
  5533                           ;i2c.c: 156: }
  5534                           ;i2c.c: 157: _delay((unsigned long)((10)*(4000000/4000000.0)));
  5535  06C4  3003               	movlw	3
  5536  06C5  1283               	bcf	3,5	;RP0=0, select bank0
  5537  06C6  00A0               	movwf	??_i2c_SendAcknowledge
  5538  06C7                     u3097:	
  5539  06C7  0BA0               	decfsz	??_i2c_SendAcknowledge,f
  5540  06C8  2EC7               	goto	u3097
  5541                           
  5542                           ;i2c.c: 158: TRISB4 = 1;
  5543  06C9  1683               	bsf	3,5	;RP0=1, select bank1
  5544  06CA  300D               	movlw	13
  5545  06CB  1303               	bcf	3,6	;RP1=0, select bank1
  5546  06CC  1606               	bsf	6,4
  5547                           
  5548                           ;i2c.c: 159: _delay((unsigned long)((40)*(4000000/4000000.0)));
  5549  06CD  1283               	bcf	3,5	;RP0=0, select bank0
  5550  06CE  00A0               	movwf	??_i2c_SendAcknowledge
  5551  06CF                     u3107:	
  5552  06CF  0BA0               	decfsz	??_i2c_SendAcknowledge,f
  5553  06D0  2ECF               	goto	u3107
  5554  06D1  0008               	return
  5555  06D2                     __end_of_i2c_SendAcknowledge:	
  5556                           
  5557                           	psect	text1531
  5558  06D2                     __ptext1531:	
  5559 ;; =============== function _DS18B20ReadFlash ends ============
  5560                           
  5561                           
  5562 ;; *************** function _DS18B20Convert *****************
  5563 ;; Defined at:
  5564 ;;		line 67 in file "../DS18B20.c"
  5565 ;; Parameters:    Size  Location     Type
  5566 ;;		None
  5567 ;; Auto vars:     Size  Location     Type
  5568 ;;  i               2    4[BANK0 ] unsigned int 
  5569 ;; Return value:  Size  Location     Type
  5570 ;;                  1    wreg      unsigned char 
  5571 ;; Registers used:
  5572 ;;		wreg, status,2, status,0, pclath, cstack
  5573 ;; Tracked objects:
  5574 ;;		On entry : 60/20
  5575 ;;		On exit  : 60/0
  5576 ;;		Unchanged: 0/0
  5577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5578 ;;      Params:         0       0       0       0       0
  5579 ;;      Locals:         0       2       0       0       0
  5580 ;;      Temps:          0       0       0       0       0
  5581 ;;      Totals:         0       2       0       0       0
  5582 ;;Total ram usage:        2 bytes
  5583 ;; Hardware stack levels used:    1
  5584 ;; Hardware stack levels required when called:    4
  5585 ;; This function calls:
  5586 ;;		_Reset
  5587 ;;		_WriteByte
  5588 ;; This function is called by:
  5589 ;;		_main
  5590 ;; This function uses a non-reentrant model
  5591 ;;
  5592  06D2                     _DS18B20Convert:	
  5593                           
  5594                           ;DS18B20.c: 68: unsigned int i;
  5595                           ;DS18B20.c: 69: if(Reset()==0)
  5596                           
  5597                           ; Regs used in _DS18B20Convert: [wreg+status,2+status,0+pclath+cstack]
  5598  06D2  276B  118A         	fcall	_Reset
  5599  06D4  3800               	iorlw	0
  5600  06D5  1D03               	skipz
  5601  06D6  3400               	retlw	0
  5602                           
  5603                           ;DS18B20.c: 70: {
  5604                           ;DS18B20.c: 71: i=77;while(i>0){i--;}
  5605  06D7  304D               	movlw	77
  5606  06D8  00A4               	movwf	DS18B20Convert@i
  5607  06D9  01A5               	clrf	DS18B20Convert@i+1
  5608  06DA                     l8079:	
  5609  06DA  0825               	movf	DS18B20Convert@i+1,w
  5610  06DB  0424               	iorwf	DS18B20Convert@i,w
  5611  06DC  1903               	btfsc	3,2
  5612  06DD  2EE5               	goto	l8081
  5613  06DE  3001               	movlw	1
  5614  06DF  02A4               	subwf	DS18B20Convert@i,f
  5615  06E0  3000               	movlw	0
  5616  06E1  1C03               	skipc
  5617  06E2  03A5               	decf	DS18B20Convert@i+1,f
  5618  06E3  02A5               	subwf	DS18B20Convert@i+1,f
  5619  06E4  2EDA               	goto	l8079
  5620  06E5                     l8081:	
  5621                           
  5622                           ;DS18B20.c: 72: WriteByte(0xcc);
  5623  06E5  30CC               	movlw	204
  5624  06E6  272F  118A         	fcall	_WriteByte
  5625                           
  5626                           ;DS18B20.c: 73: WriteByte(0x44);
  5627  06E8  3044               	movlw	68
  5628  06E9  272F               	fcall	_WriteByte
  5629                           
  5630                           ;DS18B20.c: 74: return 1;
  5631  06EA  3401               	retlw	1
  5632  06EB                     __end_of_DS18B20Convert:	
  5633                           ;DS18B20.c: 76: else
  5634                           ;DS18B20.c: 77: {
  5635                           ;DS18B20.c: 78: return 0;
  5636                           
  5637  06EB                     __ptext1530:	
  5638 ;; =============== function _i2c_SendByte ends ============
  5639                           
  5640                           
  5641 ;; *************** function _DS18B20ReadFlash *****************
  5642 ;; Defined at:
  5643 ;;		line 83 in file "../DS18B20.c"
  5644 ;; Parameters:    Size  Location     Type
  5645 ;;		None
  5646 ;; Auto vars:     Size  Location     Type
  5647 ;;  i               2    4[BANK0 ] unsigned int 
  5648 ;; Return value:  Size  Location     Type
  5649 ;;		None               void
  5650 ;; Registers used:
  5651 ;;		wreg, status,2, status,0, pclath, cstack
  5652 ;; Tracked objects:
  5653 ;;		On entry : 60/0
  5654 ;;		On exit  : 60/20
  5655 ;;		Unchanged: 0/0
  5656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5657 ;;      Params:         0       0       0       0       0
  5658 ;;      Locals:         0       2       0       0       0
  5659 ;;      Temps:          0       0       0       0       0
  5660 ;;      Totals:         0       2       0       0       0
  5661 ;;Total ram usage:        2 bytes
  5662 ;; Hardware stack levels used:    1
  5663 ;; Hardware stack levels required when called:    4
  5664 ;; This function calls:
  5665 ;;		_Reset
  5666 ;;		_WriteByte
  5667 ;;		_ReadByte
  5668 ;; This function is called by:
  5669 ;;		_main
  5670 ;; This function uses a non-reentrant model
  5671 ;;
  5672  06EB                     _DS18B20ReadFlash:	
  5673                           
  5674                           ;DS18B20.c: 84: unsigned int i;
  5675                           ;DS18B20.c: 85: if(Reset() == 0)
  5676                           
  5677                           ; Regs used in _DS18B20ReadFlash: [wreg+status,2+status,0+pclath+cstack]
  5678  06EB  276B  118A         	fcall	_Reset
  5679  06ED  3800               	iorlw	0
  5680  06EE  1D03               	skipz
  5681  06EF  2F0C               	goto	l8103
  5682                           
  5683                           ;DS18B20.c: 86: {
  5684                           ;DS18B20.c: 87: i=77;while(i>0){i--;}
  5685  06F0  304D               	movlw	77
  5686  06F1  00A4               	movwf	DS18B20ReadFlash@i
  5687  06F2  01A5               	clrf	DS18B20ReadFlash@i+1
  5688  06F3                     l8099:	
  5689  06F3  0825               	movf	DS18B20ReadFlash@i+1,w
  5690  06F4  0424               	iorwf	DS18B20ReadFlash@i,w
  5691  06F5  1903               	btfsc	3,2
  5692  06F6  2EFE               	goto	l8101
  5693  06F7  3001               	movlw	1
  5694  06F8  02A4               	subwf	DS18B20ReadFlash@i,f
  5695  06F9  3000               	movlw	0
  5696  06FA  1C03               	skipc
  5697  06FB  03A5               	decf	DS18B20ReadFlash@i+1,f
  5698  06FC  02A5               	subwf	DS18B20ReadFlash@i+1,f
  5699  06FD  2EF3               	goto	l8099
  5700  06FE                     l8101:	
  5701                           
  5702                           ;DS18B20.c: 88: WriteByte(0xCC);
  5703  06FE  30CC               	movlw	204
  5704  06FF  272F  118A         	fcall	_WriteByte
  5705                           
  5706                           ;DS18B20.c: 89: WriteByte(0xBE);
  5707  0701  30BE               	movlw	190
  5708  0702  272F  118A         	fcall	_WriteByte
  5709                           
  5710                           ;DS18B20.c: 90: T_Lsb = ReadByte();
  5711  0704  27A4  118A         	fcall	_ReadByte
  5712  0706  1683               	bsf	3,5	;RP0=1, select bank1
  5713  0707  00BA               	movwf	_T_Lsb^(0+128)
  5714                           
  5715                           ;DS18B20.c: 91: T_Msb = ReadByte();
  5716  0708  27A4               	fcall	_ReadByte
  5717  0709  1683               	bsf	3,5	;RP0=1, select bank1
  5718  070A  00BC               	movwf	_T_Msb^(0+128)
  5719                           
  5720                           ;DS18B20.c: 92: }
  5721  070B  0008               	return
  5722  070C                     l8103:	
  5723                           
  5724                           ;DS18B20.c: 93: else
  5725                           ;DS18B20.c: 94: {
  5726                           ;DS18B20.c: 95: T_Lsb = 0;
  5727  070C  1683               	bsf	3,5	;RP0=1, select bank1
  5728  070D  01BA               	clrf	_T_Lsb^(0+128)
  5729                           
  5730                           ;DS18B20.c: 96: T_Msb = 0;
  5731  070E  01BC               	clrf	_T_Msb^(0+128)
  5732  070F  0008               	return
  5733  0710                     __end_of_DS18B20ReadFlash:	
  5734  0710                     __ptext1532:	
  5735 ;; =============== function _DS18B20Convert ends ============
  5736                           
  5737                           
  5738 ;; *************** function _DS18B20Initial *****************
  5739 ;; Defined at:
  5740 ;;		line 101 in file "../DS18B20.c"
  5741 ;; Parameters:    Size  Location     Type
  5742 ;;		None
  5743 ;; Auto vars:     Size  Location     Type
  5744 ;;  i               2    4[BANK0 ] unsigned int 
  5745 ;; Return value:  Size  Location     Type
  5746 ;;		None               void
  5747 ;; Registers used:
  5748 ;;		wreg, status,2, status,0, pclath, cstack
  5749 ;; Tracked objects:
  5750 ;;		On entry : 7F/20
  5751 ;;		On exit  : 60/0
  5752 ;;		Unchanged: 0/0
  5753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5754 ;;      Params:         0       0       0       0       0
  5755 ;;      Locals:         0       2       0       0       0
  5756 ;;      Temps:          0       0       0       0       0
  5757 ;;      Totals:         0       2       0       0       0
  5758 ;;Total ram usage:        2 bytes
  5759 ;; Hardware stack levels used:    1
  5760 ;; Hardware stack levels required when called:    4
  5761 ;; This function calls:
  5762 ;;		_Reset
  5763 ;;		_WriteByte
  5764 ;; This function is called by:
  5765 ;;		_main
  5766 ;; This function uses a non-reentrant model
  5767 ;;
  5768  0710                     _DS18B20Initial:	
  5769                           
  5770                           ;DS18B20.c: 102: unsigned int i;
  5771                           ;DS18B20.c: 103: if(Reset() == 0)
  5772                           
  5773                           ; Regs used in _DS18B20Initial: [wreg+status,2+status,0+pclath+cstack]
  5774  0710  276B  118A         	fcall	_Reset
  5775  0712  3800               	iorlw	0
  5776  0713  1D03               	skipz
  5777  0714  0008               	return
  5778                           
  5779                           ;DS18B20.c: 104: {
  5780                           ;DS18B20.c: 105: i=77;while(i>0){i--;}
  5781  0715  304D               	movlw	77
  5782  0716  00A4               	movwf	DS18B20Initial@i
  5783  0717  01A5               	clrf	DS18B20Initial@i+1
  5784  0718                     l8069:	
  5785  0718  0825               	movf	DS18B20Initial@i+1,w
  5786  0719  0424               	iorwf	DS18B20Initial@i,w
  5787  071A  1903               	btfsc	3,2
  5788  071B  2F21               	goto	l8071
  5789  071C  3001               	movlw	1
  5790  071D  02A4               	subwf	DS18B20Initial@i,f
  5791  071E  1C03               	skipc
  5792  071F  03A5               	decf	DS18B20Initial@i+1,f
  5793  0720  2F18               	goto	l8069
  5794  0721                     l8071:	
  5795                           
  5796                           ;DS18B20.c: 106: WriteByte(0xCC);
  5797  0721  30CC               	movlw	204
  5798  0722  272F  118A         	fcall	_WriteByte
  5799                           
  5800                           ;DS18B20.c: 107: WriteByte(0x4E);
  5801  0724  304E               	movlw	78
  5802  0725  272F  118A         	fcall	_WriteByte
  5803                           
  5804                           ;DS18B20.c: 108: WriteByte(0x00);
  5805  0727  3000               	movlw	0
  5806  0728  272F  118A         	fcall	_WriteByte
  5807                           
  5808                           ;DS18B20.c: 109: WriteByte(0x00);
  5809  072A  3000               	movlw	0
  5810  072B  272F  118A         	fcall	_WriteByte
  5811                           
  5812                           ;DS18B20.c: 110: WriteByte(0x7F);
  5813  072D  307F               	movlw	127
  5814  072E  2F2F               	ljmp	_WriteByte
  5815  072F                     __end_of_DS18B20Initial:	
  5816  072F                     __ptext1541:	
  5817 ;; =============== function _ReadByte ends ============
  5818                           
  5819                           
  5820 ;; *************** function _WriteByte *****************
  5821 ;; Defined at:
  5822 ;;		line 24 in file "../DS18B20.c"
  5823 ;; Parameters:    Size  Location     Type
  5824 ;;  dat             1    wreg     unsigned char 
  5825 ;; Auto vars:     Size  Location     Type
  5826 ;;  dat             1    0[BANK0 ] unsigned char 
  5827 ;;  i               2    2[BANK0 ] unsigned int 
  5828 ;;  j               1    1[BANK0 ] unsigned char 
  5829 ;; Return value:  Size  Location     Type
  5830 ;;		None               void
  5831 ;; Registers used:
  5832 ;;		wreg, status,2, status,0
  5833 ;; Tracked objects:
  5834 ;;		On entry : 60/0
  5835 ;;		On exit  : 60/0
  5836 ;;		Unchanged: 0/0
  5837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5838 ;;      Params:         0       0       0       0       0
  5839 ;;      Locals:         0       4       0       0       0
  5840 ;;      Temps:          0       0       0       0       0
  5841 ;;      Totals:         0       4       0       0       0
  5842 ;;Total ram usage:        4 bytes
  5843 ;; Hardware stack levels used:    1
  5844 ;; Hardware stack levels required when called:    3
  5845 ;; This function calls:
  5846 ;;		Nothing
  5847 ;; This function is called by:
  5848 ;;		_DS18B20Convert
  5849 ;;		_DS18B20ReadFlash
  5850 ;;		_DS18B20Initial
  5851 ;; This function uses a non-reentrant model
  5852 ;;
  5853  072F                     _WriteByte:	
  5854                           
  5855                           ; Regs used in _WriteByte: [wreg+status,2+status,0]
  5856                           ;WriteByte@dat stored from wreg
  5857  072F  00A0               	movwf	WriteByte@dat
  5858                           
  5859                           ;DS18B20.c: 25: unsigned int i;
  5860                           ;DS18B20.c: 26: unsigned char j;
  5861                           ;DS18B20.c: 27: for(j=0;j<8;j++)
  5862  0730  01A1               	clrf	WriteByte@j
  5863  0731                     l2746:	
  5864                           
  5865                           ;DS18B20.c: 28: {
  5866                           ;DS18B20.c: 29: if(dat & 0x01){
  5867  0731  1C20               	btfss	WriteByte@dat,0
  5868  0732  2F4D               	goto	l2748
  5869                           
  5870                           ;DS18B20.c: 30: TRISA0=0;
  5871  0733  1683               	bsf	3,5	;RP0=1, select bank1
  5872  0734  1005               	bcf	5,0
  5873                           
  5874                           ;DS18B20.c: 31: RA0=0;
  5875  0735  1283               	bcf	3,5	;RP0=0, select bank0
  5876  0736  1005               	bcf	5,0
  5877                           
  5878                           ;DS18B20.c: 32: _nop();_nop();_nop();_nop();_nop();_nop();
  5879  0737  0000               	nop
  5880  0738  0000               	nop
  5881  0739  0000               	nop
  5882  073A  0000               	nop
  5883  073B  0000               	nop
  5884  073C  0000               	nop
  5885                           
  5886                           ;DS18B20.c: 33: TRISA0=1;
  5887  073D  1683               	bsf	3,5	;RP0=1, select bank1
  5888  073E  3005               	movlw	5
  5889  073F  1303               	bcf	3,6	;RP1=0, select bank1
  5890  0740  1405               	bsf	5,0
  5891                           
  5892                           ;DS18B20.c: 34: i=5;while(i>0){i--;}
  5893  0741  1283               	bcf	3,5	;RP0=0, select bank0
  5894  0742  00A2               	movwf	WriteByte@i
  5895  0743  01A3               	clrf	WriteByte@i+1
  5896  0744                     l7823:	
  5897  0744  0823               	movf	WriteByte@i+1,w
  5898  0745  0422               	iorwf	WriteByte@i,w
  5899  0746  1903               	btfsc	3,2
  5900  0747  2F61               	goto	l2752
  5901  0748  3001               	movlw	1
  5902  0749  02A2               	subwf	WriteByte@i,f
  5903  074A  1C03               	skipc
  5904  074B  03A3               	decf	WriteByte@i+1,f
  5905  074C  2F44               	goto	l7823
  5906  074D                     l2748:	
  5907                           
  5908                           ;DS18B20.c: 36: TRISA0 = 0;
  5909  074D  1683               	bsf	3,5	;RP0=1, select bank1
  5910  074E  1005               	bcf	5,0
  5911                           
  5912                           ;DS18B20.c: 37: RA0 = 0;
  5913  074F  1283               	bcf	3,5	;RP0=0, select bank0
  5914  0750  3005               	movlw	5
  5915  0751  1005               	bcf	5,0
  5916                           
  5917                           ;DS18B20.c: 38: i=5;while(i>0){i--;}
  5918  0752  00A2               	movwf	WriteByte@i
  5919  0753  01A3               	clrf	WriteByte@i+1
  5920  0754                     l7829:	
  5921  0754  0823               	movf	WriteByte@i+1,w
  5922  0755  0422               	iorwf	WriteByte@i,w
  5923  0756  1903               	btfsc	3,2
  5924  0757  2F5D               	goto	l2755
  5925  0758  3001               	movlw	1
  5926  0759  02A2               	subwf	WriteByte@i,f
  5927  075A  1C03               	skipc
  5928  075B  03A3               	decf	WriteByte@i+1,f
  5929  075C  2F54               	goto	l7829
  5930  075D                     l2755:	
  5931                           
  5932                           ;DS18B20.c: 39: TRISA0 = 1;
  5933  075D  1683               	bsf	3,5	;RP0=1, select bank1
  5934  075E  1405               	bsf	5,0
  5935                           
  5936                           ;DS18B20.c: 40: _nop();_nop();
  5937  075F  0000               	nop
  5938  0760  0000               	nop
  5939  0761                     l2752:	
  5940                           
  5941                           ;DS18B20.c: 41: }
  5942                           ;DS18B20.c: 42: dat = dat >> 1;
  5943  0761  1283               	bcf	3,5	;RP0=0, select bank0
  5944  0762  3008               	movlw	8
  5945  0763  1303               	bcf	3,6	;RP1=0, select bank0
  5946  0764  1003               	clrc
  5947  0765  0CA0               	rrf	WriteByte@dat,f
  5948  0766  0AA1               	incf	WriteByte@j,f
  5949  0767  0221               	subwf	WriteByte@j,w
  5950  0768  1803               	btfsc	3,0
  5951  0769  0008               	return
  5952  076A  2F31               	goto	l2746
  5953  076B                     __end_of_WriteByte:	
  5954  076B                     __ptext1558:	
  5955 ;; =============== function _GetHighGainValue ends ============
  5956                           
  5957                           
  5958 ;; *************** function _Reset *****************
  5959 ;; Defined at:
  5960 ;;		line 6 in file "../DS18B20.c"
  5961 ;; Parameters:    Size  Location     Type
  5962 ;;		None
  5963 ;; Auto vars:     Size  Location     Type
  5964 ;;  i               2    1[BANK0 ] unsigned int 
  5965 ;;  k               1    0[BANK0 ] unsigned char 
  5966 ;; Return value:  Size  Location     Type
  5967 ;;                  1    wreg      unsigned char 
  5968 ;; Registers used:
  5969 ;;		wreg, status,2, status,0
  5970 ;; Tracked objects:
  5971 ;;		On entry : 40/0
  5972 ;;		On exit  : 60/0
  5973 ;;		Unchanged: FFF9F/0
  5974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5975 ;;      Params:         0       0       0       0       0
  5976 ;;      Locals:         0       3       0       0       0
  5977 ;;      Temps:          0       0       0       0       0
  5978 ;;      Totals:         0       3       0       0       0
  5979 ;;Total ram usage:        3 bytes
  5980 ;; Hardware stack levels used:    1
  5981 ;; Hardware stack levels required when called:    3
  5982 ;; This function calls:
  5983 ;;		Nothing
  5984 ;; This function is called by:
  5985 ;;		_DS18B20Convert
  5986 ;;		_DS18B20ReadFlash
  5987 ;;		_DS18B20Initial
  5988 ;; This function uses a non-reentrant model
  5989 ;;
  5990  076B                     _Reset:	
  5991                           
  5992                           ;DS18B20.c: 7: unsigned int i;
  5993                           ;DS18B20.c: 8: unsigned char k;
  5994                           ;DS18B20.c: 9: TRISA0 = 0;
  5995                           
  5996                           ; Regs used in _Reset: [wreg+status,2+status,0]
  5997  076B  1683               	bsf	3,5	;RP0=1, select bank1
  5998  076C  1005               	bcf	5,0
  5999                           
  6000                           ;DS18B20.c: 10: RA0 = 0;
  6001  076D  1283               	bcf	3,5	;RP0=0, select bank0
  6002  076E  3043               	movlw	67
  6003  076F  1005               	bcf	5,0
  6004                           
  6005                           ;DS18B20.c: 11: i=67;while(i>0){i--;}
  6006  0770  00A1               	movwf	Reset@i
  6007  0771  01A2               	clrf	Reset@i+1
  6008  0772                     l7499:	
  6009  0772  0822               	movf	Reset@i+1,w
  6010  0773  0421               	iorwf	Reset@i,w
  6011  0774  1903               	btfsc	3,2
  6012  0775  2F7D               	goto	l2734
  6013  0776  3001               	movlw	1
  6014  0777  02A1               	subwf	Reset@i,f
  6015  0778  3000               	movlw	0
  6016  0779  1C03               	skipc
  6017  077A  03A2               	decf	Reset@i+1,f
  6018  077B  02A2               	subwf	Reset@i+1,f
  6019  077C  2F72               	goto	l7499
  6020  077D                     l2734:	
  6021                           
  6022                           ;DS18B20.c: 12: TRISA0 = 1;
  6023  077D  1683               	bsf	3,5	;RP0=1, select bank1
  6024  077E  3006               	movlw	6
  6025  077F  1405               	bsf	5,0
  6026                           
  6027                           ;DS18B20.c: 13: i=6;while(i>0){i--;}
  6028  0780  1283               	bcf	3,5	;RP0=0, select bank0
  6029  0781  00A1               	movwf	Reset@i
  6030  0782  01A2               	clrf	Reset@i+1
  6031  0783                     l7505:	
  6032  0783  0822               	movf	Reset@i+1,w
  6033  0784  0421               	iorwf	Reset@i,w
  6034  0785  1903               	btfsc	3,2
  6035  0786  2F8E               	goto	l2737
  6036  0787  3001               	movlw	1
  6037  0788  02A1               	subwf	Reset@i,f
  6038  0789  3000               	movlw	0
  6039  078A  1C03               	skipc
  6040  078B  03A2               	decf	Reset@i+1,f
  6041  078C  02A2               	subwf	Reset@i+1,f
  6042  078D  2F83               	goto	l7505
  6043  078E                     l2737:	
  6044                           
  6045                           ;DS18B20.c: 14: if(RA0 == 0){
  6046  078E  1805               	btfsc	5,0
  6047  078F  2F92               	goto	l2738
  6048                           
  6049                           ;DS18B20.c: 15: k = 0;
  6050  0790  01A0               	clrf	Reset@k
  6051                           
  6052                           ;DS18B20.c: 16: }else{
  6053  0791  2F94               	goto	l7509
  6054  0792                     l2738:	
  6055                           
  6056                           ;DS18B20.c: 17: k = 1;
  6057  0792  01A0               	clrf	Reset@k
  6058  0793  0AA0               	incf	Reset@k,f
  6059  0794                     l7509:	
  6060                           
  6061                           ;DS18B20.c: 18: }
  6062                           ;DS18B20.c: 19: i=31;while(i>0){i--;}
  6063  0794  301F               	movlw	31
  6064  0795  00A1               	movwf	Reset@i
  6065  0796  01A2               	clrf	Reset@i+1
  6066  0797                     l7513:	
  6067  0797  0822               	movf	Reset@i+1,w
  6068  0798  0421               	iorwf	Reset@i,w
  6069  0799  1903               	btfsc	3,2
  6070  079A  2FA2               	goto	l7515
  6071  079B  3001               	movlw	1
  6072  079C  02A1               	subwf	Reset@i,f
  6073  079D  3000               	movlw	0
  6074  079E  1C03               	skipc
  6075  079F  03A2               	decf	Reset@i+1,f
  6076  07A0  02A2               	subwf	Reset@i+1,f
  6077  07A1  2F97               	goto	l7513
  6078  07A2                     l7515:	
  6079                           
  6080                           ;DS18B20.c: 20: return k;
  6081  07A2  0820               	movf	Reset@k,w
  6082  07A3  0008               	return
  6083  07A4                     __end_of_Reset:	
  6084  07A4                     __ptext1540:	
  6085 ;; =============== function _fabs ends ============
  6086                           
  6087                           
  6088 ;; *************** function _ReadByte *****************
  6089 ;; Defined at:
  6090 ;;		line 47 in file "../DS18B20.c"
  6091 ;; Parameters:    Size  Location     Type
  6092 ;;		None
  6093 ;; Auto vars:     Size  Location     Type
  6094 ;;  i               2    0[BANK0 ] unsigned int 
  6095 ;;  j               1    3[BANK0 ] unsigned char 
  6096 ;;  buf             1    2[BANK0 ] unsigned char 
  6097 ;; Return value:  Size  Location     Type
  6098 ;;                  1    wreg      unsigned char 
  6099 ;; Registers used:
  6100 ;;		wreg, status,2, status,0
  6101 ;; Tracked objects:
  6102 ;;		On entry : 40/0
  6103 ;;		On exit  : 60/0
  6104 ;;		Unchanged: 0/0
  6105 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6106 ;;      Params:         0       0       0       0       0
  6107 ;;      Locals:         0       4       0       0       0
  6108 ;;      Temps:          0       0       0       0       0
  6109 ;;      Totals:         0       4       0       0       0
  6110 ;;Total ram usage:        4 bytes
  6111 ;; Hardware stack levels used:    1
  6112 ;; Hardware stack levels required when called:    3
  6113 ;; This function calls:
  6114 ;;		Nothing
  6115 ;; This function is called by:
  6116 ;;		_DS18B20ReadFlash
  6117 ;; This function uses a non-reentrant model
  6118 ;;
  6119  07A4                     _ReadByte:	
  6120                           
  6121                           ;DS18B20.c: 48: unsigned int i;
  6122                           ;DS18B20.c: 49: unsigned char j,buf = 0;
  6123                           
  6124                           ; Regs used in _ReadByte: [wreg+status,2+status,0]
  6125  07A4  1283               	bcf	3,5	;RP0=0, select bank0
  6126  07A5  01A2               	clrf	ReadByte@buf
  6127                           
  6128                           ;DS18B20.c: 50: for(j=1; j<=8; j++)
  6129  07A6  01A3               	clrf	ReadByte@j
  6130  07A7  0AA3               	incf	ReadByte@j,f
  6131                           
  6132                           ;DS18B20.c: 51: {
  6133                           ;DS18B20.c: 52: buf = buf >> 1;
  6134  07A8  1003               	clrc
  6135  07A9                     L8:	
  6136  07A9  0CA2               	rrf	ReadByte@buf,f
  6137                           
  6138                           ;DS18B20.c: 53: TRISA0 = 0;
  6139  07AA  1683               	bsf	3,5	;RP0=1, select bank1
  6140  07AB  1005               	bcf	5,0
  6141                           
  6142                           ;DS18B20.c: 54: RA0 = 0;
  6143  07AC  1283               	bcf	3,5	;RP0=0, select bank0
  6144  07AD  1005               	bcf	5,0
  6145                           
  6146                           ;DS18B20.c: 55: _nop();_nop();
  6147  07AE  0000               	nop
  6148  07AF  0000               	nop
  6149                           
  6150                           ;DS18B20.c: 56: TRISA0 = 1;
  6151  07B0  1683               	bsf	3,5	;RP0=1, select bank1
  6152  07B1  1303               	bcf	3,6	;RP1=0, select bank1
  6153  07B2  1405               	bsf	5,0
  6154                           
  6155                           ;DS18B20.c: 57: _nop();_nop();_nop();_nop();_nop();_nop();
  6156  07B3  0000               	nop
  6157  07B4  0000               	nop
  6158  07B5  0000               	nop
  6159  07B6  0000               	nop
  6160  07B7  0000               	nop
  6161  07B8  0000               	nop
  6162                           
  6163                           ;DS18B20.c: 58: if(RA0 == 1){
  6164  07B9  1283               	bcf	3,5	;RP0=0, select bank0
  6165  07BA  1303               	bcf	3,6	;RP1=0, select bank0
  6166  07BB  1805               	btfsc	5,0
  6167                           
  6168                           ;DS18B20.c: 59: buf |= 0x80;
  6169  07BC  17A2               	bsf	ReadByte@buf,7
  6170                           
  6171                           ;DS18B20.c: 60: }
  6172                           ;DS18B20.c: 61: i=4;while(i>0){i--;}
  6173  07BD  3004               	movlw	4
  6174  07BE  00A0               	movwf	ReadByte@i
  6175  07BF  01A1               	clrf	ReadByte@i+1
  6176  07C0                     l7849:	
  6177  07C0  0821               	movf	ReadByte@i+1,w
  6178  07C1  0420               	iorwf	ReadByte@i,w
  6179  07C2  1903               	btfsc	3,2
  6180  07C3  2FC9               	goto	l7851
  6181  07C4  3001               	movlw	1
  6182  07C5  02A0               	subwf	ReadByte@i,f
  6183  07C6  1C03               	skipc
  6184  07C7  03A1               	decf	ReadByte@i+1,f
  6185  07C8  2FC0               	goto	l7849
  6186  07C9                     l7851:	
  6187  07C9  3009               	movlw	9
  6188  07CA  0AA3               	incf	ReadByte@j,f
  6189  07CB  0223               	subwf	ReadByte@j,w
  6190  07CC  1C03               	skipc
  6191  07CD  2FA9               	goto	L8
  6192                           
  6193                           ;DS18B20.c: 62: }
  6194                           ;DS18B20.c: 63: return buf;
  6195  07CE  0822               	movf	ReadByte@buf,w
  6196  07CF  0008               	return
  6197  07D0                     __end_of_ReadByte:	
  6198                           
  6199                           	psect	text1538
  6200  0E56                     __ptext1538:	
  6201 ;; =============== function ___ftdiv ends ============
  6202                           
  6203                           
  6204 ;; *************** function ___ftadd *****************
  6205 ;; Defined at:
  6206 ;;		line 87 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftadd.c"
  6207 ;; Parameters:    Size  Location     Type
  6208 ;;  f1              3    8[BANK0 ] float 
  6209 ;;  f2              3   11[BANK0 ] float 
  6210 ;; Auto vars:     Size  Location     Type
  6211 ;;  exp1            1   19[BANK0 ] unsigned char 
  6212 ;;  exp2            1   18[BANK0 ] unsigned char 
  6213 ;;  sign            1   17[BANK0 ] unsigned char 
  6214 ;; Return value:  Size  Location     Type
  6215 ;;                  3    8[BANK0 ] float 
  6216 ;; Registers used:
  6217 ;;		wreg, status,2, status,0, pclath, cstack
  6218 ;; Tracked objects:
  6219 ;;		On entry : 60/0
  6220 ;;		On exit  : 60/0
  6221 ;;		Unchanged: FFF9F/0
  6222 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6223 ;;      Params:         0       6       0       0       0
  6224 ;;      Locals:         0       3       0       0       0
  6225 ;;      Temps:          0       3       0       0       0
  6226 ;;      Totals:         0      12       0       0       0
  6227 ;;Total ram usage:       12 bytes
  6228 ;; Hardware stack levels used:    1
  6229 ;; Hardware stack levels required when called:    4
  6230 ;; This function calls:
  6231 ;;		___ftpack
  6232 ;; This function is called by:
  6233 ;;		___ftsub
  6234 ;; This function uses a non-reentrant model
  6235 ;;
  6236  0E56                     ___ftadd:	
  6237                           
  6238                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  6239  0E56  0828               	movf	___ftadd@f1,w
  6240  0E57  00AE               	movwf	??___ftadd
  6241  0E58  0829               	movf	___ftadd@f1+1,w
  6242  0E59  00AF               	movwf	??___ftadd+1
  6243  0E5A  082A               	movf	___ftadd@f1+2,w
  6244  0E5B  00B0               	movwf	??___ftadd+2
  6245  0E5C  1003               	clrc
  6246  0E5D  0D2F               	rlf	??___ftadd+1,w
  6247  0E5E  0D30               	rlf	??___ftadd+2,w
  6248  0E5F  00B3               	movwf	___ftadd@exp1
  6249  0E60  082B               	movf	___ftadd@f2,w
  6250  0E61  00AE               	movwf	??___ftadd
  6251  0E62  082C               	movf	___ftadd@f2+1,w
  6252  0E63  00AF               	movwf	??___ftadd+1
  6253  0E64  082D               	movf	___ftadd@f2+2,w
  6254  0E65  00B0               	movwf	??___ftadd+2
  6255  0E66  1003               	clrc
  6256  0E67  0D2F               	rlf	??___ftadd+1,w
  6257  0E68  0D30               	rlf	??___ftadd+2,w
  6258  0E69  00B2               	movwf	___ftadd@exp2
  6259  0E6A  0833               	movf	___ftadd@exp1,w
  6260  0E6B  1903               	btfsc	3,2
  6261  0E6C  2E79               	goto	l7873
  6262  0E6D  0832               	movf	___ftadd@exp2,w
  6263  0E6E  0233               	subwf	___ftadd@exp1,w
  6264  0E6F  0832               	movf	___ftadd@exp2,w
  6265  0E70  1803               	skipnc
  6266  0E71  2E81               	goto	L7
  6267  0E72  00AE               	movwf	??___ftadd
  6268  0E73  0833               	movf	___ftadd@exp1,w
  6269  0E74  02AE               	subwf	??___ftadd,f
  6270  0E75  3019               	movlw	25
  6271  0E76  022E               	subwf	??___ftadd,w
  6272  0E77  1C03               	skipc
  6273  0E78  2E80               	goto	l7877
  6274  0E79                     l7873:	
  6275  0E79  082B               	movf	___ftadd@f2,w
  6276  0E7A  00A8               	movwf	?___ftadd
  6277  0E7B  082C               	movf	___ftadd@f2+1,w
  6278  0E7C  00A9               	movwf	?___ftadd+1
  6279  0E7D  082D               	movf	___ftadd@f2+2,w
  6280  0E7E  00AA               	movwf	?___ftadd+2
  6281  0E7F  0008               	return
  6282  0E80                     l7877:	
  6283  0E80  0832               	movf	___ftadd@exp2,w
  6284  0E81                     L7:	
  6285  0E81  1903               	btfsc	3,2
  6286  0E82  0008               	return
  6287  0E83  0833               	movf	___ftadd@exp1,w
  6288  0E84  0232               	subwf	___ftadd@exp2,w
  6289  0E85  1803               	skipnc
  6290  0E86  2E8F               	goto	l7883
  6291  0E87  0833               	movf	___ftadd@exp1,w
  6292  0E88  00AE               	movwf	??___ftadd
  6293  0E89  0832               	movf	___ftadd@exp2,w
  6294  0E8A  02AE               	subwf	??___ftadd,f
  6295  0E8B  3019               	movlw	25
  6296  0E8C  022E               	subwf	??___ftadd,w
  6297  0E8D  1803               	btfsc	3,0
  6298  0E8E  0008               	return
  6299  0E8F                     l7883:	
  6300  0E8F  3006               	movlw	6
  6301  0E90  00B1               	movwf	___ftadd@sign
  6302  0E91  1BAA               	btfsc	___ftadd@f1+2,7
  6303  0E92  17B1               	bsf	___ftadd@sign,7
  6304  0E93  1BAD               	btfsc	___ftadd@f2+2,7
  6305  0E94  1731               	bsf	___ftadd@sign,6
  6306  0E95  17A9               	bsf	___ftadd@f1+1,7
  6307  0E96  01AA               	clrf	___ftadd@f1+2
  6308  0E97  17AC               	bsf	___ftadd@f2+1,7
  6309  0E98  01AD               	clrf	___ftadd@f2+2
  6310  0E99  0832               	movf	___ftadd@exp2,w
  6311  0E9A  0233               	subwf	___ftadd@exp1,w
  6312  0E9B  1803               	skipnc
  6313  0E9C  2EB6               	goto	l7905
  6314  0E9D                     l7895:	
  6315  0E9D  1003               	clrc
  6316  0E9E  0DAB               	rlf	___ftadd@f2,f
  6317  0E9F  0DAC               	rlf	___ftadd@f2+1,f
  6318  0EA0  0DAD               	rlf	___ftadd@f2+2,f
  6319  0EA1  03B2               	decf	___ftadd@exp2,f
  6320  0EA2  0832               	movf	___ftadd@exp2,w
  6321  0EA3  0633               	xorwf	___ftadd@exp1,w
  6322  0EA4  1903               	skipnz
  6323  0EA5  2EB1               	goto	l7903
  6324  0EA6  03B1               	decf	___ftadd@sign,f
  6325  0EA7  0831               	movf	___ftadd@sign,w
  6326  0EA8  3907               	andlw	7
  6327  0EA9  1903               	btfsc	3,2
  6328  0EAA  2EB1               	goto	l7903
  6329  0EAB  2E9D               	goto	l7895
  6330  0EAC                     l7901:	
  6331  0EAC  1003               	clrc
  6332  0EAD  0CAA               	rrf	___ftadd@f1+2,f
  6333  0EAE  0CA9               	rrf	___ftadd@f1+1,f
  6334  0EAF  0CA8               	rrf	___ftadd@f1,f
  6335  0EB0  0AB3               	incf	___ftadd@exp1,f
  6336  0EB1                     l7903:	
  6337  0EB1  0833               	movf	___ftadd@exp1,w
  6338  0EB2  0632               	xorwf	___ftadd@exp2,w
  6339  0EB3  1903               	btfsc	3,2
  6340  0EB4  2ED2               	goto	l5386
  6341  0EB5  2EAC               	goto	l7901
  6342  0EB6                     l7905:	
  6343  0EB6  0833               	movf	___ftadd@exp1,w
  6344  0EB7  0232               	subwf	___ftadd@exp2,w
  6345  0EB8  1803               	skipnc
  6346  0EB9  2ED2               	goto	l5386
  6347  0EBA                     l7907:	
  6348  0EBA  1003               	clrc
  6349  0EBB  0DA8               	rlf	___ftadd@f1,f
  6350  0EBC  0DA9               	rlf	___ftadd@f1+1,f
  6351  0EBD  0DAA               	rlf	___ftadd@f1+2,f
  6352  0EBE  03B3               	decf	___ftadd@exp1,f
  6353  0EBF  0832               	movf	___ftadd@exp2,w
  6354  0EC0  0633               	xorwf	___ftadd@exp1,w
  6355  0EC1  1903               	skipnz
  6356  0EC2  2ECE               	goto	l7915
  6357  0EC3  03B1               	decf	___ftadd@sign,f
  6358  0EC4  0831               	movf	___ftadd@sign,w
  6359  0EC5  3907               	andlw	7
  6360  0EC6  1903               	btfsc	3,2
  6361  0EC7  2ECE               	goto	l7915
  6362  0EC8  2EBA               	goto	l7907
  6363  0EC9                     l7913:	
  6364  0EC9  1003               	clrc
  6365  0ECA  0CAD               	rrf	___ftadd@f2+2,f
  6366  0ECB  0CAC               	rrf	___ftadd@f2+1,f
  6367  0ECC  0CAB               	rrf	___ftadd@f2,f
  6368  0ECD  0AB2               	incf	___ftadd@exp2,f
  6369  0ECE                     l7915:	
  6370  0ECE  0833               	movf	___ftadd@exp1,w
  6371  0ECF  0632               	xorwf	___ftadd@exp2,w
  6372  0ED0  1D03               	skipz
  6373  0ED1  2EC9               	goto	l7913
  6374  0ED2                     l5386:	
  6375  0ED2  1FB1               	btfss	___ftadd@sign,7
  6376  0ED3  2EDD               	goto	l7921
  6377  0ED4  30FF               	movlw	255
  6378  0ED5  06A8               	xorwf	___ftadd@f1,f
  6379  0ED6  06A9               	xorwf	___ftadd@f1+1,f
  6380  0ED7  06AA               	xorwf	___ftadd@f1+2,f
  6381  0ED8  0AA8               	incf	___ftadd@f1,f
  6382  0ED9  1903               	skipnz
  6383  0EDA  0AA9               	incf	___ftadd@f1+1,f
  6384  0EDB  1903               	skipnz
  6385  0EDC  0AAA               	incf	___ftadd@f1+2,f
  6386  0EDD                     l7921:	
  6387  0EDD  1F31               	btfss	___ftadd@sign,6
  6388  0EDE  2EE8               	goto	l7927
  6389  0EDF  30FF               	movlw	255
  6390  0EE0  06AB               	xorwf	___ftadd@f2,f
  6391  0EE1  06AC               	xorwf	___ftadd@f2+1,f
  6392  0EE2  06AD               	xorwf	___ftadd@f2+2,f
  6393  0EE3  0AAB               	incf	___ftadd@f2,f
  6394  0EE4  1903               	skipnz
  6395  0EE5  0AAC               	incf	___ftadd@f2+1,f
  6396  0EE6  1903               	skipnz
  6397  0EE7  0AAD               	incf	___ftadd@f2+2,f
  6398  0EE8                     l7927:	
  6399  0EE8  01B1               	clrf	___ftadd@sign
  6400  0EE9  0828               	movf	___ftadd@f1,w
  6401  0EEA  07AB               	addwf	___ftadd@f2,f
  6402  0EEB  0829               	movf	___ftadd@f1+1,w
  6403  0EEC  1103               	clrz
  6404  0EED  1803               	skipnc
  6405  0EEE  0A29               	incf	___ftadd@f1+1,w
  6406  0EEF  1D03               	btfss	3,2
  6407  0EF0  07AC               	addwf	___ftadd@f2+1,f
  6408  0EF1  082A               	movf	___ftadd@f1+2,w
  6409  0EF2  1103               	clrz
  6410  0EF3  1803               	skipnc
  6411  0EF4  0A2A               	incf	___ftadd@f1+2,w
  6412  0EF5  1D03               	btfss	3,2
  6413  0EF6  07AD               	addwf	___ftadd@f2+2,f
  6414  0EF7  1FAD               	btfss	___ftadd@f2+2,7
  6415  0EF8  2F04               	goto	l7939
  6416  0EF9  30FF               	movlw	255
  6417  0EFA  06AB               	xorwf	___ftadd@f2,f
  6418  0EFB  06AC               	xorwf	___ftadd@f2+1,f
  6419  0EFC  06AD               	xorwf	___ftadd@f2+2,f
  6420  0EFD  0AAB               	incf	___ftadd@f2,f
  6421  0EFE  1903               	skipnz
  6422  0EFF  0AAC               	incf	___ftadd@f2+1,f
  6423  0F00  1903               	skipnz
  6424  0F01  0AAD               	incf	___ftadd@f2+2,f
  6425  0F02  01B1               	clrf	___ftadd@sign
  6426  0F03  0AB1               	incf	___ftadd@sign,f
  6427  0F04                     l7939:	
  6428  0F04  082B               	movf	___ftadd@f2,w
  6429  0F05  00A0               	movwf	?___ftpack
  6430  0F06  082C               	movf	___ftadd@f2+1,w
  6431  0F07  00A1               	movwf	?___ftpack+1
  6432  0F08  082D               	movf	___ftadd@f2+2,w
  6433  0F09  00A2               	movwf	?___ftpack+2
  6434  0F0A  0833               	movf	___ftadd@exp1,w
  6435  0F0B  00A3               	movwf	?___ftpack+3
  6436  0F0C  0831               	movf	___ftadd@sign,w
  6437  0F0D  00A4               	movwf	?___ftpack+4
  6438  0F0E  118A  22C5         	fcall	___ftpack
  6439  0F10  0820               	movf	?___ftpack,w
  6440  0F11  00A8               	movwf	?___ftadd
  6441  0F12  0821               	movf	?___ftpack+1,w
  6442  0F13  00A9               	movwf	?___ftadd+1
  6443  0F14  0822               	movf	?___ftpack+2,w
  6444  0F15  00AA               	movwf	?___ftadd+2
  6445  0F16  0008               	return
  6446  0F17                     __end_of___ftadd:	
  6447                           
  6448                           	psect	text1544
  6449  0DA4                     __ptext1544:	
  6450 ;; =============== function _i2c_WaitForSCL ends ============
  6451                           
  6452                           
  6453 ;; *************** function _SendService *****************
  6454 ;; Defined at:
  6455 ;;		line 322 in file "../Main.c"
  6456 ;; Parameters:    Size  Location     Type
  6457 ;;		None
  6458 ;; Auto vars:     Size  Location     Type
  6459 ;;		None
  6460 ;; Return value:  Size  Location     Type
  6461 ;;		None               void
  6462 ;; Registers used:
  6463 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6464 ;; Tracked objects:
  6465 ;;		On entry : 40/0
  6466 ;;		On exit  : 60/0
  6467 ;;		Unchanged: FFE9F/0
  6468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6469 ;;      Params:         0       0       0       0       0
  6470 ;;      Locals:         0       0       0       0       0
  6471 ;;      Temps:          0       0       0       0       0
  6472 ;;      Totals:         0       0       0       0       0
  6473 ;;Total ram usage:        0 bytes
  6474 ;; Hardware stack levels used:    1
  6475 ;; Hardware stack levels required when called:    4
  6476 ;; This function calls:
  6477 ;;		_putch
  6478 ;; This function is called by:
  6479 ;;		_main
  6480 ;; This function uses a non-reentrant model
  6481 ;;
  6482  0DA4                     _SendService:	
  6483                           
  6484                           ;Main.c: 323: sndCRC = 0x40 ^ unitAddr ^ sndCommand ^ sndLength;
  6485                           
  6486                           ; Regs used in _SendService: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6487  0DA4  1683               	bsf	3,5	;RP0=1, select bank1
  6488  0DA5  084D               	movf	_unitAddr^(0+128),w
  6489  0DA6  0642               	xorwf	_sndCommand^(0+128),w
  6490  0DA7  0644               	xorwf	_sndLength^(0+128),w
  6491  0DA8  3A40               	xorlw	64
  6492  0DA9  00C1               	movwf	_sndCRC^(0+128)
  6493                           
  6494                           ;Main.c: 324: putch(0x40);
  6495  0DAA  3040               	movlw	64
  6496  0DAB  25D3  158A         	fcall	_putch
  6497                           
  6498                           ;Main.c: 325: putch(unitAddr);
  6499  0DAD  1683               	bsf	3,5	;RP0=1, select bank1
  6500  0DAE  084D               	movf	_unitAddr^(0+128),w
  6501  0DAF  25D3  158A         	fcall	_putch
  6502                           
  6503                           ;Main.c: 326: putch(sndCommand);
  6504  0DB1  1683               	bsf	3,5	;RP0=1, select bank1
  6505  0DB2  0842               	movf	_sndCommand^(0+128),w
  6506  0DB3  25D3  158A         	fcall	_putch
  6507                           
  6508                           ;Main.c: 327: putch(sndLength);
  6509  0DB5  1683               	bsf	3,5	;RP0=1, select bank1
  6510  0DB6  0844               	movf	_sndLength^(0+128),w
  6511  0DB7  25D3  158A         	fcall	_putch
  6512                           
  6513                           ;Main.c: 328: for(sndCount=0; sndCount < sndLength; sndCount++){
  6514  0DB9  1683               	bsf	3,5	;RP0=1, select bank1
  6515  0DBA  01C3               	clrf	_sndCount^(0+128)
  6516  0DBB                     l7781:	
  6517  0DBB  0844               	movf	_sndLength^(0+128),w
  6518  0DBC  0243               	subwf	_sndCount^(0+128),w
  6519  0DBD  1803               	btfsc	3,0
  6520  0DBE  2DCE               	goto	l7783
  6521                           
  6522                           ;Main.c: 329: putch(sndData[sndCount]);
  6523  0DBF  0843               	movf	_sndCount^(0+128),w
  6524  0DC0  3EC5               	addlw	_sndData& (0+255)
  6525  0DC1  0084               	movwf	4
  6526  0DC2  1383               	bcf	3,7	;select IRP bank1
  6527  0DC3  0800               	movf	0,w
  6528  0DC4  25D3  158A         	fcall	_putch
  6529                           
  6530                           ;Main.c: 330: sndCRC ^= sndData[sndCount];
  6531  0DC6  1683               	bsf	3,5	;RP0=1, select bank1
  6532  0DC7  0843               	movf	_sndCount^(0+128),w
  6533  0DC8  3EC5               	addlw	_sndData& (0+255)
  6534  0DC9  0084               	movwf	4
  6535  0DCA  0800               	movf	0,w
  6536  0DCB  06C1               	xorwf	_sndCRC^(0+128),f
  6537  0DCC  0AC3               	incf	_sndCount^(0+128),f
  6538  0DCD  2DBB               	goto	l7781
  6539  0DCE                     l7783:	
  6540                           
  6541                           ;Main.c: 331: }
  6542                           ;Main.c: 332: putch(sndCRC);
  6543  0DCE  0841               	movf	_sndCRC^(0+128),w
  6544  0DCF  25D3  158A         	fcall	_putch
  6545                           
  6546                           ;Main.c: 333: putch(0x0A);
  6547  0DD1  300A               	movlw	10
  6548  0DD2  2DD3               	ljmp	_putch
  6549  0DD3                     __end_of_SendService:	
  6550  0DD3                     __ptext1561:	
  6551 ;; =============== function _timer1_init ends ============
  6552                           
  6553                           
  6554 ;; *************** function _putch *****************
  6555 ;; Defined at:
  6556 ;;		line 7 in file "../usart.c"
  6557 ;; Parameters:    Size  Location     Type
  6558 ;;  byte            1    wreg     unsigned char 
  6559 ;; Auto vars:     Size  Location     Type
  6560 ;;  byte            1    0[BANK0 ] unsigned char 
  6561 ;; Return value:  Size  Location     Type
  6562 ;;		None               void
  6563 ;; Registers used:
  6564 ;;		wreg
  6565 ;; Tracked objects:
  6566 ;;		On entry : 40/20
  6567 ;;		On exit  : 60/0
  6568 ;;		Unchanged: FFF9F/0
  6569 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6570 ;;      Params:         0       0       0       0       0
  6571 ;;      Locals:         0       1       0       0       0
  6572 ;;      Temps:          0       0       0       0       0
  6573 ;;      Totals:         0       1       0       0       0
  6574 ;;Total ram usage:        1 bytes
  6575 ;; Hardware stack levels used:    1
  6576 ;; Hardware stack levels required when called:    3
  6577 ;; This function calls:
  6578 ;;		Nothing
  6579 ;; This function is called by:
  6580 ;;		_SendService
  6581 ;; This function uses a non-reentrant model
  6582 ;;
  6583  0DD3                     _putch:	
  6584                           
  6585                           ; Regs used in _putch: [wreg]
  6586                           ;putch@byte stored from wreg
  6587  0DD3  1283               	bcf	3,5	;RP0=0, select bank0
  6588  0DD4  00A0               	movwf	putch@byte
  6589  0DD5                     l1438:	
  6590                           ;usart.c: 9: while(!TXIF)
  6591                           
  6592  0DD5  1E0C               	btfss	12,4
  6593  0DD6  2DD5               	goto	l1438
  6594                           
  6595                           ;usart.c: 11: TXREG = byte;
  6596  0DD7  0820               	movf	putch@byte,w
  6597  0DD8  0099               	movwf	25	;volatile
  6598  0DD9  0008               	return
  6599  0DDA                     __end_of_putch:	
  6600                           
  6601                           	psect	text1559
  6602  07E9                     __ptext1559:	
  6603 ;; =============== function _Reset ends ============
  6604                           
  6605                           
  6606 ;; *************** function _Delay *****************
  6607 ;; Defined at:
  6608 ;;		line 8 in file "../delay.c"
  6609 ;; Parameters:    Size  Location     Type
  6610 ;;  t               2    0[BANK0 ] unsigned int 
  6611 ;; Auto vars:     Size  Location     Type
  6612 ;;		None
  6613 ;; Return value:  Size  Location     Type
  6614 ;;		None               void
  6615 ;; Registers used:
  6616 ;;		wreg, status,2, status,0
  6617 ;; Tracked objects:
  6618 ;;		On entry : 60/0
  6619 ;;		On exit  : 60/20
  6620 ;;		Unchanged: FFF9F/0
  6621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6622 ;;      Params:         0       2       0       0       0
  6623 ;;      Locals:         0       0       0       0       0
  6624 ;;      Temps:          0       0       0       0       0
  6625 ;;      Totals:         0       2       0       0       0
  6626 ;;Total ram usage:        2 bytes
  6627 ;; Hardware stack levels used:    1
  6628 ;; Hardware stack levels required when called:    3
  6629 ;; This function calls:
  6630 ;;		Nothing
  6631 ;; This function is called by:
  6632 ;;		_main
  6633 ;; This function uses a non-reentrant model
  6634 ;;
  6635  07E9                     _Delay:	
  6636                           
  6637                           ;delay.c: 9: static unsigned int k;
  6638                           ;delay.c: 10: for(k = 0; k < t; k++);
  6639                           
  6640                           ; Regs used in _Delay: [wreg+status,2+status,0]
  6641  07E9  1683               	bsf	3,5	;RP0=1, select bank1
  6642  07EA  01A8               	clrf	Delay@k^(0+128)
  6643  07EB  01A9               	clrf	(Delay@k+1)^(0+128)
  6644  07EC                     l7405:	
  6645  07EC  1283               	bcf	3,5	;RP0=0, select bank0
  6646  07ED  0821               	movf	Delay@t+1,w
  6647  07EE  1683               	bsf	3,5	;RP0=1, select bank1
  6648  07EF  0229               	subwf	(Delay@k+1)^(0+128),w
  6649  07F0  1D03               	skipz
  6650  07F1  2FF6               	goto	u1455
  6651  07F2  1283               	bcf	3,5	;RP0=0, select bank0
  6652  07F3  0820               	movf	Delay@t,w
  6653  07F4  1683               	bsf	3,5	;RP0=1, select bank1
  6654  07F5  0228               	subwf	Delay@k^(0+128),w
  6655  07F6                     u1455:	
  6656  07F6  1803               	btfsc	3,0
  6657  07F7  0008               	return
  6658  07F8  0AA8               	incf	Delay@k^(0+128),f
  6659  07F9  1903               	skipnz
  6660  07FA  0AA9               	incf	(Delay@k+1)^(0+128),f
  6661  07FB  2FEC               	goto	l7405
  6662  07FC                     __end_of_Delay:	
  6663                           
  6664                           	psect	text1560
  6665  0D92                     __ptext1560:	
  6666 ;; =============== function _Delay ends ============
  6667                           
  6668                           
  6669 ;; *************** function _timer1_init *****************
  6670 ;; Defined at:
  6671 ;;		line 14 in file "../delay.c"
  6672 ;; Parameters:    Size  Location     Type
  6673 ;;		None
  6674 ;; Auto vars:     Size  Location     Type
  6675 ;;		None
  6676 ;; Return value:  Size  Location     Type
  6677 ;;		None               void
  6678 ;; Registers used:
  6679 ;;		wreg, status,2
  6680 ;; Tracked objects:
  6681 ;;		On entry : 60/0
  6682 ;;		On exit  : 60/20
  6683 ;;		Unchanged: FFF9F/0
  6684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6685 ;;      Params:         0       0       0       0       0
  6686 ;;      Locals:         0       0       0       0       0
  6687 ;;      Temps:          0       0       0       0       0
  6688 ;;      Totals:         0       0       0       0       0
  6689 ;;Total ram usage:        0 bytes
  6690 ;; Hardware stack levels used:    1
  6691 ;; Hardware stack levels required when called:    3
  6692 ;; This function calls:
  6693 ;;		Nothing
  6694 ;; This function is called by:
  6695 ;;		_main
  6696 ;; This function uses a non-reentrant model
  6697 ;;
  6698  0D92                     _timer1_init:	
  6699                           
  6700                           ;delay.c: 15: T1CONbits.TMR1CS = 0;
  6701                           
  6702                           ; Regs used in _timer1_init: [wreg+status,2]
  6703  0D92  1090               	bcf	16,1	;volatile
  6704                           
  6705                           ;delay.c: 16: T1CONbits.T1CKPS1 = 1;
  6706  0D93  1690               	bsf	16,5	;volatile
  6707                           
  6708                           ;delay.c: 17: T1CONbits.T1CKPS0 = 0;
  6709  0D94  1210               	bcf	16,4	;volatile
  6710                           
  6711                           ;delay.c: 18: TMR1L = 0xDC;
  6712  0D95  30DC               	movlw	220
  6713  0D96  008E               	movwf	14	;volatile
  6714                           
  6715                           ;delay.c: 19: TMR1H = 0x0B;
  6716  0D97  300B               	movlw	11
  6717  0D98  008F               	movwf	15	;volatile
  6718                           
  6719                           ;delay.c: 21: PIR1bits.TMR1IF = 0;
  6720  0D99  100C               	bcf	12,0	;volatile
  6721                           
  6722                           ;delay.c: 22: GIE = 1;
  6723  0D9A  178B               	bsf	11,7
  6724                           
  6725                           ;delay.c: 23: PEIE = 1;
  6726  0D9B  170B               	bsf	11,6
  6727                           
  6728                           ;delay.c: 24: T1CONbits.TMR1ON = 1;
  6729  0D9C  1410               	bsf	16,0	;volatile
  6730                           
  6731                           ;delay.c: 25: TMR1IE = 1;
  6732  0D9D  1683               	bsf	3,5	;RP0=1, select bank1
  6733  0D9E  140C               	bsf	12,0
  6734                           
  6735                           ;delay.c: 26: timer1_counter = 0;
  6736  0D9F  01AE               	clrf	_timer1_counter^(0+128)
  6737  0DA0  01AF               	clrf	(_timer1_counter+1)^(0+128)
  6738                           
  6739                           ;delay.c: 27: delay_flag = 0;
  6740  0DA1  01AA               	clrf	_delay_flag^(0+128)
  6741  0DA2  01AB               	clrf	(_delay_flag+1)^(0+128)
  6742  0DA3  0008               	return
  6743  0DA4                     __end_of_timer1_init:	
  6744                           
  6745                           	psect	text1564
  6746  07FC                     __ptext1564:	
  6747 ;; =============== function _WriteEE ends ============
  6748                           
  6749                           
  6750 ;; *************** function _AutoAdjustGain *****************
  6751 ;; Defined at:
  6752 ;;		line 172 in file "../Main.c"
  6753 ;; Parameters:    Size  Location     Type
  6754 ;;		None
  6755 ;; Auto vars:     Size  Location     Type
  6756 ;;		None
  6757 ;; Return value:  Size  Location     Type
  6758 ;;		None               void
  6759 ;; Registers used:
  6760 ;;		None
  6761 ;; Tracked objects:
  6762 ;;		On entry : 60/20
  6763 ;;		On exit  : 60/20
  6764 ;;		Unchanged: FFFFFF9F/0
  6765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6766 ;;      Params:         0       0       0       0       0
  6767 ;;      Locals:         0       0       0       0       0
  6768 ;;      Temps:          0       0       0       0       0
  6769 ;;      Totals:         0       0       0       0       0
  6770 ;;Total ram usage:        0 bytes
  6771 ;; Hardware stack levels used:    1
  6772 ;; Hardware stack levels required when called:    3
  6773 ;; This function calls:
  6774 ;;		Nothing
  6775 ;; This function is called by:
  6776 ;;		_main
  6777 ;; This function uses a non-reentrant model
  6778 ;;
  6779  07FC                     _AutoAdjustGain:	
  6780                           
  6781                           ; Regs used in _AutoAdjustGain: []
  6782  07FC  0008               	return
  6783  07FD                     __end_of_AutoAdjustGain:	
  6784                           
  6785                           	psect	text1565
  6786  07D0                     __ptext1565:	
  6787 ;; =============== function _AutoAdjustGain ends ============
  6788                           
  6789                           
  6790 ;; *************** function _ResetUart *****************
  6791 ;; Defined at:
  6792 ;;		line 130 in file "../Main.c"
  6793 ;; Parameters:    Size  Location     Type
  6794 ;;		None
  6795 ;; Auto vars:     Size  Location     Type
  6796 ;;		None
  6797 ;; Return value:  Size  Location     Type
  6798 ;;		None               void
  6799 ;; Registers used:
  6800 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6801 ;; Tracked objects:
  6802 ;;		On entry : 60/0
  6803 ;;		On exit  : 60/20
  6804 ;;		Unchanged: FFE9F/0
  6805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6806 ;;      Params:         0       0       0       0       0
  6807 ;;      Locals:         0       0       0       0       0
  6808 ;;      Temps:          0       0       0       0       0
  6809 ;;      Totals:         0       0       0       0       0
  6810 ;;Total ram usage:        0 bytes
  6811 ;; Hardware stack levels used:    1
  6812 ;; Hardware stack levels required when called:    3
  6813 ;; This function calls:
  6814 ;;		Nothing
  6815 ;; This function is called by:
  6816 ;;		_main
  6817 ;; This function uses a non-reentrant model
  6818 ;;
  6819  07D0                     _ResetUart:	
  6820                           
  6821                           ;Main.c: 131: static unsigned char i;
  6822                           ;Main.c: 132: rcvCommand = 0x00;
  6823                           
  6824                           ; Regs used in _ResetUart: [wreg-fsr0h+status,2+status,0]
  6825  07D0  1683               	bsf	3,5	;RP0=1, select bank1
  6826  07D1  01BE               	clrf	_rcvCommand^(0+128)
  6827                           
  6828                           ;Main.c: 133: rcvLength = 0x00;
  6829  07D2  01C0               	clrf	_rcvLength^(0+128)
  6830                           
  6831                           ;Main.c: 134: rcvCount = 0x00;
  6832  07D3  01BF               	clrf	_rcvCount^(0+128)
  6833                           
  6834                           ;Main.c: 135: for(i=0; i < 8; i++){rcvData[i] = 0x00;}
  6835  07D4  01B0               	clrf	ResetUart@i^(0+128)
  6836  07D5                     l8501:	
  6837  07D5  3008               	movlw	8
  6838  07D6  0230               	subwf	ResetUart@i^(0+128),w
  6839  07D7  1803               	btfsc	3,0
  6840  07D8  2FE0               	goto	l8511
  6841  07D9  0830               	movf	ResetUart@i^(0+128),w
  6842  07DA  3EA0               	addlw	_rcvData& (0+255)
  6843  07DB  0084               	movwf	4
  6844  07DC  1383               	bcf	3,7	;select IRP bank1
  6845  07DD  0180               	clrf	0
  6846  07DE  0AB0               	incf	ResetUart@i^(0+128),f
  6847  07DF  2FD5               	goto	l8501
  6848  07E0                     l8511:	
  6849                           
  6850                           ;Main.c: 136: rcvCRC = 0x00;
  6851  07E0  01BD               	clrf	_rcvCRC^(0+128)
  6852                           
  6853                           ;Main.c: 137: rcvStartOk = 0;
  6854  07E1  1056               	bcf	(_rcvStartOk/(0+8))^(0+128),_rcvStartOk& (0+7)
  6855                           
  6856                           ;Main.c: 138: rcvAddrOk = 0;
  6857  07E2  107D               	bcf	_rcvAddrOk/(0+8),_rcvAddrOk& (0+7)
  6858                           
  6859                           ;Main.c: 139: rcvCommandOk = 0;
  6860  07E3  117D               	bcf	_rcvCommandOk/(0+8),_rcvCommandOk& (0+7)
  6861                           
  6862                           ;Main.c: 140: rcvLengthOk = 0;
  6863  07E4  127D               	bcf	_rcvLengthOk/(0+8),_rcvLengthOk& (0+7)
  6864                           
  6865                           ;Main.c: 141: rcvDataOk = 0;
  6866  07E5  11FD               	bcf	_rcvDataOk/(0+8),_rcvDataOk& (0+7)
  6867                           
  6868                           ;Main.c: 142: rcvCRCOk = 0;
  6869  07E6  10FD               	bcf	_rcvCRCOk/(0+8),_rcvCRCOk& (0+7)
  6870                           
  6871                           ;Main.c: 143: rcvTerminalOk = 0;
  6872  07E7  12FD               	bcf	_rcvTerminalOk/(0+8),_rcvTerminalOk& (0+7)
  6873  07E8  0008               	return
  6874  07E9                     __end_of_ResetUart:	
  6875                           
  6876                           	psect	text1568
  6877  0F17                     __ptext1568:	
  6878 ;; =============== function _RelayOn ends ============
  6879                           
  6880                           
  6881 ;; *************** function _isr *****************
  6882 ;; Defined at:
  6883 ;;		line 413 in file "../Main.c"
  6884 ;; Parameters:    Size  Location     Type
  6885 ;;		None
  6886 ;; Auto vars:     Size  Location     Type
  6887 ;;		None
  6888 ;; Return value:  Size  Location     Type
  6889 ;;		None               void
  6890 ;; Registers used:
  6891 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6892 ;; Tracked objects:
  6893 ;;		On entry : 0/0
  6894 ;;		On exit  : 0/0
  6895 ;;		Unchanged: FFE00/0
  6896 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6897 ;;      Params:         0       0       0       0       0
  6898 ;;      Locals:         0       0       0       0       0
  6899 ;;      Temps:          6       0       0       0       0
  6900 ;;      Totals:         6       0       0       0       0
  6901 ;;Total ram usage:        6 bytes
  6902 ;; Hardware stack levels used:    1
  6903 ;; Hardware stack levels required when called:    2
  6904 ;; This function calls:
  6905 ;;		i1_ResetUart
  6906 ;;		i1_RelayOff
  6907 ;;		_SendRelayOff
  6908 ;; This function is called by:
  6909 ;;		Interrupt level 1
  6910 ;; This function uses a non-reentrant model
  6911 ;;
  6912  0F17                     _isr:	
  6913                           
  6914                           ;Main.c: 414: if(RCIF){
  6915  0F17  1283               	bcf	3,5	;RP0=0, select bank0
  6916  0F18  1303               	bcf	3,6	;RP1=0, select bank0
  6917  0F19  1E8C               	btfss	12,5
  6918  0F1A  2F8F               	goto	i1l802
  6919                           
  6920                           ;Main.c: 415: if(rcvStartOk == 0){
  6921  0F1B  1683               	bsf	3,5	;RP0=1, select bank1
  6922  0F1C  1856               	btfsc	(_rcvStartOk/(0+8))^(0+128),_rcvStartOk& (0+7)
  6923  0F1D  2F2C               	goto	i1l803
  6924                           
  6925                           ;Main.c: 416: if(RCREG == 0x40){
  6926  0F1E  1283               	bcf	3,5	;RP0=0, select bank0
  6927  0F1F  081A               	movf	26,w	;volatile
  6928  0F20  3A40               	xorlw	64
  6929  0F21  1D03               	skipz
  6930  0F22  2F29               	goto	i1l8561
  6931                           
  6932                           ;Main.c: 417: ResetUart();
  6933  0F23  27C2  158A         	fcall	i1_ResetUart
  6934                           
  6935                           ;Main.c: 418: rcvCRC = 0x40;
  6936  0F25  3040               	movlw	64
  6937  0F26  00BD               	movwf	_rcvCRC^(0+128)
  6938                           
  6939                           ;Main.c: 419: rcvStartOk = 1;
  6940  0F27  1456               	bsf	(_rcvStartOk/(0+8))^(0+128),_rcvStartOk& (0+7)
  6941                           
  6942                           ;Main.c: 420: }else{
  6943  0F28  2FB9               	goto	i1l837
  6944  0F29                     i1l8561:	
  6945                           
  6946                           ;Main.c: 421: ResetUart();
  6947  0F29  27C2  158A         	fcall	i1_ResetUart
  6948  0F2B  2FB9               	goto	i1l837
  6949  0F2C                     i1l803:	
  6950  0F2C  187D               	btfsc	_rcvAddrOk/(0+8),_rcvAddrOk& (0+7)
  6951  0F2D  2F38               	goto	i1l807
  6952                           
  6953                           ;Main.c: 424: if(RCREG == unitAddr){
  6954  0F2E  1283               	bcf	3,5	;RP0=0, select bank0
  6955  0F2F  081A               	movf	26,w	;volatile
  6956  0F30  1683               	bsf	3,5	;RP0=1, select bank1
  6957  0F31  064D               	xorwf	_unitAddr^(0+128),w
  6958  0F32  1D03               	skipz
  6959  0F33  2F29               	goto	i1l8561
  6960                           
  6961                           ;Main.c: 425: rcvCRC ^= unitAddr;
  6962  0F34  084D               	movf	_unitAddr^(0+128),w
  6963  0F35  06BD               	xorwf	_rcvCRC^(0+128),f
  6964                           
  6965                           ;Main.c: 426: rcvAddrOk = 1;
  6966  0F36  147D               	bsf	_rcvAddrOk/(0+8),_rcvAddrOk& (0+7)
  6967                           
  6968                           ;Main.c: 427: }else{
  6969  0F37  2FB9               	goto	i1l837
  6970  0F38                     i1l807:	
  6971  0F38  197D               	btfsc	_rcvCommandOk/(0+8),_rcvCommandOk& (0+7)
  6972  0F39  2F41               	goto	i1l811
  6973                           
  6974                           ;Main.c: 431: rcvCommand = RCREG;
  6975  0F3A  1283               	bcf	3,5	;RP0=0, select bank0
  6976  0F3B  081A               	movf	26,w	;volatile
  6977  0F3C  1683               	bsf	3,5	;RP0=1, select bank1
  6978  0F3D  00BE               	movwf	_rcvCommand^(0+128)
  6979                           
  6980                           ;Main.c: 432: rcvCRC ^= rcvCommand;
  6981  0F3E  06BD               	xorwf	_rcvCRC^(0+128),f
  6982                           
  6983                           ;Main.c: 433: rcvCommandOk = 1;
  6984  0F3F  157D               	bsf	_rcvCommandOk/(0+8),_rcvCommandOk& (0+7)
  6985                           
  6986                           ;Main.c: 434: }else if(!rcvLengthOk){
  6987  0F40  2FB9               	goto	i1l837
  6988  0F41                     i1l811:	
  6989  0F41  1A7D               	btfsc	_rcvLengthOk/(0+8),_rcvLengthOk& (0+7)
  6990  0F42  2F53               	goto	i1l813
  6991                           
  6992                           ;Main.c: 435: rcvLength = RCREG;
  6993  0F43  1283               	bcf	3,5	;RP0=0, select bank0
  6994  0F44  081A               	movf	26,w	;volatile
  6995  0F45  1683               	bsf	3,5	;RP0=1, select bank1
  6996  0F46  00C0               	movwf	_rcvLength^(0+128)
  6997                           
  6998                           ;Main.c: 436: rcvCRC ^= rcvLength;
  6999  0F47  06BD               	xorwf	_rcvCRC^(0+128),f
  7000                           
  7001                           ;Main.c: 437: if(rcvLength == 0){
  7002  0F48  08C0               	movf	_rcvLength^(0+128),f
  7003  0F49  1D03               	skipz
  7004  0F4A  2F4D               	goto	i1l8583
  7005                           
  7006                           ;Main.c: 438: rcvDataOk = 1;
  7007  0F4B  15FD               	bsf	_rcvDataOk/(0+8),_rcvDataOk& (0+7)
  7008  0F4C  2F51               	goto	i1l8585
  7009  0F4D                     i1l8583:	
  7010                           ;Main.c: 440: }else if(rcvLength <= 8){
  7011                           
  7012                           ;Main.c: 439: rcvLengthOk = 1;
  7013                           
  7014  0F4D  3009               	movlw	9
  7015  0F4E  0240               	subwf	_rcvLength^(0+128),w
  7016  0F4F  1803               	skipnc
  7017  0F50  2F29               	goto	i1l8561
  7018  0F51                     i1l8585:	
  7019                           
  7020                           ;Main.c: 441: rcvLengthOk = 1;
  7021  0F51  167D               	bsf	_rcvLengthOk/(0+8),_rcvLengthOk& (0+7)
  7022                           
  7023                           ;Main.c: 442: }else{
  7024  0F52  2FB9               	goto	i1l837
  7025  0F53                     i1l813:	
  7026  0F53  19FD               	btfsc	_rcvDataOk/(0+8),_rcvDataOk& (0+7)
  7027  0F54  2F79               	goto	i1l819
  7028                           
  7029                           ;Main.c: 446: rcvData[rcvCount] = RCREG;
  7030  0F55  083F               	movf	_rcvCount^(0+128),w
  7031  0F56  3EA0               	addlw	_rcvData& (0+255)
  7032  0F57  0084               	movwf	4
  7033  0F58  1283               	bcf	3,5	;RP0=0, select bank0
  7034  0F59  081A               	movf	26,w	;volatile
  7035  0F5A  1383               	bcf	3,7	;select IRP bank1
  7036  0F5B  0080               	movwf	0
  7037                           
  7038                           ;Main.c: 447: rcvCRC ^= rcvData[rcvCount];
  7039  0F5C  1683               	bsf	3,5	;RP0=1, select bank1
  7040  0F5D  083F               	movf	_rcvCount^(0+128),w
  7041  0F5E  3EA0               	addlw	_rcvData& (0+255)
  7042  0F5F  0084               	movwf	4
  7043  0F60  0800               	movf	0,w
  7044  0F61  06BD               	xorwf	_rcvCRC^(0+128),f
  7045                           
  7046                           ;Main.c: 448: if(rcvCount + 1 >= rcvLength){
  7047  0F62  083F               	movf	_rcvCount^(0+128),w
  7048  0F63  3E01               	addlw	1
  7049  0F64  00F7               	movwf	??_isr
  7050  0F65  3000               	movlw	0
  7051  0F66  1803               	skipnc
  7052  0F67  3001               	movlw	1
  7053  0F68  00F8               	movwf	??_isr+1
  7054  0F69  3A80               	xorlw	128
  7055  0F6A  00F9               	movwf	??_isr+2
  7056  0F6B  3080               	movlw	128
  7057  0F6C  0279               	subwf	??_isr+2,w
  7058  0F6D  1D03               	skipz
  7059  0F6E  2F71               	goto	u288_25
  7060  0F6F  0840               	movf	_rcvLength^(0+128),w
  7061  0F70  0277               	subwf	??_isr,w
  7062  0F71                     u288_25:	
  7063  0F71  1C03               	skipc
  7064  0F72  2F75               	goto	i1l8595
  7065                           
  7066                           ;Main.c: 449: rcvDataOk = 1;
  7067  0F73  15FD               	bsf	_rcvDataOk/(0+8),_rcvDataOk& (0+7)
  7068                           
  7069                           ;Main.c: 450: }else{
  7070  0F74  2FB9               	goto	i1l837
  7071  0F75                     i1l8595:	
  7072                           
  7073                           ;Main.c: 451: rcvCount += 1;
  7074  0F75  1683               	bsf	3,5	;RP0=1, select bank1
  7075  0F76  1303               	bcf	3,6	;RP1=0, select bank1
  7076  0F77  0ABF               	incf	_rcvCount^(0+128),f
  7077  0F78  2FB9               	goto	i1l837
  7078  0F79                     i1l819:	
  7079  0F79  18FD               	btfsc	_rcvCRCOk/(0+8),_rcvCRCOk& (0+7)
  7080  0F7A  2F82               	goto	i1l823
  7081                           
  7082                           ;Main.c: 454: if(rcvCRC == RCREG){
  7083  0F7B  083D               	movf	_rcvCRC^(0+128),w
  7084  0F7C  1283               	bcf	3,5	;RP0=0, select bank0
  7085  0F7D  061A               	xorwf	26,w	;volatile
  7086  0F7E  1D03               	skipz
  7087  0F7F  2F29               	goto	i1l8561
  7088                           
  7089                           ;Main.c: 455: rcvCRCOk = 1;
  7090  0F80  14FD               	bsf	_rcvCRCOk/(0+8),_rcvCRCOk& (0+7)
  7091                           
  7092                           ;Main.c: 456: }else{
  7093  0F81  2FB9               	goto	i1l837
  7094  0F82                     i1l823:	
  7095  0F82  1AFD               	btfsc	_rcvTerminalOk/(0+8),_rcvTerminalOk& (0+7)
  7096  0F83  2F8B               	goto	i1l8609
  7097                           
  7098                           ;Main.c: 460: if(RCREG == 0x0A){
  7099  0F84  1283               	bcf	3,5	;RP0=0, select bank0
  7100  0F85  081A               	movf	26,w	;volatile
  7101  0F86  3A0A               	xorlw	10
  7102  0F87  1D03               	skipz
  7103  0F88  2F29               	goto	i1l8561
  7104                           
  7105                           ;Main.c: 461: rcvTerminalOk = 1;
  7106  0F89  16FD               	bsf	_rcvTerminalOk/(0+8),_rcvTerminalOk& (0+7)
  7107                           
  7108                           ;Main.c: 462: }else{
  7109  0F8A  2FB9               	goto	i1l837
  7110  0F8B                     i1l8609:	
  7111                           
  7112                           ;Main.c: 466: RCREG = RCREG;
  7113  0F8B  1283               	bcf	3,5	;RP0=0, select bank0
  7114  0F8C  081A               	movf	26,w	;volatile
  7115  0F8D  009A               	movwf	26	;volatile
  7116  0F8E  2FB9               	goto	i1l837
  7117  0F8F                     i1l802:	
  7118  0F8F  1C0C               	btfss	12,0	;volatile
  7119  0F90  2FB5               	goto	i1l8631
  7120                           
  7121                           ;Main.c: 469: TMR1L = 0xDC;
  7122  0F91  30DC               	movlw	220
  7123  0F92  008E               	movwf	14	;volatile
  7124                           
  7125                           ;Main.c: 470: TMR1H = 0x0B;
  7126  0F93  300B               	movlw	11
  7127  0F94  008F               	movwf	15	;volatile
  7128                           
  7129                           ;Main.c: 472: if(timer1_counter%2 == 1) {
  7130  0F95  1683               	bsf	3,5	;RP0=1, select bank1
  7131  0F96  1C2E               	btfss	_timer1_counter^(0+128),0
  7132  0F97  2FAC               	goto	i1l833
  7133                           
  7134                           ;Main.c: 473: if(timer1_counter>(30*4) && delay_flag == 1) {
  7135  0F98  3000               	movlw	0
  7136  0F99  022F               	subwf	(_timer1_counter+1)^(0+128),w
  7137  0F9A  3079               	movlw	121
  7138  0F9B  1903               	skipnz
  7139  0F9C  022E               	subwf	_timer1_counter^(0+128),w
  7140  0F9D  1C03               	skipc
  7141  0F9E  2FAE               	goto	i1l8627
  7142  0F9F  032A               	decf	_delay_flag^(0+128),w
  7143  0FA0  042B               	iorwf	(_delay_flag+1)^(0+128),w
  7144  0FA1  1D03               	skipz
  7145  0FA2  2FAE               	goto	i1l8627
  7146                           
  7147                           ;Main.c: 474: RelayOff();
  7148  0FA3  27DC  158A         	fcall	i1_RelayOff
  7149                           
  7150                           ;Main.c: 475: delay_flag = 0;
  7151  0FA5  1683               	bsf	3,5	;RP0=1, select bank1
  7152  0FA6  01AA               	clrf	_delay_flag^(0+128)
  7153  0FA7  01AB               	clrf	(_delay_flag+1)^(0+128)
  7154                           
  7155                           ;Main.c: 476: SendRelayOff();
  7156  0FA8  27DF  158A         	fcall	_SendRelayOff
  7157                           
  7158                           ;Main.c: 477: PORTBbits.RB7 = 0;
  7159  0FAA  1386               	bcf	6,7	;volatile
  7160  0FAB  2FAE               	goto	i1l8627
  7161  0FAC                     i1l833:	
  7162                           
  7163                           ;Main.c: 480: PORTBbits.RB7 = 1;
  7164  0FAC  1283               	bcf	3,5	;RP0=0, select bank0
  7165  0FAD  1786               	bsf	6,7	;volatile
  7166  0FAE                     i1l8627:	
  7167                           
  7168                           ;Main.c: 481: }
  7169                           ;Main.c: 482: timer1_counter++;
  7170  0FAE  1683               	bsf	3,5	;RP0=1, select bank1
  7171  0FAF  0AAE               	incf	_timer1_counter^(0+128),f
  7172  0FB0  1903               	skipnz
  7173  0FB1  0AAF               	incf	(_timer1_counter+1)^(0+128),f
  7174                           
  7175                           ;Main.c: 483: PIR1bits.TMR1IF = 0;
  7176  0FB2  1283               	bcf	3,5	;RP0=0, select bank0
  7177  0FB3  100C               	bcf	12,0	;volatile
  7178                           
  7179                           ;Main.c: 484: } else{
  7180  0FB4  2FB9               	goto	i1l837
  7181  0FB5                     i1l8631:	
  7182                           
  7183                           ;Main.c: 485: PIR1 = 0B00000000;
  7184  0FB5  018C               	clrf	12	;volatile
  7185                           
  7186                           ;Main.c: 486: PIR2 = 0B00000000;
  7187  0FB6  018D               	clrf	13	;volatile
  7188                           
  7189                           ;Main.c: 487: INTCON = 0B11000000;
  7190  0FB7  30C0               	movlw	192
  7191  0FB8  008B               	movwf	11	;volatile
  7192  0FB9                     i1l837:	
  7193  0FB9  087C               	movf	??_isr+5,w
  7194  0FBA  008A               	movwf	10
  7195  0FBB  087B               	movf	??_isr+4,w
  7196  0FBC  0084               	movwf	4
  7197  0FBD  0E7A               	swapf	(??_isr+3)^(0+-128),w
  7198  0FBE  0083               	movwf	3
  7199  0FBF  0EFE               	swapf	126,f
  7200  0FC0  0E7E               	swapf	126,w
  7201  0FC1  0009               	retfie
  7202  0FC2                     __end_of_isr:	
  7203  0FC2                     __ptext1571:	
  7204 ;; =============== function i1_putch ends ============
  7205                           
  7206                           
  7207 ;; *************** function i1_ResetUart *****************
  7208 ;; Defined at:
  7209 ;;		line 130 in file "../Main.c"
  7210 ;; Parameters:    Size  Location     Type
  7211 ;;		None
  7212 ;; Auto vars:     Size  Location     Type
  7213 ;;		None
  7214 ;; Return value:  Size  Location     Type
  7215 ;;		None               void
  7216 ;; Registers used:
  7217 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  7218 ;; Tracked objects:
  7219 ;;		On entry : 0/0
  7220 ;;		On exit  : 60/20
  7221 ;;		Unchanged: FFE9F/0
  7222 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7223 ;;      Params:         0       0       0       0       0
  7224 ;;      Locals:         0       0       0       0       0
  7225 ;;      Temps:          0       0       0       0       0
  7226 ;;      Totals:         0       0       0       0       0
  7227 ;;Total ram usage:        0 bytes
  7228 ;; Hardware stack levels used:    1
  7229 ;; This function calls:
  7230 ;;		Nothing
  7231 ;; This function is called by:
  7232 ;;		_isr
  7233 ;; This function uses a non-reentrant model
  7234 ;;
  7235  0FC2                     i1_ResetUart:	
  7236                           
  7237                           ;Main.c: 131: static unsigned char i;
  7238                           ;Main.c: 132: rcvCommand = 0x00;
  7239                           
  7240                           ; Regs used in i1_ResetUart: [wreg-fsr0h+status,2+status,0]
  7241  0FC2  1683               	bsf	3,5	;RP0=1, select bank1
  7242  0FC3  1303               	bcf	3,6	;RP1=0, select bank1
  7243  0FC4  01BE               	clrf	_rcvCommand^(0+128)
  7244                           
  7245                           ;Main.c: 133: rcvLength = 0x00;
  7246  0FC5  01C0               	clrf	_rcvLength^(0+128)
  7247                           
  7248                           ;Main.c: 134: rcvCount = 0x00;
  7249  0FC6  01BF               	clrf	_rcvCount^(0+128)
  7250                           
  7251                           ;Main.c: 135: for(i=0; i < 8; i++){rcvData[i] = 0x00;}
  7252  0FC7  01B0               	clrf	ResetUart@i^(0+128)
  7253  0FC8                     i1l8639:	
  7254  0FC8  3008               	movlw	8
  7255  0FC9  0230               	subwf	ResetUart@i^(0+128),w
  7256  0FCA  1803               	btfsc	3,0
  7257  0FCB  2FD3               	goto	i1l8649
  7258  0FCC  0830               	movf	ResetUart@i^(0+128),w
  7259  0FCD  3EA0               	addlw	_rcvData& (0+255)
  7260  0FCE  0084               	movwf	4
  7261  0FCF  1383               	bcf	3,7	;select IRP bank1
  7262  0FD0  0180               	clrf	0
  7263  0FD1  0AB0               	incf	ResetUart@i^(0+128),f
  7264  0FD2  2FC8               	goto	i1l8639
  7265  0FD3                     i1l8649:	
  7266                           
  7267                           ;Main.c: 136: rcvCRC = 0x00;
  7268  0FD3  01BD               	clrf	_rcvCRC^(0+128)
  7269                           
  7270                           ;Main.c: 137: rcvStartOk = 0;
  7271  0FD4  1056               	bcf	(_rcvStartOk/(0+8))^(0+128),_rcvStartOk& (0+7)
  7272                           
  7273                           ;Main.c: 138: rcvAddrOk = 0;
  7274  0FD5  107D               	bcf	_rcvAddrOk/(0+8),_rcvAddrOk& (0+7)
  7275                           
  7276                           ;Main.c: 139: rcvCommandOk = 0;
  7277  0FD6  117D               	bcf	_rcvCommandOk/(0+8),_rcvCommandOk& (0+7)
  7278                           
  7279                           ;Main.c: 140: rcvLengthOk = 0;
  7280  0FD7  127D               	bcf	_rcvLengthOk/(0+8),_rcvLengthOk& (0+7)
  7281                           
  7282                           ;Main.c: 141: rcvDataOk = 0;
  7283  0FD8  11FD               	bcf	_rcvDataOk/(0+8),_rcvDataOk& (0+7)
  7284                           
  7285                           ;Main.c: 142: rcvCRCOk = 0;
  7286  0FD9  10FD               	bcf	_rcvCRCOk/(0+8),_rcvCRCOk& (0+7)
  7287                           
  7288                           ;Main.c: 143: rcvTerminalOk = 0;
  7289  0FDA  12FD               	bcf	_rcvTerminalOk/(0+8),_rcvTerminalOk& (0+7)
  7290  0FDB  0008               	return
  7291  0FDC                     __end_ofi1_ResetUart:	
  7292  0FDC                     __ptext1572:	
  7293 ;; =============== function i1_ResetUart ends ============
  7294                           
  7295                           
  7296 ;; *************** function i1_RelayOff *****************
  7297 ;; Defined at:
  7298 ;;		line 126 in file "../Main.c"
  7299 ;; Parameters:    Size  Location     Type
  7300 ;;		None
  7301 ;; Auto vars:     Size  Location     Type
  7302 ;;		None
  7303 ;; Return value:  Size  Location     Type
  7304 ;;		None               void
  7305 ;; Registers used:
  7306 ;;		None
  7307 ;; Tracked objects:
  7308 ;;		On entry : 60/20
  7309 ;;		On exit  : 60/0
  7310 ;;		Unchanged: FFF9F/0
  7311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7312 ;;      Params:         0       0       0       0       0
  7313 ;;      Locals:         0       0       0       0       0
  7314 ;;      Temps:          0       0       0       0       0
  7315 ;;      Totals:         0       0       0       0       0
  7316 ;;Total ram usage:        0 bytes
  7317 ;; Hardware stack levels used:    1
  7318 ;; This function calls:
  7319 ;;		Nothing
  7320 ;; This function is called by:
  7321 ;;		_isr
  7322 ;; This function uses a non-reentrant model
  7323 ;;
  7324  0FDC                     i1_RelayOff:	
  7325                           
  7326                           ; Regs used in i1_RelayOff: []
  7327  0FDC  1283               	bcf	3,5	;RP0=0, select bank0
  7328  0FDD  1006               	bcf	6,0
  7329  0FDE  0008               	return
  7330  0FDF                     __end_ofi1_RelayOff:	
  7331  0FDF                     __ptext1569:	
  7332 ;; =============== function _isr ends ============
  7333                           
  7334                           
  7335 ;; *************** function _SendRelayOff *****************
  7336 ;; Defined at:
  7337 ;;		line 337 in file "../Main.c"
  7338 ;; Parameters:    Size  Location     Type
  7339 ;;		None
  7340 ;; Auto vars:     Size  Location     Type
  7341 ;;  relayLenght     2    0        unsigned int 
  7342 ;;  relayCommand    2    3[COMMON] unsigned int 
  7343 ;;  relayCRC        2    1[COMMON] unsigned int 
  7344 ;; Return value:  Size  Location     Type
  7345 ;;		None               void
  7346 ;; Registers used:
  7347 ;;		wreg, status,2, status,0, pclath, cstack
  7348 ;; Tracked objects:
  7349 ;;		On entry : 60/20
  7350 ;;		On exit  : 60/0
  7351 ;;		Unchanged: FFF9F/0
  7352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7353 ;;      Params:         0       0       0       0       0
  7354 ;;      Locals:         6       0       0       0       0
  7355 ;;      Temps:          0       0       0       0       0
  7356 ;;      Totals:         6       0       0       0       0
  7357 ;;Total ram usage:        6 bytes
  7358 ;; Hardware stack levels used:    1
  7359 ;; Hardware stack levels required when called:    1
  7360 ;; This function calls:
  7361 ;;		i1_putch
  7362 ;; This function is called by:
  7363 ;;		_isr
  7364 ;; This function uses a non-reentrant model
  7365 ;;
  7366  0FDF                     _SendRelayOff:	
  7367                           
  7368                           ;Main.c: 338: unsigned int relayCommand = 0x36;
  7369                           
  7370                           ; Regs used in _SendRelayOff: [wreg+status,2+status,0+pclath+cstack]
  7371  0FDF  3036               	movlw	54
  7372  0FE0  00F3               	movwf	SendRelayOff@relayCommand
  7373  0FE1  01F4               	clrf	SendRelayOff@relayCommand+1
  7374                           
  7375                           ;Main.c: 340: unsigned int relayCRC = 0x40 ^ 0x00 ^ relayCommand ^ relayLenght;
  7376  0FE2  0874               	movf	SendRelayOff@relayCommand+1,w
  7377  0FE3  00F2               	movwf	SendRelayOff@relayCRC+1
  7378  0FE4  0873               	movf	SendRelayOff@relayCommand,w
  7379  0FE5  00F1               	movwf	SendRelayOff@relayCRC
  7380  0FE6  3040               	movlw	64
  7381  0FE7  06F1               	xorwf	SendRelayOff@relayCRC,f
  7382                           
  7383                           ;Main.c: 341: putch(0x40);
  7384  0FE8  27F9  158A         	fcall	i1_putch
  7385                           
  7386                           ;Main.c: 342: putch(0x00);
  7387  0FEA  3000               	movlw	0
  7388  0FEB  27F9  158A         	fcall	i1_putch
  7389                           
  7390                           ;Main.c: 343: putch(relayCommand);
  7391  0FED  0873               	movf	SendRelayOff@relayCommand,w
  7392  0FEE  27F9  158A         	fcall	i1_putch
  7393                           
  7394                           ;Main.c: 344: putch(relayLenght);
  7395  0FF0  3000               	movlw	0
  7396  0FF1  27F9  158A         	fcall	i1_putch
  7397                           
  7398                           ;Main.c: 345: putch(relayCRC);
  7399  0FF3  0871               	movf	SendRelayOff@relayCRC,w
  7400  0FF4  27F9  158A         	fcall	i1_putch
  7401                           
  7402                           ;Main.c: 346: putch(0x0A);
  7403  0FF6  300A               	movlw	10
  7404  0FF7  27F9               	fcall	i1_putch
  7405  0FF8  0008               	return
  7406  0FF9                     __end_of_SendRelayOff:	
  7407  0FF9                     __ptext1570:	
  7408 ;; =============== function _SendRelayOff ends ============
  7409                           
  7410                           
  7411 ;; *************** function i1_putch *****************
  7412 ;; Defined at:
  7413 ;;		line 7 in file "../usart.c"
  7414 ;; Parameters:    Size  Location     Type
  7415 ;;  putch           1    wreg     unsigned char 
  7416 ;; Auto vars:     Size  Location     Type
  7417 ;;  putch           1    0[COMMON] unsigned char 
  7418 ;; Return value:  Size  Location     Type
  7419 ;;		None               void
  7420 ;; Registers used:
  7421 ;;		wreg
  7422 ;; Tracked objects:
  7423 ;;		On entry : 40/20
  7424 ;;		On exit  : 60/0
  7425 ;;		Unchanged: FFF9F/0
  7426 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7427 ;;      Params:         0       0       0       0       0
  7428 ;;      Locals:         1       0       0       0       0
  7429 ;;      Temps:          0       0       0       0       0
  7430 ;;      Totals:         1       0       0       0       0
  7431 ;;Total ram usage:        1 bytes
  7432 ;; Hardware stack levels used:    1
  7433 ;; This function calls:
  7434 ;;		Nothing
  7435 ;; This function is called by:
  7436 ;;		_SendRelayOff
  7437 ;; This function uses a non-reentrant model
  7438 ;;
  7439  0FF9                     i1_putch:	
  7440                           
  7441                           ; Regs used in i1_putch: [wreg]
  7442                           ;i1putch@byte stored from wreg
  7443  0FF9  00F0               	movwf	i1putch@byte
  7444  0FFA                     i1l1438:	
  7445                           ;usart.c: 9: while(!TXIF)
  7446                           
  7447  0FFA  1283               	bcf	3,5	;RP0=0, select bank0
  7448  0FFB  1E0C               	btfss	12,4
  7449  0FFC  2FFA               	goto	i1l1438
  7450                           
  7451                           ;usart.c: 11: TXREG = byte;
  7452  0FFD  0870               	movf	i1putch@byte,w
  7453  0FFE  0099               	movwf	25	;volatile
  7454  0FFF  0008               	return
  7455  1000                     __end_ofi1_putch:	
  7456                           
  7457                           	psect	intentry
  7458  0004                     __pintentry:	
  7459                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7460                           
  7461  0004                     interrupt_function:	
  7462  007E                     saved_w	set	btemp
  7463  0004  00FE               	movwf	btemp
  7464  0005  0E03               	swapf	3,w
  7465  0006  00FA               	movwf	??_isr+3
  7466  0007  0804               	movf	4,w
  7467  0008  00FB               	movwf	??_isr+4
  7468  0009  080A               	movf	10,w
  7469  000A  00FC               	movwf	??_isr+5
  7470  000B  158A  2F17         	ljmp	_isr
  7471                           
  7472                           	psect	text1573
  7473  0000                     __ptext1573:	
  7474 ;; =============== function i1_RelayOff ends ============
  7475                           
  7476  007E                     btemp	set	126	;btemp
  7477  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Sat Dec 15 16:05:48 2018

             ?_i2c_WaitForSCL 0070      __size_of_GetLowGainValue 0029                            _RD 0C60  
                          _WR 0C61                            fsr 0004                 ??_i2c_GetByte 0024  
                  ReadEE@addr 0020                  ___ftadd@exp1 0033                  ___ftadd@exp2 0032  
            i2c_SendByte@byte 0022                  ___ftadd@sign 0031                           l715 0000  
                         l731 0000                           l725 0000                           l718 0000  
                         l734 0000                           l728 0000     __size_of_GetHighGainValue 0029  
                         l793 0E23                           l786 0000                           _CKP 00A4  
                         _GIE 005F                           _RA0 0028                           _RB0 0030  
                         _RB1 0031                           _RB4 0034                           _PR2 0092  
                         _H_L 00B3                           _H_M 00B4                           _H_S 00B5  
                         _L_L 00B6                           _L_M 00B7                           _L_S 00B8  
                         _T_L 00B9                           _T_M 00BB                           _isr 0F17  
                         fsr0 0004                           indf 0000       __size_of_DS18B20Convert 0019  
     __size_of_DS18B20Initial 001F                 ??_i2c_Restart 0020                    _DataHandle 03C3  
               ??_i2c_PutByte 0024  __size_of_i2c_SendAcknowledge 001A                    ReadSN@data 0023  
                ___ftdiv@cntr 004F                  ___ftdiv@sign 0054                          l2060 0000  
                        l2063 0644                          l1441 0000                          l2057 0000  
                        l2065 0668                          l2084 06C2                          l1438 0DD5  
                        l2086 0000                          l2078 0691                          l3402 0000  
                        l4026 0000                          l3410 0000                          l4029 0000  
                        l3413 0000                          l3405 0000                          l3416 0000  
                        l2734 077D                          l3391 053E                          l2743 0000  
                        l2752 0761                          l2737 078E                          l2738 0792  
                        l2746 0731                          l3395 0000                          l2755 075D  
                        l5316 0000                          l2756 0000                          l2748 074D  
                        l2765 0000                          l3398 0000                          l5415 01AD  
                        l5408 0000                          l8001 0000                          l4705 0000  
                        l5450 0000                          l8011 0000                          l8003 0000  
                        l8021 0246                          l8013 0000                          l8005 0000  
                        l8101 06FE                          l5462 0000                          l7303 0000  
                        l8023 0000                          l8015 0000                          l8007 0000  
                        l8103 070C                          l8111 0000                          l7305 0000  
                        l7401 0000                          l8033 0262                          l8025 0000  
                        l8017 0236                          l8009 0000                          l8105 0000  
                        l8201 015B                          l5386 0ED2                          l8035 0000  
                        l8027 0000                          l8043 0000                          l8131 0000  
                        l8115 066A                          l8211 0000                          l5548 0000  
                        l7341 0000                          l7405 07EC                          l7501 0000  
                        l8037 0000                          l8029 0252                          l8053 0000  
                        l8117 0000                          l8141 0000                          l4693 0000  
                        l8213 0000                          l8205 0000                          l7343 0553  
                        l7351 0562                          l8039 0000                          l8055 02B4  
                        l8047 0000                          l8071 0721                          l8063 0000  
                        l8127 0000                          l8119 0000                          l8143 0000  
                        l8215 0000                          l8207 0000                          l8223 0000  
                        l8311 040B                          l8303 03FD                          l7337 0000  
                        l7345 0000                          l7513 0797                          l7505 0783  
                        l7521 0000                          l7601 0000                          l5489 0000  
                        l8049 0000                          l8081 06E5                          l8073 0000  
                        l8129 0000                          l8145 0000                          l8137 0583  
                        l8161 0000                          l4697 0000                          l8209 0000  
                        l8225 0000                          l7339 0000                          l7347 0000  
                        l7515 07A2                          l7531 0171                          l7523 0169  
                        l7611 0000                          l8059 0000                          l8083 0000  
                        l8139 0000                          l8163 0000                          l8155 0000  
                        l8219 00D5                          l8251 0000                          ?_isr 0070  
                        l8501 07D5                          l7349 0000                          l7357 0000  
                        l7509 0794                          l7605 0000                          l7621 02D6  
                        l7613 0000                          l7701 0000                          l8069 0718  
                        l8093 0000                          l8181 0000                          l8165 0000  
                        l8229 0000                          l8253 0000                          l8405 0000  
                        l8261 0000                          l8511 07E0                          l7391 0000  
                        l7383 0000                          l7535 0175                          l7527 016D  
                        l7519 0000                          l7551 030A                          l7607 0000  
                        l7623 02DB                          l7615 02CD                          l7703 0000  
                        l8079 06DA                          l8175 0000                          l8167 0000  
                        l8191 0000                          l8247 0000                          l8239 0000  
                        l8255 0000                          l8407 0000                          l8415 04FF  
                        l8335 042D                          l8327 0425                          l8319 0418  
                        l8271 0000                          l8521 0000                          l8513 0000  
                        l7393 0000                          l7385 0000                          l7545 017C  
                        l7609 03A4                          l7633 0000                          l7625 02E5  
                        l7705 0000                          l7721 0000                          l7713 0615  
                        l7801 0000                          l8177 0000                          l8193 0000  
                        l8257 0000                          l8409 0000                          l8361 0000  
                        l8353 0484                          l8345 0468                          l8273 0439  
                        l8265 03DC                          l8523 0000                          l8515 0000  
                        l8507 0000                          l7395 0000                          l7387 0000  
                        l7539 0179                          l7563 0316                          l7555 030E  
                        l7547 0000                          l7635 0000                          l7627 02EA  
                        l7619 02D1                          l7651 028D                          l7707 0000  
                        l7723 0000                          l7715 0000                          l7731 0000  
                        l7803 0000                          l7811 0000                          l8099 06F3  
                        l8179 0000                          l8195 0000                          l8187 0000  
                        l8259 0000                          l8419 0000                          l8371 0000  
                        l8363 0000                          l8283 03E6                          l8275 03E3  
                        l8525 0000                          l8517 0000                          l7397 0000  
                        l7389 0000                          l7493 0000                          l7573 031D  
                        l7549 0000                          l7581 033D                          l7637 0000  
                        l7629 02EF                          l7709 0000                          l7725 0000  
                        l7717 0000                          l7733 0000                          l7741 0000  
                        l7805 06C4                          l7901 0EAC                          l8197 0000  
                        l8189 0000                          l8381 04C4                          l8373 0000  
                        l8365 0000                          l8357 049D                          l8349 0477  
                        l8285 0000                          l8269 0434                          l8701 0000  
                        l8519 0000                          l7399 0000                          l7495 0000  
                        l7567 031A                          l7559 0312                          l7575 0000  
                        l7639 0000                          l7655 029C                          l7647 0000  
                        l7719 0000                          l7743 0000                          l7751 0000  
                        l7807 0000                          l7831 0000                          l7823 0744  
                        l7903 0EB1                          l8391 0000                          l8375 04B9  
                        l8367 04AC                          l8295 03EF                          l8287 0000  
                        l8711 0000                          l8703 0000                          l7593 0349  
                        l7585 0341                          l7577 0339                          l7657 0000  
                        l7729 0000                          l7745 0000                          l7737 0000  
                        l7761 0000                          l7833 0000                          l7825 0000  
                        l7921 0EDD                          l7913 0EC9                          l7905 0EB6  
                        l8385 0000                          l8393 04D8                          l8721 0E2E  
                        l8713 0000                          l8705 0000                          l7499 0772  
                        l7659 0000                          l7747 0000                          l7739 0000  
                        l7771 0000                          l7763 0000                          l7819 0000  
                        l7851 07C9                          l7835 0000                          l7931 0000  
                        l7915 0ECE                          l7907 0EBA                          l8387 0000  
                        l8379 0000                          l8731 0000                          l8723 0000  
                        l8715 0E1E                          l8707 0000                          l7589 0345  
                        l7749 0000                          l7757 0574                          l7781 0DBB  
                        l7773 0000                          l7765 0000                          l7829 0754  
                        l7853 0000                          l7837 0000                          l7925 0000  
                        l7909 0000                          l8397 0000                          l8741 0000  
                        l8733 0000                          l8709 0000                          l7599 034C  
                        l7759 0000                          l7783 0DCE                          l7767 0000  
                        l7935 0000                          l7927 0EE8                          l7919 0000  
                        l7943 0000                          l8399 04E7                          l8735 0000  
                        l8727 0000                          l8671 0000                          l7777 0000  
                        l7769 0000                          l7785 0000                          l7849 07C0  
                        l7937 0000                          l7929 0000                          l7873 0E79  
                        l7865 0000                          l7961 0000                          l8729 0000  
                        l8681 0000                          l8673 0000                          l8499 0000  
                        l7779 0000                          l7859 0000                          l7939 0F04  
                        l7891 0000                          l7883 0E8F                          l7867 0000  
                        l7971 0000                          l7963 0000                          l7955 0000  
                        l8739 0000                          l8691 0000                          l8683 0000  
                        l8675 0000                          l7789 0000                          l7893 0000  
                        l7885 0000                          l7877 0E80                          l7869 0000  
                        l7981 0000                          l7973 01C0                          l7965 0000  
                        l7957 0000                          l7949 019C                          l8693 0000  
                        l8685 0000                          l8677 0000                          l8669 0000  
                        l7799 0000                          l7895 0E9D                          l7879 0000  
                        l7983 0000                          l7967 0000                          l7959 0000  
                        l8695 0000                          l8687 0000                          l8679 0000  
                        l7897 0000                          l7977 0000                          l7969 0000  
                        l7993 0214                          l8697 0000                          l8689 0000  
                        l7987 0000                          l8699 0000                          l7999 0225  
                        _CREN 00C4                          u3107 06CF                          u3117 0688  
                        u3037 0696                          u1455 07F6                          u3127 061A  
                        u3047 06A4                          u2360 0656                          u3137 0622  
                        u2185 01CE                          u3057 0589                          u2354 064D  
                        u3147 062A                          u2355 064B                          u3067 0591  
                        u3157 0632                          u3077 066D                          u2374 0659  
                        u3167 063A                          u3087 0679                          _PIE1 008C  
                        u2384 0660                          u3177 05FF                          u3097 06C7  
                        u2385 065E                          u2545 03F2                          u3187 0607  
                        u3197 060F                          u2565 0400                          _PEIE 005E  
                        _RCIF 0065                          _PIR1 000C                          _PIR2 000D  
                        _OERR 00C1                          _WREN 0C62                          _TXIF 0064  
              ??_i2c_ReadByte 0021                          _fabs 035E              __end_of_I2CReadH 05E2  
            __end_of_I2CReadL 05C2                          _main 0DDA                  ___ftpack@arg 0020  
                ___ftpack@exp 0023                          btemp 007E                ??_i2c_SendByte 0021  
                        start 000D               __end_ofi1_putch 1000                  ___ftmul@cntr 0044  
                ___ftmul@sign 0045              ??_AutoAdjustGain 0020               __end_of_RelayOn 050C  
                       ??_isr 0077             GetSensorH@adValue 0061                    _GetSensorH 00DC  
                  _GetSensorL 0056                         ?_fabs 0034                         ?_main 00D2  
                       _EEADR 010D               __end_of___ftadd 0F17                         _CFG_H 00B1  
             __end_of___ftdiv 01F3                         _CFG_L 00B2                         _EEPGD 0C67  
             __end_of___ftneg 03C3               __end_of_WriteEE 0557                         _ANSEL 009B  
             __end_of___ftmul 027E                         _T1CON 0010               __end_of_WriteSN 053C  
             __end_of___ftsub 039F                         _T2CON 0012                         i1l802 0F8F  
                       i1l811 0F41                         i1l803 0F2C                         i1l725 0000  
                       i1l813 0F53                         i1l718 0000                         i1l823 0F82  
                       i1l807 0F38                         i1l833 0FAC                         i1l819 0F79  
                       i1l837 0FB9                         i1l789 0000                         _RCREG 001A  
               i2c_ReadByte@i 0023                         _RCSTA 0018                         _TMR1H 000F  
                       _TMR1L 000E                         _SPBRG 0099                         _PORTA 0005  
                       _PORTB 0006                         _TRISA 0085                         _TRISB 0086  
                       _SSPEN 00A5                         _TXREG 0019                         _TXSTA 0098  
                       _Delay 07E9                         _T_Lsb 00BA                         _T_Msb 00BC  
           GetSensorL@adValue 0061             GetSensorH@minCode 0058                         _Reset 076B  
         __end_of_i2c_GetByte 05FB                 ___awtoft@sign 002B                         fabs@d 0034  
__size_of_GetLowDataRateValue 002F                   ReadByte@buf 0022                 ___ftpack@sign 0024  
             i2c_GetByte@byte 0024                         _putch 0DD3               i2c_GetByte@more 0026  
              __pbitbssCOMMON 03E8                         pclath 000A             GetSensorL@minCode 0058  
                 ?i1_RelayOff 0070           __end_of_i2c_Restart 0615                         status 0003  
         _i2c_ReadAcknowledge 0583           __end_of_i2c_PutByte 05EA                         wtemp0 007E  
               i2c_SendByte@i 0023                    _FormatData 000F                  __end_of_fabs 0379  
                __end_of_main 0E56              __end_of_i2c_Stop 0641              __end_of_ReadByte 07D0  
    __end_of_DS18B20ReadFlash 0710                 ??_SendService 0021          ?_i2c_ReadAcknowledge 0070  
                      ??_fabs 0037                        ??_main 0070              __end_of_RelayOff 055A  
           ??_GetLowGainValue 0022                        ?_Delay 0020                    ResetUart@i 00B0  
                      ?_Reset 0070                   ?_DataHandle 0070                        _ADCON0 001F  
                      _ADCON1 009F                        _EEDATA 010C                        _CCPR1H 0016  
                      _CCPR1L 0015                        _EECON2 018D              __end_of___awtoft 02C5  
                      ?_putch 0070              __end_of___ftpack 0303              __end_of___lbtoft 0388  
                      i1l1441 0000                        i1l1438 0FFA                        Delay@k 00A8  
                      Delay@t 0020                        i1l8531 0000                        i1l8541 0000  
                      i1l8533 0000                        i1l8621 0000                        i1l8613 0000  
                      i1l8543 0000                        i1l8535 0000                        i1l8527 0000  
                      i1l8623 0000                        i1l8631 0FB5                        i1l8545 0000  
                      i1l8537 0000                        i1l8529 0000                        i1l8633 0000  
                      i1l8625 0000                        i1l8609 0F8B                        i1l8561 0F29  
                      i1l8635 0000                        i1l8651 0000                        i1l8547 0000  
                      i1l8539 0000                        i1l8627 0FAE                        i1l8661 0000  
                      i1l8653 0000                        i1l8645 0000                        i1l8637 0000  
                      i1l8629 0000                        i1l8573 0000                        i1l8557 0000  
                      i1l8549 0000                        i1l8663 0000                        i1l8655 0000  
                      i1l8639 0FC8                        i1l8591 0000                        i1l8583 0F4D  
                      i1l8575 0000                        i1l8567 0000                        i1l8559 0000  
                      _INTCON 000B                        i1l8657 0000                        i1l8649 0FD3  
                      i1l8665 0000                        i1l8585 0F51                        i1l8659 0000  
                      i1l8595 0F75                        i1l8579 0000              __end_of___lwtoft 0203  
                      u288_25 0F71                     ??i1_putch 0070                        _TMR1IE 0460  
                      _TRISA0 0428                        _TRISB1 0431                        _TRISB2 0432  
                      _TRISB4 0434                        _TRISB5 0435                        _SSPCON 0014  
      i2c_ReadAcknowledge@ack 0022            __size_of_ReadQitty 0003                        _ReadEE 055A  
                      _ReadSN 0571                     ??_RelayOn 0020                        Reset@i 0021  
                      Reset@k 0020   GetLowDataRateValue@dataRate 0023                        ___ftge 027E  
                   ??___ftadd 002E                     ??___ftdiv 004C                     ??___ftneg 0023  
                   ??_WriteEE 0021                     ??___ftmul 003D                     ??___ftsub 004C  
                   ??_WriteSN 0023                  ?_timer1_init 0070                        _rcvCRC 00BD  
                      _memcpy 039F                        _sndCRC 00C1                   ?_GetSensorH 0055  
                 ?_GetSensorL 0055            __size_of_ResetUart 0019         ??_i2c_ReadAcknowledge 0021  
                 _i2c_GetByte 05EA          __end_of_i2c_ReadByte 06B8                        clrloop 0D7F  
            _GetHighGainValue 0162         ___ftmul@f3_as_product 0041           __size_ofi1_RelayOff 0003  
              _DS18B20Convert 06D2                     ?_I2CReadH 0070                     ?_I2CReadL 0070  
               ?_SendRelayOff 0070                _DS18B20Initial 0710          __end_of_i2c_SendByte 0683  
                      saved_w 007E           __end_of_SendService 0DD3                   _i2c_Restart 05FB  
                 _i2c_PutByte 05E2                  ?i1_ResetUart 0070           GetLowGainValue@gain 0022  
                  ___ftadd@f1 0028                    ___ftadd@f2 002B                    ___ftge@ff1 0020  
                  ___ftge@ff2 0023            __size_of_WriteByte 003C              ??_i2c_WaitForSCL 0020  
                  ___ftdiv@f1 0049                    ___ftdiv@f2 0046                    ___ftdiv@f3 0050  
                  ___ftneg@f1 0020                    ___awtoft@c 0028                    ___lbtoft@c 002B  
                 ?_FormatData 0070                 __end_of_Delay 07FC                    ___ftmul@f1 0037  
                  ___ftmul@f2 003A                    ___ftsub@f1 0049                    ___ftsub@f2 0046  
              __pcstackCOMMON 0070                 __end_of_Reset 07A4           _i2c_SendAcknowledge 06B8  
         __size_of_DataHandle 0146                    _WriteQitty 0569                   i1putch@byte 0070  
               __end_of_putch 0DDA        __end_of_DS18B20Convert 06EB                    ___lwtoft@c 0028  
      __end_of_DS18B20Initial 072F             __end_of_ReadQitty 035E                ??_SendRelayOff 0071  
                  ??_I2CReadH 0027                    ??_I2CReadL 0027                       ??_Delay 0022  
                     ??_Reset 0020          ?_i2c_SendAcknowledge 0070                       ??_putch 0020  
                  __pbssBANK1 00A0                     ?_i2c_Stop 0070                  WriteByte@dat 0020  
           __end_of_ResetUart 07E9                     ?_ReadByte 0070           __size_of_GetSensorH 0086  
         __size_of_GetSensorL 0086                     ?_RelayOff 0070                       ?_ReadEE 0070  
                  WriteByte@i 0022                    WriteByte@j 0021                       ?_ReadSN 0070  
                  _delay_flag 00AA                    __pmaintext 0DDA                       ?___ftge 0020  
         _GetLowDataRateValue 032C                    __pintentry 0004                       _CCP1CON 0017  
                     ?_memcpy 0020                    __ptext1520 05C2                    __ptext1521 000F  
                  __ptext1530 06EB                    __ptext1522 05EA                    __ptext1531 06D2  
                  __ptext1523 05E2                    __ptext1540 07A4                    __ptext1532 0710  
                  __ptext1524 0388                    __ptext1541 072F                    __ptext1533 01F3  
                  __ptext1525 0056                    __ptext1517 0000                    __ptext1550 05FB  
                  __ptext1542 06B8                    __ptext1534 02AA                    __ptext1526 00DC  
                  __ptext1518 03C3                    __ptext1551 027E                    __ptext1543 0683  
                  __ptext1535 0379                    __ptext1527 068F                    __ptext1519 05A2  
                  __ptext1560 0D92                    __ptext1552 03BB                    __ptext1544 0DA4  
                  __ptext1536 0203                    __ptext1528 0583                    __ptext1561 0DD3  
                  __ptext1553 02C5                    __ptext1545 0571                    __ptext1537 018B  
                  __ptext1529 0641                    __ptext1570 0FF9                    __ptext1562 055A  
                  __ptext1554 039F                    __ptext1546 050C                    __ptext1538 0E56  
                  __ptext1571 0FC2                    __ptext1563 053C                    __ptext1555 032C  
                  __ptext1547 035B                    __ptext1539 035E                    __ptext1572 0FDC  
                  __ptext1564 07FC                    __ptext1556 0303                    __ptext1548 0569  
                  __ptext1573 0000                    __ptext1565 07D0                    __ptext1557 0162  
                  __ptext1549 0615                    __ptext1566 0557                    __ptext1558 076B  
                  __ptext1567 0509                    __ptext1559 07E9                    __ptext1568 0F17  
                  __ptext1569 0FDF                     ?___awtoft 0028                     ?___ftpack 0020  
                   ?___lbtoft 0028               ?_DS18B20Convert 0070                   _SendService 0DA4  
                   ?___lwtoft 0028               ?_DS18B20Initial 0070             __end_of_WriteByte 076B  
       ??_i2c_SendAcknowledge 0020                 FormatData@low 0069           __size_of_FormatData 0047  
        ?_GetLowDataRateValue 0020                       ReadSN@i 0024                    ??_i2c_Stop 0020  
                     i1_putch 0FF9                    ??_ReadByte 0020                  ??i1_RelayOff 0070  
                  ??_RelayOff 0020                       _RelayOn 0509               __size_of_ReadEE 000F  
             __size_of_ReadSN 0012               _GetLowGainValue 0303               __size_of___ftge 002C  
       __size_of_i2c_ReadByte 0029                       ___ftadd 0E56                       ___ftdiv 018B  
                     ___ftneg 03BB                       _WriteEE 053C                   ?_WriteQitty 0070  
                     ___ftmul 0203                       ___ftsub 0388                       _WriteSN 050C  
           ?_DS18B20ReadFlash 0070         __size_of_i2c_SendByte 0042               __size_of_memcpy 001C  
                  ??___awtoft 002B                    ??___ftpack 0025                    ??___lbtoft 002B  
                     _idleCnt 00AC          __size_of_timer1_init 0012                    ??___lwtoft 002B  
          ??_DS18B20ReadFlash 0024                     _T1CONbits 0010            __end_ofi1_RelayOff 0FDF  
                __size_of_isr 00AB                       _rcvData 00A0                    _rcvCommand 00BE  
                     _sndData 00C5                  ??_DataHandle 00CE         ??_GetLowDataRateValue 0022  
        end_of_initialization 0D8F                    _sndCommand 00C2                    _rcvStartOk 06B0  
                     memcpy@d 0025                       memcpy@n 0021                       memcpy@s 0026  
   i2c_SendAcknowledge@status 0021          __size_ofi1_ResetUart 001A                  _i2c_ReadByte 068F  
    __end_of_GetHighGainValue 018B          __end_of_SendRelayOff 0FF9                  _i2c_SendByte 0641  
             FormatData@value 006D            __end_of_DataHandle 0509                  ??_GetSensorH 0058  
                ??_GetSensorL 0058                  ?_i2c_GetByte 0070                     _PORTBbits 0006  
            DataHandle@snNumH 00D0              DataHandle@snNumL 00D1       __size_of_AutoAdjustGain 0001  
                   _TRISBbits 0086             __size_of_I2CReadH 0020             __size_of_I2CReadL 0020  
                ?_i2c_Restart 0070                  ?_i2c_PutByte 0070                     ReadEE@num 0021  
         __size_of_WriteQitty 0008                   ___ftdiv@exp 0053       __end_of_GetLowGainValue 032C  
          __end_of_GetSensorH 0162            __end_of_GetSensorL 00DC                     ReadByte@i 0020  
                   ReadByte@j 0023                  ??_FormatData 0066                   ___ftmul@exp 0040  
 __end_of_i2c_ReadAcknowledge 05A2                __end_of_ReadEE 0569                __end_of_ReadSN 0583  
               _rcvTerminalOk 03ED          SendRelayOff@relayCRC 0071                __end_of___ftge 02AA  
              _timer1_counter 00AE                __end_of_memcpy 03BB                 __pbitbssBANK1 06B0  
         start_initialization 0D86                 GetSensorH@pga 005B                 GetSensorH@ret 0063  
                 __end_of_isr 0FC2                 GetSensorL@pga 005B                 GetSensorL@ret 0063  
                   _ReadQitty 035B            __end_of_FormatData 0056               _GetSensorH$6671 005E  
             _GetSensorL$6672 005E             __size_of_i2c_Stop 002C             __size_of_ReadByte 002C  
                    ??_ReadEE 0020                     _ResetUart 07D0                      ??_ReadSN 0022  
           __size_of_RelayOff 0003              ??_DS18B20Convert 0024                      ??___ftge 0026  
            ??_DS18B20Initial 0024                      ??_memcpy 0023                  ?_SendService 0070  
                 WriteEE@addr 0021                   WriteEE@data 0020             __size_of___awtoft 001B  
           __size_of___ftpack 003E             __size_of___lbtoft 000F             __size_of___lwtoft 0010  
               __pcstackBANK0 0020                 __pcstackBANK1 00CE                     _WriteByte 072F  
                  ?_ReadQitty 0070                   WriteSN@numH 0023                   WriteSN@numL 0022  
       __size_of_SendRelayOff 001A      SendRelayOff@relayCommand 0073          GetHighGainValue@gain 0022  
                    ?i1_putch 0070              ?_GetLowGainValue 0020                    ?_ResetUart 0070  
                    ?_RelayOn 0070                      ?___ftadd 0028                  ??_WriteQitty 0022  
                    ?___ftdiv 0046                      ?___ftneg 0020                      ?_WriteEE 0020  
                    ?___ftmul 0037                      ?___ftsub 0046                      ?_WriteSN 0022  
     __size_of_i2c_WaitForSCL 000C               i2c_PutByte@data 0024   __end_of_i2c_SendAcknowledge 06D2  
                    _I2CReadH 05C2                      _I2CReadL 05A2          __size_of_i2c_GetByte 0011  
              _AutoAdjustGain 07FC                __size_of_Delay 0013                  _SendRelayOff 0FDF  
              __size_of_Reset 0039                    ?_WriteByte 0070                     _rcvAddrOk 03E8  
                   _rcvDataOk 03EB                  _rcvCommandOk 03EA                __size_of_putch 0007  
   __size_of_DS18B20ReadFlash 0025          __size_of_i2c_Restart 001A               WriteQitty@qitty 0022  
        __size_of_i2c_PutByte 0008                     _rcvLength 00C0            __end_of_WriteQitty 0571  
           interrupt_function 0004                     _sndLength 00C4             ?_GetHighGainValue 0020  
                    _PIR1bits 000C              i2c_ReadByte@byte 0022            ??_GetHighGainValue 0022  
              FormatData@data 006C                FormatData@high 0066                 ??_timer1_init 0020  
      __end_of_AutoAdjustGain 07FD   __end_of_GetLowDataRateValue 035B                   ??_ReadQitty 0022  
               ??i1_ResetUart 0070                      _i2c_Stop 0615                      _ReadByte 07A4  
            __size_ofi1_putch 0007                      _RelayOff 0557                   ??_ResetUart 0020  
            __size_of_RelayOn 0003              __size_of___ftadd 00C1              __size_of___ftdiv 0068  
            __size_of___ftneg 0008              __size_of_WriteEE 001B              __size_of___ftmul 007B  
            __size_of_WriteSN 0030              __size_of___ftsub 0017                      ___awtoft 02AA  
                    ___ftpack 02C5                      ___lbtoft 0379                      ___lwtoft 01F3  
             ?_AutoAdjustGain 0070           __end_of_timer1_init 0DA4          __size_of_SendService 002F  
                 ??_WriteByte 0020                      _rcvCRCOk 03E9                 __size_of_fabs 001B  
               __size_of_main 007C                      _rcvCount 00BF                      _sndCount 00C3  
         __end_ofi1_ResetUart 0FDC                      clear_ram 0D7E                   _rcvLengthOk 03EC  
                    _unitAddr 00CD                _i2c_WaitForSCL 0683                      main@argc 00D2  
                    main@argv 00D4  __size_of_i2c_ReadAcknowledge 001F                     putch@byte 0020  
                    memcpy@d1 0024                      memcpy@s1 0020              _DS18B20ReadFlash 06EB  
                    intlevel1 0000        __end_of_i2c_WaitForSCL 068F                   _timer1_init 0D92  
           DS18B20ReadFlash@i 0024                   i1_ResetUart 0FC2               DS18B20Convert@i 0024  
                  i1_RelayOff 0FDC                 ?_i2c_ReadByte 0070               DS18B20Initial@i 0024  
               ?_i2c_SendByte 0070  
