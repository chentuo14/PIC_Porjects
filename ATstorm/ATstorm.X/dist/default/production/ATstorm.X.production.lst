

HI-TECH Software PIC PRO Macro Assembler V9.83 build 10920 
                                                                                               Thu Sep 06 14:54:35 2018

HI-TECH Software Omniscient Code Generator (PRO mode) build 10920
     1                           	processor	16F88
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	config,global,class=CONFIG,delta=2
     5                           	psect	text1054,local,class=CODE,delta=2
     6                           	psect	cinit,global,class=CODE,delta=2
     7                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1
     8                           	psect	bitbssBANK0,global,bit,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,delta=2
    14                           	psect	text1060,local,class=CODE,delta=2
    15                           	psect	text1063,local,class=CODE,delta=2
    16                           	psect	text1065,local,class=CODE,delta=2
    17                           	psect	text1070,local,class=CODE,delta=2
    18                           	psect	text1076,local,class=CODE,delta=2
    19                           	psect	text1077,local,class=CODE,delta=2
    20                           	psect	text1081,local,class=CODE,delta=2
    21                           	psect	text1082,local,class=CODE,delta=2
    22                           	psect	text1083,local,class=CODE,delta=2
    23                           	psect	text1084,local,class=CODE,delta=2
    24                           	psect	text1085,local,class=CODE,delta=2
    25                           	psect	intentry,global,class=CODE,delta=2
    26                           	psect	text1089,local,class=CODE,delta=2
    27                           	psect	text1090,local,class=CODE,delta=2
    28                           	dabs	1,0x7E,2
    29  000A                     	;#
    30                           
    31                           	psect	config
    32  2007  FF2E               	dw	65326	;#
    33  2008  FFFC               	dw	65532	;#
    34                           
    35                           	psect	text1054
    36  0000                     __ptext1054:	
    37  001F                     _ADCON0	set	31
    38  0017                     _CCP1CON	set	23
    39  0016                     _CCPR1H	set	22
    40  0015                     _CCPR1L	set	21
    41  000B                     _INTCON	set	11
    42  000C                     _PIR1	set	12
    43  000C                     _PIR1bits	set	12
    44  000D                     _PIR2	set	13
    45  0005                     _PORTA	set	5
    46  0006                     _PORTB	set	6
    47  0006                     _PORTBbits	set	6
    48  001A                     _RCREG	set	26
    49  0018                     _RCSTA	set	24
    50  0014                     _SSPCON	set	20
    51  0010                     _T1CON	set	16
    52  0010                     _T1CONbits	set	16
    53  0012                     _T2CON	set	18
    54  000F                     _TMR1H	set	15
    55  000E                     _TMR1L	set	14
    56  0019                     _TXREG	set	25
    57  00A4                     _CKP	set	164
    58  00C4                     _CREN	set	196
    59  005F                     _GIE	set	95
    60  00C1                     _OERR	set	193
    61  005E                     _PEIE	set	94
    62  0028                     _RA0	set	40
    63  0030                     _RB0	set	48
    64  0031                     _RB1	set	49
    65  0034                     _RB4	set	52
    66  0065                     _RCIF	set	101
    67  00A5                     _SSPEN	set	165
    68  0064                     _TXIF	set	100
    69  009F                     _ADCON1	set	159
    70  009B                     _ANSEL	set	155
    71  008C                     _PIE1	set	140
    72  0092                     _PR2	set	146
    73  0099                     _SPBRG	set	153
    74  0085                     _TRISA	set	133
    75  0086                     _TRISB	set	134
    76  0086                     _TRISBbits	set	134
    77  0098                     _TXSTA	set	152
    78  0460                     _TMR1IE	set	1120
    79  0428                     _TRISA0	set	1064
    80  0431                     _TRISB1	set	1073
    81  0432                     _TRISB2	set	1074
    82  0434                     _TRISB4	set	1076
    83  0435                     _TRISB5	set	1077
    84  010D                     _EEADR	set	269
    85  010C                     _EEDATA	set	268
    86  018D                     _EECON2	set	397
    87  0C67                     _EEPGD	set	3175
    88  0C60                     _RD	set	3168
    89  0C61                     _WR	set	3169
    90  0C62                     _WREN	set	3170
    91                           
    92                           	psect	cinit
    93  0581                     start_initialization:	
    94                           
    95                           ; Clear objects allocated to BITCOMMON
    96  0581  01FD               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
    97                           
    98                           ; Clear objects allocated to BITBANK0
    99  0582  01DB               	clrf	(__pbitbssBANK0/(0+8))& (0+127)
   100                           
   101                           ; Clear objects allocated to BANK0
   102  0583  1383               	bcf	3,7	;select IRP bank0
   103  0584  3020               	movlw	low __pbssBANK0
   104  0585  0084               	movwf	4
   105  0586  304E               	movlw	low (__pbssBANK0+46)
   106  0587  118A  258C         	fcall	clear_ram
   107  0589                     end_of_initialization:	
   108                           ;End of C runtime variable initialization code
   109                           
   110  0589  0183               	clrf	3
   111  058A  118A  2C9F         	ljmp	_main	;jump to C main() function
   112                           
   113                           	psect	bitbssCOMMON
   114  03E8                     __pbitbssCOMMON:	
   115  03E8                     _rcvAddrOk:	
   116  03E8                     	ds	1
   117  03E9                     _rcvCRCOk:	
   118  03E9                     	ds	1
   119  03EA                     _rcvCommandOk:	
   120  03EA                     	ds	1
   121  03EB                     _rcvDataOk:	
   122  03EB                     	ds	1
   123  03EC                     _rcvLengthOk:	
   124  03EC                     	ds	1
   125  03ED                     _rcvTerminalOk:	
   126  03ED                     	ds	1
   127                           
   128                           	psect	bitbssBANK0
   129  02D8                     __pbitbssBANK0:	
   130  02D8                     _rcvStartOk:	
   131  02D8                     	ds	1
   132                           
   133                           	psect	bssBANK0
   134  0020                     __pbssBANK0:	
   135  0020                     _rcvData:	
   136  0020                     	ds	8
   137  0028                     Delay@k:	
   138  0028                     	ds	2
   139  002A                     _delay_flag:	
   140  002A                     	ds	2
   141  002C                     _idleCnt:	
   142  002C                     	ds	2
   143  002E                     _timer1_counter:	
   144  002E                     	ds	2
   145  0030                     ResetUart@i:	
   146  0030                     	ds	1
   147  0031                     _CFG_H:	
   148  0031                     	ds	1
   149  0032                     _CFG_L:	
   150  0032                     	ds	1
   151  0033                     _H_L:	
   152  0033                     	ds	1
   153  0034                     _H_M:	
   154  0034                     	ds	1
   155  0035                     _H_S:	
   156  0035                     	ds	1
   157  0036                     _L_L:	
   158  0036                     	ds	1
   159  0037                     _L_M:	
   160  0037                     	ds	1
   161  0038                     _L_S:	
   162  0038                     	ds	1
   163  0039                     _T_L:	
   164  0039                     	ds	1
   165  003A                     _T_Lsb:	
   166  003A                     	ds	1
   167  003B                     _T_M:	
   168  003B                     	ds	1
   169  003C                     _T_Msb:	
   170  003C                     	ds	1
   171  003D                     _rcvCRC:	
   172  003D                     	ds	1
   173  003E                     _rcvCommand:	
   174  003E                     	ds	1
   175  003F                     _rcvCount:	
   176  003F                     	ds	1
   177  0040                     _rcvLength:	
   178  0040                     	ds	1
   179  0041                     _sndCRC:	
   180  0041                     	ds	1
   181  0042                     _sndCommand:	
   182  0042                     	ds	1
   183  0043                     _sndCount:	
   184  0043                     	ds	1
   185  0044                     _sndLength:	
   186  0044                     	ds	1
   187  0045                     _sndData:	
   188  0045                     	ds	8
   189  004D                     _unitAddr:	
   190  004D                     	ds	1
   191                           
   192                           	psect	clrtext
   193  058C                     clear_ram:	
   194                           ;	Called with FSR containing the base address, and
   195                           ;	W with the last address+1
   196                           
   197  058C  0064               	clrwdt	;clear the watchdog before getting into this loop
   198  058D                     clrloop:	
   199  058D  0180               	clrf	0	;clear RAM location pointed to by FSR
   200  058E  0A84               	incf	4,f	;increment pointer
   201  058F  0604               	xorwf	4,w	;XOR with final address
   202  0590  1903               	btfsc	3,2	;have we reached the end yet?
   203  0591  3400               	retlw	0	;all done for this memory range, return
   204  0592  0604               	xorwf	4,w	;XOR again to restore value
   205  0593  2D8D               	goto	clrloop	;do the next byte
   206                           
   207                           	psect	cstackCOMMON
   208  0070                     __pcstackCOMMON:	
   209  0070                     ?_i2c_Restart:	
   210  0070                     ?_i2c_Stop:	
   211                           ; 0 bytes @ 0x0
   212                           
   213  0070                     ?_ReadSN:	
   214                           ; 0 bytes @ 0x0
   215                           
   216  0070                     ?_putch:	
   217                           ; 0 bytes @ 0x0
   218                           
   219  0070                     ?_DS18B20Initial:	
   220                           ; 0 bytes @ 0x0
   221                           
   222  0070                     ?_timer1_init:	
   223                           ; 0 bytes @ 0x0
   224                           
   225  0070                     ?_DS18B20ReadFlash:	
   226                           ; 0 bytes @ 0x0
   227                           
   228  0070                     ?_RelayOn:	
   229                           ; 0 bytes @ 0x0
   230                           
   231  0070                     ?_RelayOff:	
   232                           ; 0 bytes @ 0x0
   233                           
   234  0070                     ?_ResetUart:	
   235                           ; 0 bytes @ 0x0
   236                           
   237  0070                     ?_I2CReadH:	
   238                           ; 0 bytes @ 0x0
   239                           
   240  0070                     ?_I2CReadL:	
   241                           ; 0 bytes @ 0x0
   242                           
   243  0070                     ?_AutoAdjustGain:	
   244                           ; 0 bytes @ 0x0
   245                           
   246  0070                     ?_DataHandle:	
   247                           ; 0 bytes @ 0x0
   248                           
   249  0070                     ?_SendService:	
   250                           ; 0 bytes @ 0x0
   251                           
   252  0070                     ?_SendRelayOff:	
   253                           ; 0 bytes @ 0x0
   254                           
   255  0070                     ?_isr:	
   256                           ; 0 bytes @ 0x0
   257                           
   258  0070                     ?_i2c_SendAcknowledge:	
   259                           ; 0 bytes @ 0x0
   260                           
   261  0070                     ?_WriteByte:	
   262                           ; 0 bytes @ 0x0
   263                           
   264  0070                     ?i1_RelayOff:	
   265                           ; 0 bytes @ 0x0
   266                           
   267  0070                     ??i1_RelayOff:	
   268                           ; 0 bytes @ 0x0
   269                           
   270  0070                     ?i1_ResetUart:	
   271                           ; 0 bytes @ 0x0
   272                           
   273  0070                     ??i1_ResetUart:	
   274                           ; 0 bytes @ 0x0
   275                           
   276  0070                     ?i1_putch:	
   277                           ; 0 bytes @ 0x0
   278                           
   279  0070                     ??i1_putch:	
   280                           ; 0 bytes @ 0x0
   281                           
   282  0070                     ?_i2c_PutByte:	
   283                           ; 0 bytes @ 0x0
   284                           
   285  0070                     ?_i2c_GetByte:	
   286                           ; 1 bytes @ 0x0
   287                           
   288  0070                     ?_ReadEE:	
   289                           ; 1 bytes @ 0x0
   290                           
   291  0070                     ?_DS18B20Convert:	
   292                           ; 1 bytes @ 0x0
   293                           
   294  0070                     ?_i2c_WaitForSCL:	
   295                           ; 1 bytes @ 0x0
   296                           
   297  0070                     ?_i2c_SendByte:	
   298                           ; 1 bytes @ 0x0
   299                           
   300  0070                     ?_i2c_ReadAcknowledge:	
   301                           ; 1 bytes @ 0x0
   302                           
   303  0070                     ?_i2c_ReadByte:	
   304                           ; 1 bytes @ 0x0
   305                           
   306  0070                     ?_Reset:	
   307                           ; 1 bytes @ 0x0
   308                           
   309  0070                     ?_ReadByte:	
   310                           ; 1 bytes @ 0x0
   311                           
   312  0070                     i1putch@byte:	
   313                           ; 1 bytes @ 0x0
   314                           
   315                           
   316                           ; 1 bytes @ 0x0
   317  0070                     	ds	1
   318  0071                     ??_SendRelayOff:	
   319  0071                     SendRelayOff@relayCRC:	
   320                           ; 0 bytes @ 0x1
   321                           
   322                           
   323                           ; 2 bytes @ 0x1
   324  0071                     	ds	2
   325  0073                     SendRelayOff@relayCommand:	
   326                           
   327                           ; 2 bytes @ 0x3
   328  0073                     	ds	4
   329  0077                     ??_isr:	
   330                           
   331                           ; 0 bytes @ 0x7
   332  0077                     	ds	6
   333                           
   334                           	psect	cstackBANK0
   335  004E                     __pcstackBANK0:	
   336  004E                     ??_i2c_Restart:	
   337  004E                     ??_i2c_Stop:	
   338                           ; 0 bytes @ 0x0
   339                           
   340  004E                     ?_WriteEE:	
   341                           ; 0 bytes @ 0x0
   342                           
   343  004E                     ??_ReadEE:	
   344                           ; 0 bytes @ 0x0
   345                           
   346  004E                     ??_putch:	
   347                           ; 0 bytes @ 0x0
   348                           
   349  004E                     ??_timer1_init:	
   350                           ; 0 bytes @ 0x0
   351                           
   352  004E                     ?_Delay:	
   353                           ; 0 bytes @ 0x0
   354                           
   355  004E                     ??_i2c_WaitForSCL:	
   356                           ; 0 bytes @ 0x0
   357                           
   358  004E                     ??_RelayOn:	
   359                           ; 0 bytes @ 0x0
   360                           
   361  004E                     ??_RelayOff:	
   362                           ; 0 bytes @ 0x0
   363                           
   364  004E                     ??_ResetUart:	
   365                           ; 0 bytes @ 0x0
   366                           
   367  004E                     ??_AutoAdjustGain:	
   368                           ; 0 bytes @ 0x0
   369                           
   370  004E                     ??_i2c_SendAcknowledge:	
   371                           ; 0 bytes @ 0x0
   372                           
   373  004E                     ??_Reset:	
   374                           ; 0 bytes @ 0x0
   375                           
   376  004E                     ??_WriteByte:	
   377                           ; 0 bytes @ 0x0
   378                           
   379  004E                     ??_ReadByte:	
   380                           ; 0 bytes @ 0x0
   381                           
   382  004E                     putch@byte:	
   383                           ; 0 bytes @ 0x0
   384                           
   385  004E                     Reset@k:	
   386                           ; 1 bytes @ 0x0
   387                           
   388  004E                     WriteByte@dat:	
   389                           ; 1 bytes @ 0x0
   390                           
   391  004E                     WriteEE@data:	
   392                           ; 1 bytes @ 0x0
   393                           
   394  004E                     ReadEE@addr:	
   395                           ; 1 bytes @ 0x0
   396                           
   397  004E                     ReadByte@i:	
   398                           ; 1 bytes @ 0x0
   399                           
   400  004E                     Delay@t:	
   401                           ; 2 bytes @ 0x0
   402                           
   403                           
   404                           ; 2 bytes @ 0x0
   405  004E                     	ds	1
   406  004F                     ??_WriteEE:	
   407  004F                     ??_SendService:	
   408                           ; 0 bytes @ 0x1
   409                           
   410  004F                     ??_i2c_SendByte:	
   411                           ; 0 bytes @ 0x1
   412                           
   413  004F                     ??_i2c_ReadAcknowledge:	
   414                           ; 0 bytes @ 0x1
   415                           
   416  004F                     ??_i2c_ReadByte:	
   417                           ; 0 bytes @ 0x1
   418                           
   419  004F                     i2c_SendAcknowledge@status:	
   420                           ; 0 bytes @ 0x1
   421                           
   422  004F                     WriteByte@j:	
   423                           ; 1 bytes @ 0x1
   424                           
   425  004F                     WriteEE@addr:	
   426                           ; 1 bytes @ 0x1
   427                           
   428  004F                     ReadEE@num:	
   429                           ; 1 bytes @ 0x1
   430                           
   431  004F                     Reset@i:	
   432                           ; 1 bytes @ 0x1
   433                           
   434                           
   435                           ; 2 bytes @ 0x1
   436  004F                     	ds	1
   437  0050                     ?_WriteSN:	
   438  0050                     ??_ReadSN:	
   439                           ; 0 bytes @ 0x2
   440                           
   441  0050                     ??_Delay:	
   442                           ; 0 bytes @ 0x2
   443                           
   444  0050                     i2c_SendByte@byte:	
   445                           ; 0 bytes @ 0x2
   446                           
   447  0050                     i2c_ReadAcknowledge@ack:	
   448                           ; 1 bytes @ 0x2
   449                           
   450  0050                     i2c_ReadByte@byte:	
   451                           ; 1 bytes @ 0x2
   452                           
   453  0050                     ReadByte@buf:	
   454                           ; 1 bytes @ 0x2
   455                           
   456  0050                     WriteSN@numL:	
   457                           ; 1 bytes @ 0x2
   458                           
   459  0050                     WriteByte@i:	
   460                           ; 1 bytes @ 0x2
   461                           
   462                           
   463                           ; 2 bytes @ 0x2
   464  0050                     	ds	1
   465  0051                     ??_WriteSN:	
   466  0051                     i2c_SendByte@i:	
   467                           ; 0 bytes @ 0x3
   468                           
   469  0051                     i2c_ReadByte@i:	
   470                           ; 1 bytes @ 0x3
   471                           
   472  0051                     ReadByte@j:	
   473                           ; 1 bytes @ 0x3
   474                           
   475  0051                     WriteSN@numH:	
   476                           ; 1 bytes @ 0x3
   477                           
   478  0051                     ReadSN@data:	
   479                           ; 1 bytes @ 0x3
   480                           
   481                           
   482                           ; 1 bytes @ 0x3
   483  0051                     	ds	1
   484  0052                     ??_i2c_PutByte:	
   485  0052                     ??_i2c_GetByte:	
   486                           ; 0 bytes @ 0x4
   487                           
   488  0052                     ??_DS18B20Initial:	
   489                           ; 0 bytes @ 0x4
   490                           
   491  0052                     ??_DS18B20Convert:	
   492                           ; 0 bytes @ 0x4
   493                           
   494  0052                     ??_DS18B20ReadFlash:	
   495                           ; 0 bytes @ 0x4
   496                           
   497  0052                     i2c_PutByte@data:	
   498                           ; 0 bytes @ 0x4
   499                           
   500  0052                     ReadSN@i:	
   501                           ; 1 bytes @ 0x4
   502                           
   503  0052                     i2c_GetByte@byte:	
   504                           ; 1 bytes @ 0x4
   505                           
   506  0052                     DS18B20Convert@i:	
   507                           ; 2 bytes @ 0x4
   508                           
   509  0052                     DS18B20ReadFlash@i:	
   510                           ; 2 bytes @ 0x4
   511                           
   512  0052                     DS18B20Initial@i:	
   513                           ; 2 bytes @ 0x4
   514                           
   515                           
   516                           ; 2 bytes @ 0x4
   517  0052                     	ds	1
   518  0053                     ??_DataHandle:	
   519                           
   520                           ; 0 bytes @ 0x5
   521  0053                     	ds	1
   522  0054                     i2c_GetByte@more:	
   523                           
   524                           ; 1 bytes @ 0x6
   525  0054                     	ds	1
   526  0055                     ??_I2CReadH:	
   527  0055                     ??_I2CReadL:	
   528                           ; 0 bytes @ 0x7
   529                           
   530  0055                     DataHandle@snNumH:	
   531                           ; 0 bytes @ 0x7
   532                           
   533                           
   534                           ; 1 bytes @ 0x7
   535  0055                     	ds	1
   536  0056                     DataHandle@snNumL:	
   537                           
   538                           ; 1 bytes @ 0x8
   539  0056                     	ds	1
   540  0057                     ?_main:	
   541  0057                     main@argc:	
   542                           ; 2 bytes @ 0x9
   543                           
   544                           
   545                           ; 2 bytes @ 0x9
   546  0057                     	ds	2
   547  0059                     main@argv:	
   548                           
   549                           ; 2 bytes @ 0xB
   550  0059                     	ds	2
   551  005B                     ??_main:	
   552                           
   553                           	psect	maintext
   554  049F                     __pmaintext:	
   555                           ; 0 bytes @ 0xD
   556 ;;Data sizes: Strings 0, constant 0, data 0, bss 46, persistent 0 stack 0
   557 ;;Auto spaces:   Size  Autos    Used
   558 ;; COMMON          14     13      14
   559 ;; BANK0           80     13      60
   560 ;; BANK1           80      0       0
   561 ;; BANK3           96      0       0
   562 ;; BANK2           96      0       0
   563 ;;
   564 ;; Pointer list with targets:
   565 ;; ReadSN@data	PTR unsigned char  size(1) Largest target is 8
   566 ;;		 -> sndData(BANK0[8]), 
   567 ;;
   568 ;;
   569 ;; Critical Paths under _main in COMMON
   570 ;;
   571 ;;   None.
   572 ;;
   573 ;; Critical Paths under _isr in COMMON
   574 ;;
   575 ;;   _isr->_SendRelayOff
   576 ;;   _SendRelayOff->i1_putch
   577 ;;
   578 ;; Critical Paths under _main in BANK0
   579 ;;
   580 ;;   _main->_DataHandle
   581 ;;   _I2CReadL->_i2c_GetByte
   582 ;;   _I2CReadH->_i2c_GetByte
   583 ;;   _i2c_GetByte->_i2c_ReadByte
   584 ;;   _i2c_PutByte->_i2c_SendByte
   585 ;;   _i2c_ReadByte->_i2c_WaitForSCL
   586 ;;   _i2c_ReadAcknowledge->_i2c_WaitForSCL
   587 ;;   _i2c_SendByte->_i2c_WaitForSCL
   588 ;;   _DS18B20ReadFlash->_WriteByte
   589 ;;   _DS18B20ReadFlash->_ReadByte
   590 ;;   _DS18B20Convert->_WriteByte
   591 ;;   _DS18B20Initial->_WriteByte
   592 ;;   _DataHandle->_ReadSN
   593 ;;   _SendService->_putch
   594 ;;   _ReadSN->_ReadEE
   595 ;;   _WriteSN->_WriteEE
   596 ;;
   597 ;; Critical Paths under _isr in BANK0
   598 ;;
   599 ;;   None.
   600 ;;
   601 ;; Critical Paths under _main in BANK1
   602 ;;
   603 ;;   None.
   604 ;;
   605 ;; Critical Paths under _isr in BANK1
   606 ;;
   607 ;;   None.
   608 ;;
   609 ;; Critical Paths under _main in BANK3
   610 ;;
   611 ;;   None.
   612 ;;
   613 ;; Critical Paths under _isr in BANK3
   614 ;;
   615 ;;   None.
   616 ;;
   617 ;; Critical Paths under _main in BANK2
   618 ;;
   619 ;;   None.
   620 ;;
   621 ;; Critical Paths under _isr in BANK2
   622 ;;
   623 ;;   None.
   624 ;;
   625 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   626 ;;
   627 ;;
   628 ;;Call Graph Tables:
   629 ;;
   630 ;; ---------------------------------------------------------------------------------
   631 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   632 ;; ---------------------------------------------------------------------------------
   633 ;; (0) _main                                                 4     0      4    1864
   634 ;;                                              9 BANK0      4     0      4
   635 ;;                          _ResetUart
   636 ;;                     _DS18B20Initial
   637 ;;                        _timer1_init
   638 ;;                         _DataHandle
   639 ;;                        _SendService
   640 ;;                           _I2CReadH
   641 ;;                              _Delay
   642 ;;                           _I2CReadL
   643 ;;                     _AutoAdjustGain
   644 ;;                     _DS18B20Convert
   645 ;;                   _DS18B20ReadFlash
   646 ;; ---------------------------------------------------------------------------------
   647 ;; (1) _I2CReadL                                             0     0      0     317
   648 ;;                        _i2c_Restart
   649 ;;                        _i2c_PutByte
   650 ;;                           _i2c_Stop
   651 ;;                        _i2c_GetByte
   652 ;; ---------------------------------------------------------------------------------
   653 ;; (1) _I2CReadH                                             0     0      0     317
   654 ;;                        _i2c_Restart
   655 ;;                        _i2c_PutByte
   656 ;;                           _i2c_Stop
   657 ;;                        _i2c_GetByte
   658 ;; ---------------------------------------------------------------------------------
   659 ;; (2) _i2c_GetByte                                          3     3      0     138
   660 ;;                                              4 BANK0      3     3      0
   661 ;;                       _i2c_ReadByte
   662 ;;                _i2c_SendAcknowledge
   663 ;; ---------------------------------------------------------------------------------
   664 ;; (2) _i2c_PutByte                                          1     1      0     179
   665 ;;                                              4 BANK0      1     1      0
   666 ;;                       _i2c_SendByte
   667 ;;                _i2c_ReadAcknowledge
   668 ;; ---------------------------------------------------------------------------------
   669 ;; (3) _i2c_ReadByte                                         3     3      0      71
   670 ;;                                              1 BANK0      3     3      0
   671 ;;                     _i2c_WaitForSCL
   672 ;; ---------------------------------------------------------------------------------
   673 ;; (3) _i2c_ReadAcknowledge                                  2     2      0      23
   674 ;;                                              1 BANK0      2     2      0
   675 ;;                     _i2c_WaitForSCL
   676 ;; ---------------------------------------------------------------------------------
   677 ;; (3) _i2c_SendByte                                         3     3      0     134
   678 ;;                                              1 BANK0      3     3      0
   679 ;;                     _i2c_WaitForSCL
   680 ;; ---------------------------------------------------------------------------------
   681 ;; (1) _DS18B20ReadFlash                                     2     2      0     332
   682 ;;                                              4 BANK0      2     2      0
   683 ;;                              _Reset
   684 ;;                          _WriteByte
   685 ;;                           _ReadByte
   686 ;; ---------------------------------------------------------------------------------
   687 ;; (1) _DS18B20Convert                                       2     2      0     237
   688 ;;                                              4 BANK0      2     2      0
   689 ;;                              _Reset
   690 ;;                          _WriteByte
   691 ;; ---------------------------------------------------------------------------------
   692 ;; (1) _DS18B20Initial                                       2     2      0     237
   693 ;;                                              4 BANK0      2     2      0
   694 ;;                              _Reset
   695 ;;                          _WriteByte
   696 ;; ---------------------------------------------------------------------------------
   697 ;; (1) _DataHandle                                           4     4      0     380
   698 ;;                                              5 BANK0      4     4      0
   699 ;;                            _RelayOn
   700 ;;                           _RelayOff
   701 ;;                            _WriteEE
   702 ;;                             _ReadEE
   703 ;;                            _WriteSN
   704 ;;                             _ReadSN
   705 ;; ---------------------------------------------------------------------------------
   706 ;; (2) _ReadByte                                             4     4      0      95
   707 ;;                                              0 BANK0      4     4      0
   708 ;; ---------------------------------------------------------------------------------
   709 ;; (2) _WriteByte                                            4     4      0     117
   710 ;;                                              0 BANK0      4     4      0
   711 ;; ---------------------------------------------------------------------------------
   712 ;; (3) _i2c_SendAcknowledge                                  2     2      0      22
   713 ;;                                              0 BANK0      2     2      0
   714 ;; ---------------------------------------------------------------------------------
   715 ;; (4) _i2c_WaitForSCL                                       1     1      0       0
   716 ;;                                              0 BANK0      1     1      0
   717 ;; ---------------------------------------------------------------------------------
   718 ;; (1) _SendService                                          0     0      0      22
   719 ;;                              _putch
   720 ;; ---------------------------------------------------------------------------------
   721 ;; (2) _ReadSN                                               3     3      0     157
   722 ;;                                              2 BANK0      3     3      0
   723 ;;                             _ReadEE
   724 ;; ---------------------------------------------------------------------------------
   725 ;; (2) _WriteSN                                              2     1      1      88
   726 ;;                                              2 BANK0      2     1      1
   727 ;;                            _WriteEE
   728 ;; ---------------------------------------------------------------------------------
   729 ;; (2) _i2c_Stop                                             1     1      0       0
   730 ;;                                              0 BANK0      1     1      0
   731 ;; ---------------------------------------------------------------------------------
   732 ;; (2) _i2c_Restart                                          1     1      0       0
   733 ;;                                              0 BANK0      1     1      0
   734 ;; ---------------------------------------------------------------------------------
   735 ;; (2) _Reset                                                3     3      0      96
   736 ;;                                              0 BANK0      3     3      0
   737 ;; ---------------------------------------------------------------------------------
   738 ;; (1) _Delay                                                2     0      2      22
   739 ;;                                              0 BANK0      2     0      2
   740 ;; ---------------------------------------------------------------------------------
   741 ;; (1) _timer1_init                                          0     0      0       0
   742 ;; ---------------------------------------------------------------------------------
   743 ;; (2) _putch                                                1     1      0      22
   744 ;;                                              0 BANK0      1     1      0
   745 ;; ---------------------------------------------------------------------------------
   746 ;; (3) _ReadEE                                               2     2      0      45
   747 ;;                                              0 BANK0      2     2      0
   748 ;; ---------------------------------------------------------------------------------
   749 ;; (3) _WriteEE                                              2     1      1      44
   750 ;;                                              0 BANK0      2     1      1
   751 ;; ---------------------------------------------------------------------------------
   752 ;; (1) _AutoAdjustGain                                       0     0      0       0
   753 ;; ---------------------------------------------------------------------------------
   754 ;; (1) _ResetUart                                            0     0      0       0
   755 ;; ---------------------------------------------------------------------------------
   756 ;; (2) _RelayOff                                             0     0      0       0
   757 ;; ---------------------------------------------------------------------------------
   758 ;; (2) _RelayOn                                              0     0      0       0
   759 ;; ---------------------------------------------------------------------------------
   760 ;; Estimated maximum stack depth 4
   761 ;; ---------------------------------------------------------------------------------
   762 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   763 ;; ---------------------------------------------------------------------------------
   764 ;; (5) _isr                                                  6     6      0     258
   765 ;;                                              7 COMMON     6     6      0
   766 ;;                        i1_ResetUart
   767 ;;                         i1_RelayOff
   768 ;;                       _SendRelayOff
   769 ;; ---------------------------------------------------------------------------------
   770 ;; (6) _SendRelayOff                                         6     6      0     258
   771 ;;                                              1 COMMON     6     6      0
   772 ;;                            i1_putch
   773 ;; ---------------------------------------------------------------------------------
   774 ;; (7) i1_putch                                              1     1      0      88
   775 ;;                                              0 COMMON     1     1      0
   776 ;; ---------------------------------------------------------------------------------
   777 ;; (6) i1_ResetUart                                          0     0      0       0
   778 ;; ---------------------------------------------------------------------------------
   779 ;; (6) i1_RelayOff                                           0     0      0       0
   780 ;; ---------------------------------------------------------------------------------
   781 ;; Estimated maximum stack depth 7
   782 ;; ---------------------------------------------------------------------------------
   783 ;; Call Graph Graphs:
   784 ;; _main (ROOT)
   785 ;;   _ResetUart
   786 ;;   _DS18B20Initial
   787 ;;     _Reset
   788 ;;     _WriteByte
   789 ;;   _timer1_init
   790 ;;   _DataHandle
   791 ;;     _RelayOn
   792 ;;     _RelayOff
   793 ;;     _WriteEE
   794 ;;     _ReadEE
   795 ;;     _WriteSN
   796 ;;       _WriteEE
   797 ;;     _ReadSN
   798 ;;       _ReadEE
   799 ;;   _SendService
   800 ;;     _putch
   801 ;;   _I2CReadH
   802 ;;     _i2c_Restart
   803 ;;     _i2c_PutByte
   804 ;;       _i2c_SendByte
   805 ;;         _i2c_WaitForSCL
   806 ;;       _i2c_ReadAcknowledge
   807 ;;         _i2c_WaitForSCL
   808 ;;     _i2c_Stop
   809 ;;     _i2c_GetByte
   810 ;;       _i2c_ReadByte
   811 ;;         _i2c_WaitForSCL
   812 ;;       _i2c_SendAcknowledge
   813 ;;   _Delay
   814 ;;   _I2CReadL
   815 ;;     _i2c_Restart
   816 ;;     _i2c_PutByte
   817 ;;       _i2c_SendByte
   818 ;;         _i2c_WaitForSCL
   819 ;;       _i2c_ReadAcknowledge
   820 ;;         _i2c_WaitForSCL
   821 ;;     _i2c_Stop
   822 ;;     _i2c_GetByte
   823 ;;       _i2c_ReadByte
   824 ;;         _i2c_WaitForSCL
   825 ;;       _i2c_SendAcknowledge
   826 ;;   _AutoAdjustGain
   827 ;;   _DS18B20Convert
   828 ;;     _Reset
   829 ;;     _WriteByte
   830 ;;   _DS18B20ReadFlash
   831 ;;     _Reset
   832 ;;     _WriteByte
   833 ;;     _ReadByte
   834 ;;
   835 ;; _isr (ROOT)
   836 ;;   i1_ResetUart
   837 ;;   i1_RelayOff
   838 ;;   _SendRelayOff
   839 ;;     i1_putch
   840 ;;
   841 ;; Address spaces:
   842 ;;Name               Size   Autos  Total    Cost      Usage
   843 ;;BITCOMMON            E      0       1       0        7.1%
   844 ;;EEDATA             100      0       0       0        0.0%
   845 ;;NULL                 0      0       0       0        0.0%
   846 ;;CODE                 0      0       0       0        0.0%
   847 ;;COMMON               E      D       E       1      100.0%
   848 ;;BITSFR0              0      0       0       1        0.0%
   849 ;;SFR0                 0      0       0       1        0.0%
   850 ;;BITSFR1              0      0       0       2        0.0%
   851 ;;SFR1                 0      0       0       2        0.0%
   852 ;;STACK                0      0       A       2        0.0%
   853 ;;ABS                  0      0      4A       3        0.0%
   854 ;;BITBANK0            50      0       1       4        1.3%
   855 ;;BITSFR3              0      0       0       4        0.0%
   856 ;;SFR3                 0      0       0       4        0.0%
   857 ;;BANK0               50      D      3C       5       75.0%
   858 ;;BITSFR2              0      0       0       5        0.0%
   859 ;;SFR2                 0      0       0       5        0.0%
   860 ;;BITBANK1            50      0       0       6        0.0%
   861 ;;BANK1               50      0       0       7        0.0%
   862 ;;BITBANK3            60      0       0       8        0.0%
   863 ;;BANK3               60      0       0       9        0.0%
   864 ;;BITBANK2            60      0       0      10        0.0%
   865 ;;BANK2               60      0       0      11        0.0%
   866 ;;DATA                 0      0      54      12        0.0%
   867                           
   868                           
   869 ;; *************** function _main *****************
   870 ;; Defined at:
   871 ;;		line 328 in file "../Main.c"
   872 ;; Parameters:    Size  Location     Type
   873 ;;  argc            2    9[BANK0 ] int 
   874 ;;  argv            2   11[BANK0 ] PTR PTR unsigned char 
   875 ;; Auto vars:     Size  Location     Type
   876 ;;		None
   877 ;; Return value:  Size  Location     Type
   878 ;;                  2    9[BANK0 ] int 
   879 ;; Registers used:
   880 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   881 ;; Tracked objects:
   882 ;;		On entry : 17F/0
   883 ;;		On exit  : 60/0
   884 ;;		Unchanged: 0/0
   885 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   886 ;;      Params:         0       4       0       0       0
   887 ;;      Locals:         0       0       0       0       0
   888 ;;      Temps:          0       0       0       0       0
   889 ;;      Totals:         0       4       0       0       0
   890 ;;Total ram usage:        4 bytes
   891 ;; Hardware stack levels required when called:    7
   892 ;; This function calls:
   893 ;;		_ResetUart
   894 ;;		_DS18B20Initial
   895 ;;		_timer1_init
   896 ;;		_DataHandle
   897 ;;		_SendService
   898 ;;		_I2CReadH
   899 ;;		_Delay
   900 ;;		_I2CReadL
   901 ;;		_AutoAdjustGain
   902 ;;		_DS18B20Convert
   903 ;;		_DS18B20ReadFlash
   904 ;; This function is called by:
   905 ;;		Startup code after reset
   906 ;; This function uses a non-reentrant model
   907 ;;
   908  049F                     _main:	
   909                           
   910                           ;Main.c: 329: TRISA = 0B11111111;
   911                           
   912                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   913  049F  30FF               	movlw	255
   914  04A0  1683               	bsf	3,5	;RP0=1, select bank1
   915  04A1  0085               	movwf	5	;volatile
   916                           
   917                           ;Main.c: 330: TRISB = 0B11110110;
   918  04A2  30F6               	movlw	246
   919  04A3  0086               	movwf	6	;volatile
   920                           
   921                           ;Main.c: 331: PORTA = 0x00;
   922  04A4  1283               	bcf	3,5	;RP0=0, select bank0
   923  04A5  0185               	clrf	5	;volatile
   924                           
   925                           ;Main.c: 332: PORTB = 0x00;
   926  04A6  0186               	clrf	6	;volatile
   927                           
   928                           ;Main.c: 334: ANSEL = 0x00;
   929  04A7  1683               	bsf	3,5	;RP0=1, select bank1
   930  04A8  019B               	clrf	27	;volatile
   931                           
   932                           ;Main.c: 335: ADCON0 = 0x00;
   933  04A9  1283               	bcf	3,5	;RP0=0, select bank0
   934  04AA  019F               	clrf	31	;volatile
   935                           
   936                           ;Main.c: 336: ADCON1 = 0x00;
   937  04AB  1683               	bsf	3,5	;RP0=1, select bank1
   938  04AC  019F               	clrf	31	;volatile
   939                           
   940                           ;Main.c: 338: CCP1CON = 0x00;
   941  04AD  1283               	bcf	3,5	;RP0=0, select bank0
   942  04AE  0197               	clrf	23	;volatile
   943                           
   944                           ;Main.c: 339: CCPR1L = 0x7F;
   945  04AF  307F               	movlw	127
   946  04B0  0095               	movwf	21	;volatile
   947                           
   948                           ;Main.c: 340: CCPR1H = 0x7F;
   949  04B1  0096               	movwf	22	;volatile
   950                           
   951                           ;Main.c: 341: T1CON = 0B00110001;
   952  04B2  3031               	movlw	49
   953  04B3  0090               	movwf	16	;volatile
   954                           
   955                           ;Main.c: 342: T2CON = 0B01111111;
   956  04B4  307F               	movlw	127
   957  04B5  0092               	movwf	18	;volatile
   958                           
   959                           ;Main.c: 343: PR2 = 0xD7;
   960  04B6  30D7               	movlw	215
   961  04B7  1683               	bsf	3,5	;RP0=1, select bank1
   962  04B8  0092               	movwf	18	;volatile
   963  04B9  3019               	movlw	25
   964                           
   965                           ;Main.c: 345: TRISB2 = 1; TRISB5 = 1; SPBRG = ((int)(4000000L/(16UL * 9600) -1)); RCSTA 
      +                          = (0|0x90); TXSTA = (0x4|0|0x20);
   966  04BA  1506               	bsf	6,2
   967  04BB  1686               	bsf	6,5
   968  04BC  0099               	movwf	25	;volatile
   969  04BD  3090               	movlw	144
   970  04BE  1283               	bcf	3,5	;RP0=0, select bank0
   971  04BF  0098               	movwf	24	;volatile
   972  04C0  3024               	movlw	36
   973  04C1  1683               	bsf	3,5	;RP0=1, select bank1
   974  04C2  0098               	movwf	24	;volatile
   975                           
   976                           ;Main.c: 346: SSPCON &=0xF0; SSPCON|=(0B1011 & 0xf);
   977  04C3  30F0               	movlw	240
   978  04C4  1283               	bcf	3,5	;RP0=0, select bank0
   979  04C5  0594               	andwf	20,f	;volatile
   980  04C6  300B               	movlw	11
   981  04C7  0494               	iorwf	20,f	;volatile
   982  04C8  3020               	movlw	32
   983                           
   984                           ;Main.c: 347: SSPEN = 1;
   985  04C9  1694               	bsf	20,5
   986  04CA  1614               	bsf	20,4
   987                           
   988                           ;Main.c: 350: PIE1 = 0B00100000;
   989  04CB  1683               	bsf	3,5	;RP0=1, select bank1
   990  04CC  008C               	movwf	12	;volatile
   991                           
   992                           ;Main.c: 351: PIR1 = 0B00000000;
   993  04CD  1283               	bcf	3,5	;RP0=0, select bank0
   994  04CE  018C               	clrf	12	;volatile
   995                           
   996                           ;Main.c: 352: PIR2 = 0B00000000;
   997  04CF  018D               	clrf	13	;volatile
   998                           
   999                           ;Main.c: 354: INTCON = 0B11000000;
  1000  04D0  30C0               	movlw	192
  1001  04D1  008B               	movwf	11	;volatile
  1002                           
  1003                           ;Main.c: 356: ResetUart();
  1004  04D2  118A  2548  118A   	fcall	_ResetUart
  1005  04D5  300C               	movlw	12
  1006                           
  1007                           ;Main.c: 357: unitAddr = 0x00;
  1008  04D6  01CD               	clrf	_unitAddr
  1009                           
  1010                           ;Main.c: 358: CFG_H = 0x0C;
  1011  04D7  00B1               	movwf	_CFG_H
  1012                           
  1013                           ;Main.c: 359: CFG_L = 0x0C;
  1014  04D8  00B2               	movwf	_CFG_L
  1015                           
  1016                           ;Main.c: 360: DS18B20Initial();
  1017  04D9  118A  230E  118A   	fcall	_DS18B20Initial
  1018                           
  1019                           ;Main.c: 362: TRISBbits.TRISB7=0;
  1020  04DC  1683               	bsf	3,5	;RP0=1, select bank1
  1021  04DD  1386               	bcf	6,7	;volatile
  1022                           
  1023                           ;Main.c: 363: PORTBbits.RB7=0;
  1024  04DE  1283               	bcf	3,5	;RP0=0, select bank0
  1025  04DF  1386               	bcf	6,7	;volatile
  1026                           
  1027                           ;Main.c: 364: timer1_init();
  1028  04E0  118A  2560  118A   	fcall	_timer1_init
  1029  04E3                     l6760:	
  1030                           
  1031                           ;Main.c: 367: if(OERR){ CREN = 0; CREN = 1; }
  1032  04E3  1C98               	btfss	24,1
  1033  04E4  2CE7               	goto	l781
  1034  04E5  1218               	bcf	24,4
  1035  04E6  1618               	bsf	24,4
  1036  04E7                     l781:	
  1037                           
  1038                           ;Main.c: 368: if(rcvTerminalOk == 1){
  1039  04E7  1EFD               	btfss	_rcvTerminalOk/(0+8),_rcvTerminalOk& (0+7)
  1040  04E8  2CF2               	goto	l6766
  1041                           
  1042                           ;Main.c: 369: DataHandle();
  1043  04E9  118A  200F  118A   	fcall	_DataHandle
  1044                           
  1045                           ;Main.c: 370: SendService();
  1046  04EC  118A  2519  118A   	fcall	_SendService
  1047                           
  1048                           ;Main.c: 371: ResetUart();
  1049  04EF  118A  2548  118A   	fcall	_ResetUart
  1050  04F2                     l6766:	
  1051                           
  1052                           ;Main.c: 372: }
  1053                           ;Main.c: 373: idleCnt++;
  1054  04F2  0AAC               	incf	_idleCnt,f
  1055  04F3  1903               	skipnz
  1056  04F4  0AAD               	incf	_idleCnt+1,f
  1057                           
  1058                           ;Main.c: 374: if(idleCnt >= 50000){
  1059  04F5  30C3               	movlw	195
  1060  04F6  022D               	subwf	_idleCnt+1,w
  1061  04F7  3050               	movlw	80
  1062  04F8  1903               	skipnz
  1063  04F9  022C               	subwf	_idleCnt,w
  1064  04FA  1C03               	skipc
  1065  04FB  2CE3               	goto	l6760
  1066                           
  1067                           ;Main.c: 375: idleCnt = 0;
  1068  04FC  01AC               	clrf	_idleCnt
  1069  04FD  01AD               	clrf	_idleCnt+1
  1070                           
  1071                           ;Main.c: 376: I2CReadH();
  1072  04FE  118A  21C7  118A   	fcall	_I2CReadH
  1073                           
  1074                           ;Main.c: 377: Delay(100);
  1075  0501  3064               	movlw	100
  1076  0502  1283               	bcf	3,5	;RP0=0, select bank0
  1077  0503  00CE               	movwf	?_Delay
  1078  0504  01CF               	clrf	?_Delay+1
  1079  0505  118A  2573  118A   	fcall	_Delay
  1080                           
  1081                           ;Main.c: 378: I2CReadL();
  1082  0508  118A  21AB  118A   	fcall	_I2CReadL
  1083                           
  1084                           ;Main.c: 380: if(DS18B20Convert() == 1){
  1085                           
  1086                           ;Main.c: 379: AutoAdjustGain();
  1087  050B  118A  22D3  118A   	fcall	_DS18B20Convert
  1088  050E  3A01               	xorlw	1
  1089  050F  1D03               	skipz
  1090  0510  2CE3               	goto	l6760
  1091                           
  1092                           ;Main.c: 381: DS18B20ReadFlash();
  1093  0511  118A  22EC  118A   	fcall	_DS18B20ReadFlash
  1094                           
  1095                           ;Main.c: 382: T_M = T_Msb;
  1096  0514  083C               	movf	_T_Msb,w
  1097  0515  00BB               	movwf	_T_M
  1098                           
  1099                           ;Main.c: 383: T_L = T_Lsb;
  1100  0516  083A               	movf	_T_Lsb,w
  1101  0517  00B9               	movwf	_T_L
  1102  0518  2CE3               	goto	l6760
  1103  0519                     __end_of_main:	
  1104                           
  1105                           	psect	text1060
  1106  018C                     __ptext1060:	
  1107 ;; =============== function _i2c_ReadByte ends ============
  1108                           
  1109                           
  1110 ;; *************** function _i2c_ReadAcknowledge *****************
  1111 ;; Defined at:
  1112 ;;		line 93 in file "../i2c.c"
  1113 ;; Parameters:    Size  Location     Type
  1114 ;;		None
  1115 ;; Auto vars:     Size  Location     Type
  1116 ;;  ack             1    2[BANK0 ] unsigned char 
  1117 ;; Return value:  Size  Location     Type
  1118 ;;                  1    wreg      char 
  1119 ;; Registers used:
  1120 ;;		wreg, pclath, cstack
  1121 ;; Tracked objects:
  1122 ;;		On entry : 60/0
  1123 ;;		On exit  : 60/0
  1124 ;;		Unchanged: 0/0
  1125 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1126 ;;      Params:         0       0       0       0       0
  1127 ;;      Locals:         0       1       0       0       0
  1128 ;;      Temps:          0       1       0       0       0
  1129 ;;      Totals:         0       2       0       0       0
  1130 ;;Total ram usage:        2 bytes
  1131 ;; Hardware stack levels used:    1
  1132 ;; Hardware stack levels required when called:    4
  1133 ;; This function calls:
  1134 ;;		_i2c_WaitForSCL
  1135 ;; This function is called by:
  1136 ;;		_i2c_PutByte
  1137 ;; This function uses a non-reentrant model
  1138 ;;
  1139  018C                     _i2c_ReadAcknowledge:	
  1140  018C                     l6394:	
  1141                           ; Regs used in _i2c_ReadAcknowledge: [wreg+pclath+cstack]
  1142                           
  1143                           
  1144                           ;i2c.c: 94: unsigned char ack;
  1145                           ;i2c.c: 96: TRISB4 = 0;
  1146  018C  1683               	bsf	3,5	;RP0=1, select bank1
  1147  018D  300D               	movlw	13
  1148  018E  1206               	bcf	6,4
  1149                           
  1150                           ;i2c.c: 97: TRISB1 = 1;
  1151  018F  1486               	bsf	6,1
  1152                           
  1153                           ;i2c.c: 98: _delay((unsigned long)((40)*(4000000/4000000.0)));
  1154  0190  1283               	bcf	3,5	;RP0=0, select bank0
  1155  0191  00CF               	movwf	??_i2c_ReadAcknowledge
  1156  0192                     u2037:	
  1157  0192  0BCF               	decfsz	??_i2c_ReadAcknowledge,f
  1158  0193  2992               	goto	u2037
  1159                           
  1160                           ;i2c.c: 99: TRISB4 = 1;
  1161  0194  1683               	bsf	3,5	;RP0=1, select bank1
  1162  0195  3003               	movlw	3
  1163  0196  1303               	bcf	3,6	;RP1=0, select bank1
  1164  0197  1606               	bsf	6,4
  1165                           
  1166                           ;i2c.c: 100: _delay((unsigned long)((10)*(4000000/4000000.0)));
  1167  0198  1283               	bcf	3,5	;RP0=0, select bank0
  1168  0199  00CF               	movwf	??_i2c_ReadAcknowledge
  1169  019A                     u2047:	
  1170  019A  0BCF               	decfsz	??_i2c_ReadAcknowledge,f
  1171  019B  299A               	goto	u2047
  1172                           
  1173                           ;i2c.c: 101: ack = RB1;
  1174  019C  3000               	movlw	0
  1175  019D  1283               	bcf	3,5	;RP0=0, select bank0
  1176  019E  1303               	bcf	3,6	;RP1=0, select bank0
  1177  019F  1886               	btfsc	6,1
  1178  01A0  3001               	movlw	1
  1179  01A1  00D0               	movwf	i2c_ReadAcknowledge@ack
  1180                           
  1181                           ;i2c.c: 102: TRISB4 = 0;
  1182  01A2  1683               	bsf	3,5	;RP0=1, select bank1
  1183  01A3  1206               	bcf	6,4
  1184                           
  1185                           ;i2c.c: 105: if(i2c_WaitForSCL())
  1186  01A4  2284  118A         	fcall	_i2c_WaitForSCL
  1187  01A6  3A00               	xorlw	0
  1188  01A7  1D03               	btfss	3,2
  1189                           
  1190                           ;i2c.c: 106: return (-1);
  1191  01A8  34FF               	retlw	-1
  1192                           
  1193                           ;i2c.c: 107: return ack;
  1194  01A9  0850               	movf	i2c_ReadAcknowledge@ack,w
  1195  01AA  0008               	return
  1196  01AB                     __end_of_i2c_ReadAcknowledge:	
  1197  01AB                     __ptext1055:	
  1198 ;; =============== function _main ends ============
  1199                           
  1200                           
  1201 ;; *************** function _I2CReadL *****************
  1202 ;; Defined at:
  1203 ;;		line 154 in file "../Main.c"
  1204 ;; Parameters:    Size  Location     Type
  1205 ;;		None
  1206 ;; Auto vars:     Size  Location     Type
  1207 ;;		None
  1208 ;; Return value:  Size  Location     Type
  1209 ;;		None               void
  1210 ;; Registers used:
  1211 ;;		wreg, status,2, status,0, pclath, cstack
  1212 ;; Tracked objects:
  1213 ;;		On entry : 60/0
  1214 ;;		On exit  : 60/20
  1215 ;;		Unchanged: 0/0
  1216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1217 ;;      Params:         0       0       0       0       0
  1218 ;;      Locals:         0       0       0       0       0
  1219 ;;      Temps:          0       0       0       0       0
  1220 ;;      Totals:         0       0       0       0       0
  1221 ;;Total ram usage:        0 bytes
  1222 ;; Hardware stack levels used:    1
  1223 ;; Hardware stack levels required when called:    6
  1224 ;; This function calls:
  1225 ;;		_i2c_Restart
  1226 ;;		_i2c_PutByte
  1227 ;;		_i2c_Stop
  1228 ;;		_i2c_GetByte
  1229 ;; This function is called by:
  1230 ;;		_main
  1231 ;; This function uses a non-reentrant model
  1232 ;;
  1233  01AB                     _I2CReadL:	
  1234                           
  1235                           ;Main.c: 155: i2c_Restart();
  1236                           
  1237                           ; Regs used in _I2CReadL: [wreg+status,2+status,0+pclath+cstack]
  1238  01AB  21FB  118A         	fcall	_i2c_Restart
  1239                           
  1240                           ;Main.c: 156: i2c_PutByte(0x92 | 0x00);
  1241  01AD  3092               	movlw	146
  1242  01AE  21E3  118A         	fcall	_i2c_PutByte
  1243                           
  1244                           ;Main.c: 157: i2c_PutByte(CFG_L);
  1245  01B0  0832               	movf	_CFG_L,w
  1246  01B1  21E3  118A         	fcall	_i2c_PutByte
  1247                           
  1248                           ;Main.c: 158: i2c_Stop();
  1249  01B3  2216  118A         	fcall	_i2c_Stop
  1250                           
  1251                           ;Main.c: 159: i2c_Restart();
  1252  01B5  21FB  118A         	fcall	_i2c_Restart
  1253                           
  1254                           ;Main.c: 160: i2c_PutByte(0x92 | 0x01);
  1255  01B7  3093               	movlw	147
  1256  01B8  21E3  118A         	fcall	_i2c_PutByte
  1257                           
  1258                           ;Main.c: 161: L_M = i2c_GetByte(!0);
  1259  01BA  3001               	movlw	1
  1260  01BB  21EB  118A         	fcall	_i2c_GetByte
  1261  01BD  00B7               	movwf	_L_M
  1262                           
  1263                           ;Main.c: 162: L_L = i2c_GetByte(!0);
  1264  01BE  3001               	movlw	1
  1265  01BF  21EB  118A         	fcall	_i2c_GetByte
  1266  01C1  00B6               	movwf	_L_L
  1267                           
  1268                           ;Main.c: 163: L_S = i2c_GetByte(0);
  1269  01C2  3000               	movlw	0
  1270  01C3  21EB  118A         	fcall	_i2c_GetByte
  1271  01C5  00B8               	movwf	_L_S
  1272                           
  1273                           ;Main.c: 164: i2c_Stop();
  1274  01C6  2A16               	ljmp	l6042
  1275  01C7                     __end_of_I2CReadL:	
  1276  01C7                     __ptext1056:	
  1277 ;; =============== function _I2CReadL ends ============
  1278                           
  1279                           
  1280 ;; *************** function _I2CReadH *****************
  1281 ;; Defined at:
  1282 ;;		line 141 in file "../Main.c"
  1283 ;; Parameters:    Size  Location     Type
  1284 ;;		None
  1285 ;; Auto vars:     Size  Location     Type
  1286 ;;		None
  1287 ;; Return value:  Size  Location     Type
  1288 ;;		None               void
  1289 ;; Registers used:
  1290 ;;		wreg, status,2, status,0, pclath, cstack
  1291 ;; Tracked objects:
  1292 ;;		On entry : 60/0
  1293 ;;		On exit  : 60/20
  1294 ;;		Unchanged: 0/0
  1295 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1296 ;;      Params:         0       0       0       0       0
  1297 ;;      Locals:         0       0       0       0       0
  1298 ;;      Temps:          0       0       0       0       0
  1299 ;;      Totals:         0       0       0       0       0
  1300 ;;Total ram usage:        0 bytes
  1301 ;; Hardware stack levels used:    1
  1302 ;; Hardware stack levels required when called:    6
  1303 ;; This function calls:
  1304 ;;		_i2c_Restart
  1305 ;;		_i2c_PutByte
  1306 ;;		_i2c_Stop
  1307 ;;		_i2c_GetByte
  1308 ;; This function is called by:
  1309 ;;		_main
  1310 ;; This function uses a non-reentrant model
  1311 ;;
  1312  01C7                     _I2CReadH:	
  1313                           
  1314                           ;Main.c: 142: i2c_Restart();
  1315                           
  1316                           ; Regs used in _I2CReadH: [wreg+status,2+status,0+pclath+cstack]
  1317  01C7  21FB  118A         	fcall	_i2c_Restart
  1318                           
  1319                           ;Main.c: 143: i2c_PutByte(0x90 | 0x00);
  1320  01C9  3090               	movlw	144
  1321  01CA  21E3  118A         	fcall	_i2c_PutByte
  1322                           
  1323                           ;Main.c: 144: i2c_PutByte(CFG_H);
  1324  01CC  0831               	movf	_CFG_H,w
  1325  01CD  21E3  118A         	fcall	_i2c_PutByte
  1326                           
  1327                           ;Main.c: 145: i2c_Stop();
  1328  01CF  2216  118A         	fcall	_i2c_Stop
  1329                           
  1330                           ;Main.c: 146: i2c_Restart();
  1331  01D1  21FB  118A         	fcall	_i2c_Restart
  1332                           
  1333                           ;Main.c: 147: i2c_PutByte(0x90 | 0x01);
  1334  01D3  3091               	movlw	145
  1335  01D4  21E3  118A         	fcall	_i2c_PutByte
  1336                           
  1337                           ;Main.c: 148: H_M = i2c_GetByte(!0);
  1338  01D6  3001               	movlw	1
  1339  01D7  21EB  118A         	fcall	_i2c_GetByte
  1340  01D9  00B4               	movwf	_H_M
  1341                           
  1342                           ;Main.c: 149: H_L = i2c_GetByte(!0);
  1343  01DA  3001               	movlw	1
  1344  01DB  21EB  118A         	fcall	_i2c_GetByte
  1345  01DD  00B3               	movwf	_H_L
  1346                           
  1347                           ;Main.c: 150: H_S = i2c_GetByte(0);
  1348  01DE  3000               	movlw	0
  1349  01DF  21EB  118A         	fcall	_i2c_GetByte
  1350  01E1  00B5               	movwf	_H_S
  1351                           
  1352                           ;Main.c: 151: i2c_Stop();
  1353  01E2  2A16               	ljmp	l6042
  1354  01E3                     __end_of_I2CReadH:	
  1355  01E3                     __ptext1058:	
  1356 ;; =============== function _i2c_GetByte ends ============
  1357                           
  1358                           
  1359 ;; *************** function _i2c_PutByte *****************
  1360 ;; Defined at:
  1361 ;;		line 168 in file "../i2c.c"
  1362 ;; Parameters:    Size  Location     Type
  1363 ;;  data            1    wreg     unsigned char 
  1364 ;; Auto vars:     Size  Location     Type
  1365 ;;  data            1    4[BANK0 ] unsigned char 
  1366 ;; Return value:  Size  Location     Type
  1367 ;;                  1    wreg      char 
  1368 ;; Registers used:
  1369 ;;		wreg, status,2, status,0, pclath, cstack
  1370 ;; Tracked objects:
  1371 ;;		On entry : 40/20
  1372 ;;		On exit  : 60/0
  1373 ;;		Unchanged: 0/0
  1374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1375 ;;      Params:         0       0       0       0       0
  1376 ;;      Locals:         0       1       0       0       0
  1377 ;;      Temps:          0       0       0       0       0
  1378 ;;      Totals:         0       1       0       0       0
  1379 ;;Total ram usage:        1 bytes
  1380 ;; Hardware stack levels used:    1
  1381 ;; Hardware stack levels required when called:    5
  1382 ;; This function calls:
  1383 ;;		_i2c_SendByte
  1384 ;;		_i2c_ReadAcknowledge
  1385 ;; This function is called by:
  1386 ;;		_I2CReadH
  1387 ;;		_I2CReadL
  1388 ;; This function uses a non-reentrant model
  1389 ;;
  1390  01E3                     _i2c_PutByte:	
  1391                           
  1392                           ; Regs used in _i2c_PutByte: [wreg+status,2+status,0+pclath+cstack]
  1393                           ;i2c_PutByte@data stored from wreg
  1394  01E3  1283               	bcf	3,5	;RP0=0, select bank0
  1395  01E4  00D2               	movwf	i2c_PutByte@data
  1396                           
  1397                           ;i2c.c: 169: if(i2c_SendByte(data))
  1398  01E5  2242  118A         	fcall	_i2c_SendByte
  1399  01E7  3A00               	xorlw	0
  1400  01E8  1D03               	btfss	3,2
  1401                           
  1402                           ;i2c.c: 170: return (-1);
  1403  01E9  34FF               	retlw	-1
  1404                           
  1405                           ;i2c.c: 171: return i2c_ReadAcknowledge();
  1406  01EA  298C               	ljmp	l6394
  1407  01EB                     __end_of_i2c_PutByte:	
  1408  01EB                     __ptext1057:	
  1409 ;; =============== function _I2CReadH ends ============
  1410                           
  1411                           
  1412 ;; *************** function _i2c_GetByte *****************
  1413 ;; Defined at:
  1414 ;;		line 179 in file "../i2c.c"
  1415 ;; Parameters:    Size  Location     Type
  1416 ;;  more            1    wreg     unsigned char 
  1417 ;; Auto vars:     Size  Location     Type
  1418 ;;  more            1    6[BANK0 ] unsigned char 
  1419 ;;  byte            2    4[BANK0 ] int 
  1420 ;; Return value:  Size  Location     Type
  1421 ;;                  1    wreg      unsigned char 
  1422 ;; Registers used:
  1423 ;;		wreg, status,2, status,0, pclath, cstack
  1424 ;; Tracked objects:
  1425 ;;		On entry : 60/0
  1426 ;;		On exit  : 60/0
  1427 ;;		Unchanged: 0/0
  1428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1429 ;;      Params:         0       0       0       0       0
  1430 ;;      Locals:         0       3       0       0       0
  1431 ;;      Temps:          0       0       0       0       0
  1432 ;;      Totals:         0       3       0       0       0
  1433 ;;Total ram usage:        3 bytes
  1434 ;; Hardware stack levels used:    1
  1435 ;; Hardware stack levels required when called:    5
  1436 ;; This function calls:
  1437 ;;		_i2c_ReadByte
  1438 ;;		_i2c_SendAcknowledge
  1439 ;; This function is called by:
  1440 ;;		_I2CReadH
  1441 ;;		_I2CReadL
  1442 ;; This function uses a non-reentrant model
  1443 ;;
  1444  01EB                     _i2c_GetByte:	
  1445                           
  1446                           ; Regs used in _i2c_GetByte: [wreg+status,2+status,0+pclath+cstack]
  1447                           ;i2c_GetByte@more stored from wreg
  1448  01EB  00D4               	movwf	i2c_GetByte@more
  1449                           
  1450                           ;i2c.c: 180: int byte;
  1451                           ;i2c.c: 182: if((byte = i2c_ReadByte()) == (-1))
  1452  01EC  2290  118A         	fcall	_i2c_ReadByte
  1453  01EE  00D2               	movwf	i2c_GetByte@byte
  1454  01EF  01D3               	clrf	i2c_GetByte@byte+1
  1455  01F0  0A52               	incf	i2c_GetByte@byte,w
  1456  01F1  1903               	skipnz
  1457  01F2  0A53               	incf	i2c_GetByte@byte+1,w
  1458  01F3  1903               	btfsc	3,2
  1459                           
  1460                           ;i2c.c: 183: return (-1);
  1461  01F4  34FF               	retlw	255
  1462                           
  1463                           ;i2c.c: 185: i2c_SendAcknowledge(more);
  1464  01F5  0854               	movf	i2c_GetByte@more,w
  1465  01F6  22B9               	fcall	_i2c_SendAcknowledge
  1466                           
  1467                           ;i2c.c: 187: return byte;
  1468  01F7  1283               	bcf	3,5	;RP0=0, select bank0
  1469  01F8  1303               	bcf	3,6	;RP1=0, select bank0
  1470  01F9  0852               	movf	i2c_GetByte@byte,w
  1471  01FA  0008               	return
  1472  01FB                     __end_of_i2c_GetByte:	
  1473  01FB                     __ptext1074:	
  1474 ;; =============== function _i2c_Stop ends ============
  1475                           
  1476                           
  1477 ;; *************** function _i2c_Restart *****************
  1478 ;; Defined at:
  1479 ;;		line 43 in file "../i2c.c"
  1480 ;; Parameters:    Size  Location     Type
  1481 ;;		None
  1482 ;; Auto vars:     Size  Location     Type
  1483 ;;		None
  1484 ;; Return value:  Size  Location     Type
  1485 ;;		None               void
  1486 ;; Registers used:
  1487 ;;		wreg
  1488 ;; Tracked objects:
  1489 ;;		On entry : 40/0
  1490 ;;		On exit  : 60/20
  1491 ;;		Unchanged: 0/0
  1492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1493 ;;      Params:         0       0       0       0       0
  1494 ;;      Locals:         0       0       0       0       0
  1495 ;;      Temps:          0       1       0       0       0
  1496 ;;      Totals:         0       1       0       0       0
  1497 ;;Total ram usage:        1 bytes
  1498 ;; Hardware stack levels used:    1
  1499 ;; Hardware stack levels required when called:    3
  1500 ;; This function calls:
  1501 ;;		Nothing
  1502 ;; This function is called by:
  1503 ;;		_I2CReadH
  1504 ;;		_I2CReadL
  1505 ;; This function uses a non-reentrant model
  1506 ;;
  1507  01FB                     _i2c_Restart:	
  1508                           
  1509                           ;i2c.c: 44: TRISB1 = 1;
  1510                           
  1511                           ; Regs used in _i2c_Restart: [wreg]
  1512  01FB  1683               	bsf	3,5	;RP0=1, select bank1
  1513  01FC  3003               	movlw	3
  1514  01FD  1486               	bsf	6,1
  1515                           
  1516                           ;i2c.c: 45: _delay((unsigned long)((10)*(4000000/4000000.0)));
  1517  01FE  1283               	bcf	3,5	;RP0=0, select bank0
  1518  01FF  00CE               	movwf	??_i2c_Restart
  1519  0200                     u2157:	
  1520  0200  0BCE               	decfsz	??_i2c_Restart,f
  1521  0201  2A00               	goto	u2157
  1522                           
  1523                           ;i2c.c: 47: TRISB4 = 1;
  1524  0202  1683               	bsf	3,5	;RP0=1, select bank1
  1525  0203  300D               	movlw	13
  1526  0204  1303               	bcf	3,6	;RP1=0, select bank1
  1527  0205  1606               	bsf	6,4
  1528                           
  1529                           ;i2c.c: 48: _delay((unsigned long)((40)*(4000000/4000000.0)));
  1530  0206  1283               	bcf	3,5	;RP0=0, select bank0
  1531  0207  00CE               	movwf	??_i2c_Restart
  1532  0208                     u2167:	
  1533  0208  0BCE               	decfsz	??_i2c_Restart,f
  1534  0209  2A08               	goto	u2167
  1535                           
  1536                           ;i2c.c: 50: TRISB1 = 0;
  1537  020A  1683               	bsf	3,5	;RP0=1, select bank1
  1538  020B  300D               	movlw	13
  1539  020C  1303               	bcf	3,6	;RP1=0, select bank1
  1540  020D  1086               	bcf	6,1
  1541                           
  1542                           ;i2c.c: 51: _delay((unsigned long)((40)*(4000000/4000000.0)));
  1543  020E  1283               	bcf	3,5	;RP0=0, select bank0
  1544  020F  00CE               	movwf	??_i2c_Restart
  1545  0210                     u2177:	
  1546  0210  0BCE               	decfsz	??_i2c_Restart,f
  1547  0211  2A10               	goto	u2177
  1548                           
  1549                           ;i2c.c: 53: TRISB4 = 0;
  1550  0212  1683               	bsf	3,5	;RP0=1, select bank1
  1551  0213  1303               	bcf	3,6	;RP1=0, select bank1
  1552  0214  1206               	bcf	6,4
  1553  0215  0008               	return
  1554  0216                     __end_of_i2c_Restart:	
  1555  0216                     __ptext1073:	
  1556 ;; =============== function _WriteSN ends ============
  1557                           
  1558                           
  1559 ;; *************** function _i2c_Stop *****************
  1560 ;; Defined at:
  1561 ;;		line 19 in file "../i2c.c"
  1562 ;; Parameters:    Size  Location     Type
  1563 ;;		None
  1564 ;; Auto vars:     Size  Location     Type
  1565 ;;		None
  1566 ;; Return value:  Size  Location     Type
  1567 ;;		None               void
  1568 ;; Registers used:
  1569 ;;		wreg
  1570 ;; Tracked objects:
  1571 ;;		On entry : 60/0
  1572 ;;		On exit  : 60/20
  1573 ;;		Unchanged: 0/0
  1574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1575 ;;      Params:         0       0       0       0       0
  1576 ;;      Locals:         0       0       0       0       0
  1577 ;;      Temps:          0       1       0       0       0
  1578 ;;      Totals:         0       1       0       0       0
  1579 ;;Total ram usage:        1 bytes
  1580 ;; Hardware stack levels used:    1
  1581 ;; Hardware stack levels required when called:    3
  1582 ;; This function calls:
  1583 ;;		Nothing
  1584 ;; This function is called by:
  1585 ;;		_I2CReadH
  1586 ;;		_I2CReadL
  1587 ;; This function uses a non-reentrant model
  1588 ;;
  1589  0216                     _i2c_Stop:	
  1590  0216                     l6042:	
  1591                           ; Regs used in _i2c_Stop: [wreg]
  1592                           
  1593                           
  1594                           ;i2c.c: 21: TRISB4 = 0;
  1595  0216  1683               	bsf	3,5	;RP0=1, select bank1
  1596  0217  300D               	movlw	13
  1597  0218  1206               	bcf	6,4
  1598                           
  1599                           ;i2c.c: 22: _delay((unsigned long)((40)*(4000000/4000000.0)));
  1600  0219  1283               	bcf	3,5	;RP0=0, select bank0
  1601  021A  00CE               	movwf	??_i2c_Stop
  1602  021B                     u2107:	
  1603  021B  0BCE               	decfsz	??_i2c_Stop,f
  1604  021C  2A1B               	goto	u2107
  1605                           
  1606                           ;i2c.c: 23: TRISB1 = 0;
  1607  021D  1683               	bsf	3,5	;RP0=1, select bank1
  1608  021E  300D               	movlw	13
  1609  021F  1303               	bcf	3,6	;RP1=0, select bank1
  1610  0220  1086               	bcf	6,1
  1611                           
  1612                           ;i2c.c: 24: _delay((unsigned long)((40)*(4000000/4000000.0)));
  1613  0221  1283               	bcf	3,5	;RP0=0, select bank0
  1614  0222  00CE               	movwf	??_i2c_Stop
  1615  0223                     u2117:	
  1616  0223  0BCE               	decfsz	??_i2c_Stop,f
  1617  0224  2A23               	goto	u2117
  1618                           
  1619                           ;i2c.c: 25: TRISB4 = 1;
  1620  0225  1683               	bsf	3,5	;RP0=1, select bank1
  1621  0226  3003               	movlw	3
  1622  0227  1303               	bcf	3,6	;RP1=0, select bank1
  1623  0228  1606               	bsf	6,4
  1624                           
  1625                           ;i2c.c: 26: _delay((unsigned long)((10)*(4000000/4000000.0)));
  1626  0229  1283               	bcf	3,5	;RP0=0, select bank0
  1627  022A  00CE               	movwf	??_i2c_Stop
  1628  022B                     u2127:	
  1629  022B  0BCE               	decfsz	??_i2c_Stop,f
  1630  022C  2A2B               	goto	u2127
  1631                           
  1632                           ;i2c.c: 27: TRISB4 = 1;
  1633  022D  1683               	bsf	3,5	;RP0=1, select bank1
  1634  022E  300D               	movlw	13
  1635  022F  1303               	bcf	3,6	;RP1=0, select bank1
  1636  0230  1606               	bsf	6,4
  1637                           
  1638                           ;i2c.c: 28: _delay((unsigned long)((40)*(4000000/4000000.0)));
  1639  0231  1283               	bcf	3,5	;RP0=0, select bank0
  1640  0232  00CE               	movwf	??_i2c_Stop
  1641  0233                     u2137:	
  1642  0233  0BCE               	decfsz	??_i2c_Stop,f
  1643  0234  2A33               	goto	u2137
  1644                           
  1645                           ;i2c.c: 29: TRISB1 = 1;
  1646  0235  1683               	bsf	3,5	;RP0=1, select bank1
  1647  0236  3010               	movlw	16
  1648  0237  1303               	bcf	3,6	;RP1=0, select bank1
  1649  0238  1486               	bsf	6,1
  1650                           
  1651                           ;i2c.c: 30: _delay((unsigned long)((50)*(4000000/4000000.0)));
  1652  0239  1283               	bcf	3,5	;RP0=0, select bank0
  1653  023A  00CE               	movwf	??_i2c_Stop
  1654  023B                     u2147:	
  1655  023B  0BCE               	decfsz	??_i2c_Stop,f
  1656  023C  2A3B               	goto	u2147
  1657  023D  0064               	clrwdt
  1658                           
  1659                           ;i2c.c: 31: TRISB1 = 1;
  1660  023E  1683               	bsf	3,5	;RP0=1, select bank1
  1661  023F  1303               	bcf	3,6	;RP1=0, select bank1
  1662  0240  1486               	bsf	6,1
  1663  0241  0008               	return
  1664  0242                     __end_of_i2c_Stop:	
  1665  0242                     __ptext1061:	
  1666 ;; =============== function _i2c_ReadAcknowledge ends ============
  1667                           
  1668                           
  1669 ;; *************** function _i2c_SendByte *****************
  1670 ;; Defined at:
  1671 ;;		line 62 in file "../i2c.c"
  1672 ;; Parameters:    Size  Location     Type
  1673 ;;  byte            1    wreg     unsigned char 
  1674 ;; Auto vars:     Size  Location     Type
  1675 ;;  byte            1    2[BANK0 ] unsigned char 
  1676 ;;  i               1    3[BANK0 ] char 
  1677 ;; Return value:  Size  Location     Type
  1678 ;;                  1    wreg      unsigned char 
  1679 ;; Registers used:
  1680 ;;		wreg, status,2, status,0, pclath, cstack
  1681 ;; Tracked objects:
  1682 ;;		On entry : 60/0
  1683 ;;		On exit  : 60/0
  1684 ;;		Unchanged: 0/0
  1685 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1686 ;;      Params:         0       0       0       0       0
  1687 ;;      Locals:         0       2       0       0       0
  1688 ;;      Temps:          0       1       0       0       0
  1689 ;;      Totals:         0       3       0       0       0
  1690 ;;Total ram usage:        3 bytes
  1691 ;; Hardware stack levels used:    1
  1692 ;; Hardware stack levels required when called:    4
  1693 ;; This function calls:
  1694 ;;		_i2c_WaitForSCL
  1695 ;; This function is called by:
  1696 ;;		_i2c_PutByte
  1697 ;; This function uses a non-reentrant model
  1698 ;;
  1699  0242                     _i2c_SendByte:	
  1700                           
  1701                           ; Regs used in _i2c_SendByte: [wreg+status,2+status,0+pclath+cstack]
  1702                           ;i2c_SendByte@byte stored from wreg
  1703  0242  00D0               	movwf	i2c_SendByte@byte
  1704                           
  1705                           ;i2c.c: 63: signed char i;
  1706                           ;i2c.c: 65: for(i=7; i>=0; i--)
  1707  0243  3007               	movlw	7
  1708  0244  00D1               	movwf	i2c_SendByte@i
  1709  0245                     l2051:	
  1710                           
  1711                           ;i2c.c: 66: {
  1712                           ;i2c.c: 67: TRISB4 = 0;
  1713  0245  1683               	bsf	3,5	;RP0=1, select bank1
  1714  0246  1206               	bcf	6,4
  1715                           
  1716                           ;i2c.c: 70: TRISB1 = ((byte>>i)&0x01);
  1717  0247  1283               	bcf	3,5	;RP0=0, select bank0
  1718  0248  0850               	movf	i2c_SendByte@byte,w
  1719  0249  00CF               	movwf	??_i2c_SendByte
  1720  024A  0A51               	incf	i2c_SendByte@i,w
  1721  024B  2A4E               	goto	u1594
  1722  024C                     u1595:	
  1723  024C  1003               	clrc
  1724  024D  0CCF               	rrf	??_i2c_SendByte,f
  1725  024E                     u1594:	
  1726  024E  3EFF               	addlw	-1
  1727  024F  1D03               	skipz
  1728  0250  2A4C               	goto	u1595
  1729  0251  1C4F               	btfss	??_i2c_SendByte,0
  1730  0252  2A57               	goto	u1600
  1731  0253  1683               	bsf	3,5	;RP0=1, select bank1
  1732  0254  1303               	bcf	3,6	;RP1=0, select bank1
  1733  0255  1486               	bsf	6,1
  1734  0256  2A5A               	goto	u1614
  1735  0257                     u1600:	
  1736  0257  1683               	bsf	3,5	;RP0=1, select bank1
  1737  0258  1303               	bcf	3,6	;RP1=0, select bank1
  1738  0259  1086               	bcf	6,1
  1739  025A                     u1614:	
  1740                           
  1741                           ;i2c.c: 71: if ((byte>>i)&0x01) {
  1742  025A  1283               	bcf	3,5	;RP0=0, select bank0
  1743  025B  0850               	movf	i2c_SendByte@byte,w
  1744  025C  00CF               	movwf	??_i2c_SendByte
  1745  025D  0A51               	incf	i2c_SendByte@i,w
  1746  025E  2A61               	goto	u1624
  1747  025F                     u1625:	
  1748  025F  1003               	clrc
  1749  0260  0CCF               	rrf	??_i2c_SendByte,f
  1750  0261                     u1624:	
  1751  0261  3EFF               	addlw	-1
  1752  0262  1D03               	skipz
  1753  0263  2A5F               	goto	u1625
  1754  0264  1C4F               	btfss	??_i2c_SendByte,0
  1755  0265  2A69               	goto	l2053
  1756                           
  1757                           ;i2c.c: 72: TRISB1 = 1;
  1758  0266  1683               	bsf	3,5	;RP0=1, select bank1
  1759  0267  1486               	bsf	6,1
  1760                           
  1761                           ;i2c.c: 73: }else {
  1762  0268  2A6B               	goto	l6372
  1763  0269                     l2053:	
  1764                           
  1765                           ;i2c.c: 74: TRISB1 = 0;
  1766  0269  1683               	bsf	3,5	;RP0=1, select bank1
  1767  026A  1086               	bcf	6,1
  1768  026B                     l6372:	
  1769                           
  1770                           ;i2c.c: 75: }
  1771                           ;i2c.c: 76: _delay((unsigned long)((10)*(4000000/4000000.0)));
  1772  026B  3003               	movlw	3
  1773  026C  1283               	bcf	3,5	;RP0=0, select bank0
  1774  026D  00CF               	movwf	??_i2c_SendByte
  1775  026E                     u2057:	
  1776  026E  0BCF               	decfsz	??_i2c_SendByte,f
  1777  026F  2A6E               	goto	u2057
  1778                           
  1779                           ;i2c.c: 77: TRISB4 = 1;
  1780  0270  1683               	bsf	3,5	;RP0=1, select bank1
  1781  0271  1303               	bcf	3,6	;RP1=0, select bank1
  1782  0272  1606               	bsf	6,4
  1783                           
  1784                           ;i2c.c: 79: if(i2c_WaitForSCL())
  1785  0273  2284  118A         	fcall	_i2c_WaitForSCL
  1786  0275  3A00               	xorlw	0
  1787  0276  1D03               	btfss	3,2
  1788                           
  1789                           ;i2c.c: 80: return !0;
  1790  0277  3401               	retlw	1
  1791                           
  1792                           ;i2c.c: 82: _delay((unsigned long)((40)*(4000000/4000000.0)));
  1793  0278  300D               	movlw	13
  1794  0279  00CF               	movwf	??_i2c_SendByte
  1795  027A                     u2067:	
  1796  027A  0BCF               	decfsz	??_i2c_SendByte,f
  1797  027B  2A7A               	goto	u2067
  1798                           
  1799                           ;i2c.c: 83: TRISB4 = 0;
  1800  027C  1683               	bsf	3,5	;RP0=1, select bank1
  1801  027D  1303               	bcf	3,6	;RP1=0, select bank1
  1802  027E  1206               	bcf	6,4
  1803  027F  1283               	bcf	3,5	;RP0=0, select bank0
  1804  0280  03D1               	decf	i2c_SendByte@i,f
  1805  0281  1BD1               	btfsc	i2c_SendByte@i,7
  1806                           
  1807                           ;i2c.c: 84: }
  1808                           ;i2c.c: 85: return 0;
  1809  0282  3400               	retlw	0
  1810  0283  2A45               	goto	l2051
  1811  0284                     __end_of_i2c_SendByte:	
  1812  0284                     __ptext1069:	
  1813 ;; =============== function _i2c_SendAcknowledge ends ============
  1814                           
  1815                           
  1816 ;; *************** function _i2c_WaitForSCL *****************
  1817 ;; Defined at:
  1818 ;;		line 240 in file "../i2c.c"
  1819 ;; Parameters:    Size  Location     Type
  1820 ;;		None
  1821 ;; Auto vars:     Size  Location     Type
  1822 ;;		None
  1823 ;; Return value:  Size  Location     Type
  1824 ;;                  1    wreg      unsigned char 
  1825 ;; Registers used:
  1826 ;;		wreg
  1827 ;; Tracked objects:
  1828 ;;		On entry : 60/20
  1829 ;;		On exit  : 60/0
  1830 ;;		Unchanged: 0/0
  1831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1832 ;;      Params:         0       0       0       0       0
  1833 ;;      Locals:         0       0       0       0       0
  1834 ;;      Temps:          0       1       0       0       0
  1835 ;;      Totals:         0       1       0       0       0
  1836 ;;Total ram usage:        1 bytes
  1837 ;; Hardware stack levels used:    1
  1838 ;; Hardware stack levels required when called:    3
  1839 ;; This function calls:
  1840 ;;		Nothing
  1841 ;; This function is called by:
  1842 ;;		_i2c_SendByte
  1843 ;;		_i2c_ReadAcknowledge
  1844 ;;		_i2c_ReadByte
  1845 ;; This function uses a non-reentrant model
  1846 ;;
  1847  0284                     _i2c_WaitForSCL:	
  1848                           
  1849                           ;i2c.c: 242: if(!RB4)
  1850                           
  1851                           ; Regs used in _i2c_WaitForSCL: [wreg]
  1852  0284  1283               	bcf	3,5	;RP0=0, select bank0
  1853  0285  1A06               	btfsc	6,4
  1854  0286  3400               	retlw	0
  1855                           
  1856                           ;i2c.c: 243: {
  1857                           ;i2c.c: 244: _delay((unsigned long)((10)*(4000000/4000000.0)));
  1858  0287  3003               	movlw	3
  1859  0288  00CE               	movwf	??_i2c_WaitForSCL
  1860  0289                     u2097:	
  1861  0289  0BCE               	decfsz	??_i2c_WaitForSCL,f
  1862  028A  2A89               	goto	u2097
  1863                           
  1864                           ;i2c.c: 246: if(!RB4)
  1865  028B  1283               	bcf	3,5	;RP0=0, select bank0
  1866  028C  1303               	bcf	3,6	;RP1=0, select bank0
  1867  028D  1E06               	btfss	6,4
  1868                           
  1869                           ;i2c.c: 247: return !0;
  1870  028E  3401               	retlw	1
  1871  028F  3400               	retlw	0
  1872  0290                     __end_of_i2c_WaitForSCL:	
  1873                           ;i2c.c: 248: }
  1874                           ;i2c.c: 249: return 0;
  1875                           
  1876  0290                     __ptext1059:	
  1877 ;; =============== function _i2c_PutByte ends ============
  1878                           
  1879                           
  1880 ;; *************** function _i2c_ReadByte *****************
  1881 ;; Defined at:
  1882 ;;		line 124 in file "../i2c.c"
  1883 ;; Parameters:    Size  Location     Type
  1884 ;;		None
  1885 ;; Auto vars:     Size  Location     Type
  1886 ;;  i               1    3[BANK0 ] unsigned char 
  1887 ;;  byte            1    2[BANK0 ] unsigned char 
  1888 ;; Return value:  Size  Location     Type
  1889 ;;                  1    wreg      unsigned char 
  1890 ;; Registers used:
  1891 ;;		wreg, status,2, status,0, pclath, cstack
  1892 ;; Tracked objects:
  1893 ;;		On entry : 60/0
  1894 ;;		On exit  : 60/0
  1895 ;;		Unchanged: 0/0
  1896 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1897 ;;      Params:         0       0       0       0       0
  1898 ;;      Locals:         0       2       0       0       0
  1899 ;;      Temps:          0       1       0       0       0
  1900 ;;      Totals:         0       3       0       0       0
  1901 ;;Total ram usage:        3 bytes
  1902 ;; Hardware stack levels used:    1
  1903 ;; Hardware stack levels required when called:    4
  1904 ;; This function calls:
  1905 ;;		_i2c_WaitForSCL
  1906 ;; This function is called by:
  1907 ;;		_i2c_GetByte
  1908 ;; This function uses a non-reentrant model
  1909 ;;
  1910  0290                     _i2c_ReadByte:	
  1911                           
  1912                           ;i2c.c: 125: unsigned char i;
  1913                           ;i2c.c: 126: unsigned char byte = 0;
  1914                           
  1915                           ; Regs used in _i2c_ReadByte: [wreg+status,2+status,0+pclath+cstack]
  1916  0290  01D0               	clrf	i2c_ReadByte@byte
  1917                           
  1918                           ;i2c.c: 128: for(i=0; i<8; i++)
  1919  0291  01D1               	clrf	i2c_ReadByte@i
  1920  0292                     l2066:	
  1921                           
  1922                           ;i2c.c: 129: {
  1923                           ;i2c.c: 130: TRISB4 = 0;
  1924  0292  1683               	bsf	3,5	;RP0=1, select bank1
  1925  0293  3010               	movlw	16
  1926  0294  1206               	bcf	6,4
  1927                           
  1928                           ;i2c.c: 131: _delay((unsigned long)((50)*(4000000/4000000.0)));
  1929  0295  1283               	bcf	3,5	;RP0=0, select bank0
  1930  0296  00CF               	movwf	??_i2c_ReadByte
  1931  0297                     u2017:	
  1932  0297  0BCF               	decfsz	??_i2c_ReadByte,f
  1933  0298  2A97               	goto	u2017
  1934  0299  0064               	clrwdt
  1935                           
  1936                           ;i2c.c: 132: TRISB1 = 1;
  1937  029A  1683               	bsf	3,5	;RP0=1, select bank1
  1938  029B  1303               	bcf	3,6	;RP1=0, select bank1
  1939  029C  1486               	bsf	6,1
  1940                           
  1941                           ;i2c.c: 134: TRISB4 = 1;
  1942  029D  1606               	bsf	6,4
  1943                           
  1944                           ;i2c.c: 135: if(i2c_WaitForSCL())
  1945  029E  2284  118A         	fcall	_i2c_WaitForSCL
  1946  02A0  3A00               	xorlw	0
  1947  02A1  1D03               	btfss	3,2
  1948                           
  1949                           ;i2c.c: 136: return (-1);
  1950  02A2  34FF               	retlw	255
  1951                           
  1952                           ;i2c.c: 137: _delay((unsigned long)((40)*(4000000/4000000.0)));
  1953  02A3  300D               	movlw	13
  1954  02A4  00CF               	movwf	??_i2c_ReadByte
  1955  02A5                     u2027:	
  1956  02A5  0BCF               	decfsz	??_i2c_ReadByte,f
  1957  02A6  2AA5               	goto	u2027
  1958                           
  1959                           ;i2c.c: 138: byte = byte << 1;
  1960  02A7  1283               	bcf	3,5	;RP0=0, select bank0
  1961  02A8  3000               	movlw	0
  1962  02A9  1303               	bcf	3,6	;RP1=0, select bank0
  1963  02AA  1003               	clrc
  1964  02AB  0DD0               	rlf	i2c_ReadByte@byte,f
  1965                           
  1966                           ;i2c.c: 139: byte |= RB1;
  1967  02AC  1886               	btfsc	6,1
  1968  02AD  3001               	movlw	1
  1969  02AE  04D0               	iorwf	i2c_ReadByte@byte,f
  1970                           
  1971                           ;i2c.c: 140: TRISB4 = 0;
  1972  02AF  1683               	bsf	3,5	;RP0=1, select bank1
  1973  02B0  1206               	bcf	6,4
  1974  02B1  1283               	bcf	3,5	;RP0=0, select bank0
  1975  02B2  3008               	movlw	8
  1976  02B3  0AD1               	incf	i2c_ReadByte@i,f
  1977  02B4  0251               	subwf	i2c_ReadByte@i,w
  1978  02B5  1C03               	skipc
  1979  02B6  2A92               	goto	l2066
  1980                           
  1981                           ;i2c.c: 141: }
  1982                           ;i2c.c: 142: return (int)byte;
  1983  02B7  0850               	movf	i2c_ReadByte@byte,w
  1984  02B8  0008               	return
  1985  02B9                     __end_of_i2c_ReadByte:	
  1986  02B9                     __ptext1068:	
  1987 ;; =============== function _WriteByte ends ============
  1988                           
  1989                           
  1990 ;; *************** function _i2c_SendAcknowledge *****************
  1991 ;; Defined at:
  1992 ;;		line 150 in file "../i2c.c"
  1993 ;; Parameters:    Size  Location     Type
  1994 ;;  status          1    wreg     unsigned char 
  1995 ;; Auto vars:     Size  Location     Type
  1996 ;;  status          1    1[BANK0 ] unsigned char 
  1997 ;; Return value:  Size  Location     Type
  1998 ;;		None               void
  1999 ;; Registers used:
  2000 ;;		wreg
  2001 ;; Tracked objects:
  2002 ;;		On entry : 60/0
  2003 ;;		On exit  : 0/0
  2004 ;;		Unchanged: 0/0
  2005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2006 ;;      Params:         0       0       0       0       0
  2007 ;;      Locals:         0       1       0       0       0
  2008 ;;      Temps:          0       1       0       0       0
  2009 ;;      Totals:         0       2       0       0       0
  2010 ;;Total ram usage:        2 bytes
  2011 ;; Hardware stack levels used:    1
  2012 ;; Hardware stack levels required when called:    3
  2013 ;; This function calls:
  2014 ;;		Nothing
  2015 ;; This function is called by:
  2016 ;;		_i2c_GetByte
  2017 ;; This function uses a non-reentrant model
  2018 ;;
  2019  02B9                     _i2c_SendAcknowledge:	
  2020                           
  2021                           ; Regs used in _i2c_SendAcknowledge: [wreg]
  2022                           ;i2c_SendAcknowledge@status stored from wreg
  2023  02B9  00CF               	movwf	i2c_SendAcknowledge@status
  2024                           
  2025                           ;i2c.c: 151: TRISB4 = 0;
  2026  02BA  1683               	bsf	3,5	;RP0=1, select bank1
  2027  02BB  1206               	bcf	6,4
  2028                           
  2029                           ;i2c.c: 152: if (status) {
  2030  02BC  1283               	bcf	3,5	;RP0=0, select bank0
  2031  02BD  084F               	movf	i2c_SendAcknowledge@status,w
  2032  02BE  1903               	btfsc	3,2
  2033  02BF  2AC3               	goto	l2072
  2034                           
  2035                           ;i2c.c: 153: TRISB1 = 0;
  2036  02C0  1683               	bsf	3,5	;RP0=1, select bank1
  2037  02C1  1086               	bcf	6,1
  2038                           
  2039                           ;i2c.c: 154: }else {
  2040  02C2  2AC5               	goto	l6126
  2041  02C3                     l2072:	
  2042                           
  2043                           ;i2c.c: 155: TRISB1 = 1;
  2044  02C3  1683               	bsf	3,5	;RP0=1, select bank1
  2045  02C4  1486               	bsf	6,1
  2046  02C5                     l6126:	
  2047                           
  2048                           ;i2c.c: 156: }
  2049                           ;i2c.c: 157: _delay((unsigned long)((10)*(4000000/4000000.0)));
  2050  02C5  3003               	movlw	3
  2051  02C6  1283               	bcf	3,5	;RP0=0, select bank0
  2052  02C7  00CE               	movwf	??_i2c_SendAcknowledge
  2053  02C8                     u2077:	
  2054  02C8  0BCE               	decfsz	??_i2c_SendAcknowledge,f
  2055  02C9  2AC8               	goto	u2077
  2056                           
  2057                           ;i2c.c: 158: TRISB4 = 1;
  2058  02CA  1683               	bsf	3,5	;RP0=1, select bank1
  2059  02CB  300D               	movlw	13
  2060  02CC  1303               	bcf	3,6	;RP1=0, select bank1
  2061  02CD  1606               	bsf	6,4
  2062                           
  2063                           ;i2c.c: 159: _delay((unsigned long)((40)*(4000000/4000000.0)));
  2064  02CE  1283               	bcf	3,5	;RP0=0, select bank0
  2065  02CF  00CE               	movwf	??_i2c_SendAcknowledge
  2066  02D0                     u2087:	
  2067  02D0  0BCE               	decfsz	??_i2c_SendAcknowledge,f
  2068  02D1  2AD0               	goto	u2087
  2069  02D2  0008               	return
  2070  02D3                     __end_of_i2c_SendAcknowledge:	
  2071                           
  2072                           	psect	text1063
  2073  02D3                     __ptext1063:	
  2074 ;; =============== function _DS18B20ReadFlash ends ============
  2075                           
  2076                           
  2077 ;; *************** function _DS18B20Convert *****************
  2078 ;; Defined at:
  2079 ;;		line 67 in file "../DS18B20.c"
  2080 ;; Parameters:    Size  Location     Type
  2081 ;;		None
  2082 ;; Auto vars:     Size  Location     Type
  2083 ;;  i               2    4[BANK0 ] unsigned int 
  2084 ;; Return value:  Size  Location     Type
  2085 ;;                  1    wreg      unsigned char 
  2086 ;; Registers used:
  2087 ;;		wreg, status,2, status,0, pclath, cstack
  2088 ;; Tracked objects:
  2089 ;;		On entry : 60/20
  2090 ;;		On exit  : 60/0
  2091 ;;		Unchanged: 0/0
  2092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2093 ;;      Params:         0       0       0       0       0
  2094 ;;      Locals:         0       2       0       0       0
  2095 ;;      Temps:          0       0       0       0       0
  2096 ;;      Totals:         0       2       0       0       0
  2097 ;;Total ram usage:        2 bytes
  2098 ;; Hardware stack levels used:    1
  2099 ;; Hardware stack levels required when called:    4
  2100 ;; This function calls:
  2101 ;;		_Reset
  2102 ;;		_WriteByte
  2103 ;; This function is called by:
  2104 ;;		_main
  2105 ;; This function uses a non-reentrant model
  2106 ;;
  2107  02D3                     _DS18B20Convert:	
  2108                           
  2109                           ;DS18B20.c: 68: unsigned int i;
  2110                           ;DS18B20.c: 69: if(Reset()==0)
  2111                           
  2112                           ; Regs used in _DS18B20Convert: [wreg+status,2+status,0+pclath+cstack]
  2113  02D3  2369  118A         	fcall	_Reset
  2114  02D5  3800               	iorlw	0
  2115  02D6  1D03               	skipz
  2116  02D7  3400               	retlw	0
  2117                           
  2118                           ;DS18B20.c: 70: {
  2119                           ;DS18B20.c: 71: i=77;while(i>0){i--;}
  2120  02D8  304D               	movlw	77
  2121  02D9  00D2               	movwf	DS18B20Convert@i
  2122  02DA  01D3               	clrf	DS18B20Convert@i+1
  2123  02DB                     l6336:	
  2124  02DB  0853               	movf	DS18B20Convert@i+1,w
  2125  02DC  0452               	iorwf	DS18B20Convert@i,w
  2126  02DD  1903               	btfsc	3,2
  2127  02DE  2AE6               	goto	l6338
  2128  02DF  3001               	movlw	1
  2129  02E0  02D2               	subwf	DS18B20Convert@i,f
  2130  02E1  3000               	movlw	0
  2131  02E2  1C03               	skipc
  2132  02E3  03D3               	decf	DS18B20Convert@i+1,f
  2133  02E4  02D3               	subwf	DS18B20Convert@i+1,f
  2134  02E5  2ADB               	goto	l6336
  2135  02E6                     l6338:	
  2136                           
  2137                           ;DS18B20.c: 72: WriteByte(0xcc);
  2138  02E6  30CC               	movlw	204
  2139  02E7  232D  118A         	fcall	_WriteByte
  2140                           
  2141                           ;DS18B20.c: 73: WriteByte(0x44);
  2142  02E9  3044               	movlw	68
  2143  02EA  232D               	fcall	_WriteByte
  2144                           
  2145                           ;DS18B20.c: 74: return 1;
  2146  02EB  3401               	retlw	1
  2147  02EC                     __end_of_DS18B20Convert:	
  2148                           ;DS18B20.c: 76: else
  2149                           ;DS18B20.c: 77: {
  2150                           ;DS18B20.c: 78: return 0;
  2151                           
  2152  02EC                     __ptext1062:	
  2153 ;; =============== function _i2c_SendByte ends ============
  2154                           
  2155                           
  2156 ;; *************** function _DS18B20ReadFlash *****************
  2157 ;; Defined at:
  2158 ;;		line 83 in file "../DS18B20.c"
  2159 ;; Parameters:    Size  Location     Type
  2160 ;;		None
  2161 ;; Auto vars:     Size  Location     Type
  2162 ;;  i               2    4[BANK0 ] unsigned int 
  2163 ;; Return value:  Size  Location     Type
  2164 ;;		None               void
  2165 ;; Registers used:
  2166 ;;		wreg, status,2, status,0, pclath, cstack
  2167 ;; Tracked objects:
  2168 ;;		On entry : 60/0
  2169 ;;		On exit  : 60/0
  2170 ;;		Unchanged: 0/0
  2171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2172 ;;      Params:         0       0       0       0       0
  2173 ;;      Locals:         0       2       0       0       0
  2174 ;;      Temps:          0       0       0       0       0
  2175 ;;      Totals:         0       2       0       0       0
  2176 ;;Total ram usage:        2 bytes
  2177 ;; Hardware stack levels used:    1
  2178 ;; Hardware stack levels required when called:    4
  2179 ;; This function calls:
  2180 ;;		_Reset
  2181 ;;		_WriteByte
  2182 ;;		_ReadByte
  2183 ;; This function is called by:
  2184 ;;		_main
  2185 ;; This function uses a non-reentrant model
  2186 ;;
  2187  02EC                     _DS18B20ReadFlash:	
  2188                           
  2189                           ;DS18B20.c: 84: unsigned int i;
  2190                           ;DS18B20.c: 85: if(Reset() == 0)
  2191                           
  2192                           ; Regs used in _DS18B20ReadFlash: [wreg+status,2+status,0+pclath+cstack]
  2193  02EC  2369  118A         	fcall	_Reset
  2194  02EE  3800               	iorlw	0
  2195  02EF  1D03               	skipz
  2196  02F0  2B0B               	goto	l6360
  2197                           
  2198                           ;DS18B20.c: 86: {
  2199                           ;DS18B20.c: 87: i=77;while(i>0){i--;}
  2200  02F1  304D               	movlw	77
  2201  02F2  00D2               	movwf	DS18B20ReadFlash@i
  2202  02F3  01D3               	clrf	DS18B20ReadFlash@i+1
  2203  02F4                     l6356:	
  2204  02F4  0853               	movf	DS18B20ReadFlash@i+1,w
  2205  02F5  0452               	iorwf	DS18B20ReadFlash@i,w
  2206  02F6  1903               	btfsc	3,2
  2207  02F7  2AFF               	goto	l6358
  2208  02F8  3001               	movlw	1
  2209  02F9  02D2               	subwf	DS18B20ReadFlash@i,f
  2210  02FA  3000               	movlw	0
  2211  02FB  1C03               	skipc
  2212  02FC  03D3               	decf	DS18B20ReadFlash@i+1,f
  2213  02FD  02D3               	subwf	DS18B20ReadFlash@i+1,f
  2214  02FE  2AF4               	goto	l6356
  2215  02FF                     l6358:	
  2216                           
  2217                           ;DS18B20.c: 88: WriteByte(0xCC);
  2218  02FF  30CC               	movlw	204
  2219  0300  232D  118A         	fcall	_WriteByte
  2220                           
  2221                           ;DS18B20.c: 89: WriteByte(0xBE);
  2222  0302  30BE               	movlw	190
  2223  0303  232D  118A         	fcall	_WriteByte
  2224                           
  2225                           ;DS18B20.c: 90: T_Lsb = ReadByte();
  2226  0305  23A2  118A         	fcall	_ReadByte
  2227  0307  00BA               	movwf	_T_Lsb
  2228                           
  2229                           ;DS18B20.c: 91: T_Msb = ReadByte();
  2230  0308  23A2               	fcall	_ReadByte
  2231  0309  00BC               	movwf	_T_Msb
  2232                           
  2233                           ;DS18B20.c: 92: }
  2234  030A  0008               	return
  2235  030B                     l6360:	
  2236                           
  2237                           ;DS18B20.c: 93: else
  2238                           ;DS18B20.c: 94: {
  2239                           ;DS18B20.c: 95: T_Lsb = 0;
  2240  030B  01BA               	clrf	_T_Lsb
  2241                           
  2242                           ;DS18B20.c: 96: T_Msb = 0;
  2243  030C  01BC               	clrf	_T_Msb
  2244  030D  0008               	return
  2245  030E                     __end_of_DS18B20ReadFlash:	
  2246  030E                     __ptext1064:	
  2247 ;; =============== function _DS18B20Convert ends ============
  2248                           
  2249                           
  2250 ;; *************** function _DS18B20Initial *****************
  2251 ;; Defined at:
  2252 ;;		line 101 in file "../DS18B20.c"
  2253 ;; Parameters:    Size  Location     Type
  2254 ;;		None
  2255 ;; Auto vars:     Size  Location     Type
  2256 ;;  i               2    4[BANK0 ] unsigned int 
  2257 ;; Return value:  Size  Location     Type
  2258 ;;		None               void
  2259 ;; Registers used:
  2260 ;;		wreg, status,2, status,0, pclath, cstack
  2261 ;; Tracked objects:
  2262 ;;		On entry : 7F/0
  2263 ;;		On exit  : 60/0
  2264 ;;		Unchanged: 0/0
  2265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2266 ;;      Params:         0       0       0       0       0
  2267 ;;      Locals:         0       2       0       0       0
  2268 ;;      Temps:          0       0       0       0       0
  2269 ;;      Totals:         0       2       0       0       0
  2270 ;;Total ram usage:        2 bytes
  2271 ;; Hardware stack levels used:    1
  2272 ;; Hardware stack levels required when called:    4
  2273 ;; This function calls:
  2274 ;;		_Reset
  2275 ;;		_WriteByte
  2276 ;; This function is called by:
  2277 ;;		_main
  2278 ;; This function uses a non-reentrant model
  2279 ;;
  2280  030E                     _DS18B20Initial:	
  2281                           
  2282                           ;DS18B20.c: 102: unsigned int i;
  2283                           ;DS18B20.c: 103: if(Reset() == 0)
  2284                           
  2285                           ; Regs used in _DS18B20Initial: [wreg+status,2+status,0+pclath+cstack]
  2286  030E  2369  118A         	fcall	_Reset
  2287  0310  3800               	iorlw	0
  2288  0311  1D03               	skipz
  2289  0312  0008               	return
  2290                           
  2291                           ;DS18B20.c: 104: {
  2292                           ;DS18B20.c: 105: i=77;while(i>0){i--;}
  2293  0313  304D               	movlw	77
  2294  0314  00D2               	movwf	DS18B20Initial@i
  2295  0315  01D3               	clrf	DS18B20Initial@i+1
  2296  0316                     l6326:	
  2297  0316  0853               	movf	DS18B20Initial@i+1,w
  2298  0317  0452               	iorwf	DS18B20Initial@i,w
  2299  0318  1903               	btfsc	3,2
  2300  0319  2B1F               	goto	l6328
  2301  031A  3001               	movlw	1
  2302  031B  02D2               	subwf	DS18B20Initial@i,f
  2303  031C  1C03               	skipc
  2304  031D  03D3               	decf	DS18B20Initial@i+1,f
  2305  031E  2B16               	goto	l6326
  2306  031F                     l6328:	
  2307                           
  2308                           ;DS18B20.c: 106: WriteByte(0xCC);
  2309  031F  30CC               	movlw	204
  2310  0320  232D  118A         	fcall	_WriteByte
  2311                           
  2312                           ;DS18B20.c: 107: WriteByte(0x4E);
  2313  0322  304E               	movlw	78
  2314  0323  232D  118A         	fcall	_WriteByte
  2315                           
  2316                           ;DS18B20.c: 108: WriteByte(0x00);
  2317  0325  3000               	movlw	0
  2318  0326  232D  118A         	fcall	_WriteByte
  2319                           
  2320                           ;DS18B20.c: 109: WriteByte(0x00);
  2321  0328  3000               	movlw	0
  2322  0329  232D  118A         	fcall	_WriteByte
  2323                           
  2324                           ;DS18B20.c: 110: WriteByte(0x7F);
  2325  032B  307F               	movlw	127
  2326  032C  2B2D               	ljmp	_WriteByte
  2327  032D                     __end_of_DS18B20Initial:	
  2328  032D                     __ptext1067:	
  2329 ;; =============== function _ReadByte ends ============
  2330                           
  2331                           
  2332 ;; *************** function _WriteByte *****************
  2333 ;; Defined at:
  2334 ;;		line 24 in file "../DS18B20.c"
  2335 ;; Parameters:    Size  Location     Type
  2336 ;;  dat             1    wreg     unsigned char 
  2337 ;; Auto vars:     Size  Location     Type
  2338 ;;  dat             1    0[BANK0 ] unsigned char 
  2339 ;;  i               2    2[BANK0 ] unsigned int 
  2340 ;;  j               1    1[BANK0 ] unsigned char 
  2341 ;; Return value:  Size  Location     Type
  2342 ;;		None               void
  2343 ;; Registers used:
  2344 ;;		wreg, status,2, status,0
  2345 ;; Tracked objects:
  2346 ;;		On entry : 60/0
  2347 ;;		On exit  : 60/0
  2348 ;;		Unchanged: 0/0
  2349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2350 ;;      Params:         0       0       0       0       0
  2351 ;;      Locals:         0       4       0       0       0
  2352 ;;      Temps:          0       0       0       0       0
  2353 ;;      Totals:         0       4       0       0       0
  2354 ;;Total ram usage:        4 bytes
  2355 ;; Hardware stack levels used:    1
  2356 ;; Hardware stack levels required when called:    3
  2357 ;; This function calls:
  2358 ;;		Nothing
  2359 ;; This function is called by:
  2360 ;;		_DS18B20Convert
  2361 ;;		_DS18B20ReadFlash
  2362 ;;		_DS18B20Initial
  2363 ;; This function uses a non-reentrant model
  2364 ;;
  2365  032D                     _WriteByte:	
  2366                           
  2367                           ; Regs used in _WriteByte: [wreg+status,2+status,0]
  2368                           ;WriteByte@dat stored from wreg
  2369  032D  00CE               	movwf	WriteByte@dat
  2370                           
  2371                           ;DS18B20.c: 25: unsigned int i;
  2372                           ;DS18B20.c: 26: unsigned char j;
  2373                           ;DS18B20.c: 27: for(j=0;j<8;j++)
  2374  032E  01CF               	clrf	WriteByte@j
  2375  032F                     l2734:	
  2376                           
  2377                           ;DS18B20.c: 28: {
  2378                           ;DS18B20.c: 29: if(dat & 0x01){
  2379  032F  1C4E               	btfss	WriteByte@dat,0
  2380  0330  2B4B               	goto	l2736
  2381                           
  2382                           ;DS18B20.c: 30: TRISA0=0;
  2383  0331  1683               	bsf	3,5	;RP0=1, select bank1
  2384  0332  1005               	bcf	5,0
  2385                           
  2386                           ;DS18B20.c: 31: RA0=0;
  2387  0333  1283               	bcf	3,5	;RP0=0, select bank0
  2388  0334  1005               	bcf	5,0
  2389                           
  2390                           ;DS18B20.c: 32: _nop();_nop();_nop();_nop();_nop();_nop();
  2391  0335  0000               	nop
  2392  0336  0000               	nop
  2393  0337  0000               	nop
  2394  0338  0000               	nop
  2395  0339  0000               	nop
  2396  033A  0000               	nop
  2397                           
  2398                           ;DS18B20.c: 33: TRISA0=1;
  2399  033B  1683               	bsf	3,5	;RP0=1, select bank1
  2400  033C  3005               	movlw	5
  2401  033D  1303               	bcf	3,6	;RP1=0, select bank1
  2402  033E  1405               	bsf	5,0
  2403                           
  2404                           ;DS18B20.c: 34: i=5;while(i>0){i--;}
  2405  033F  1283               	bcf	3,5	;RP0=0, select bank0
  2406  0340  00D0               	movwf	WriteByte@i
  2407  0341  01D1               	clrf	WriteByte@i+1
  2408  0342                     l6144:	
  2409  0342  0851               	movf	WriteByte@i+1,w
  2410  0343  0450               	iorwf	WriteByte@i,w
  2411  0344  1903               	btfsc	3,2
  2412  0345  2B5F               	goto	l2740
  2413  0346  3001               	movlw	1
  2414  0347  02D0               	subwf	WriteByte@i,f
  2415  0348  1C03               	skipc
  2416  0349  03D1               	decf	WriteByte@i+1,f
  2417  034A  2B42               	goto	l6144
  2418  034B                     l2736:	
  2419                           
  2420                           ;DS18B20.c: 36: TRISA0 = 0;
  2421  034B  1683               	bsf	3,5	;RP0=1, select bank1
  2422  034C  1005               	bcf	5,0
  2423                           
  2424                           ;DS18B20.c: 37: RA0 = 0;
  2425  034D  1283               	bcf	3,5	;RP0=0, select bank0
  2426  034E  3005               	movlw	5
  2427  034F  1005               	bcf	5,0
  2428                           
  2429                           ;DS18B20.c: 38: i=5;while(i>0){i--;}
  2430  0350  00D0               	movwf	WriteByte@i
  2431  0351  01D1               	clrf	WriteByte@i+1
  2432  0352                     l6150:	
  2433  0352  0851               	movf	WriteByte@i+1,w
  2434  0353  0450               	iorwf	WriteByte@i,w
  2435  0354  1903               	btfsc	3,2
  2436  0355  2B5B               	goto	l2743
  2437  0356  3001               	movlw	1
  2438  0357  02D0               	subwf	WriteByte@i,f
  2439  0358  1C03               	skipc
  2440  0359  03D1               	decf	WriteByte@i+1,f
  2441  035A  2B52               	goto	l6150
  2442  035B                     l2743:	
  2443                           
  2444                           ;DS18B20.c: 39: TRISA0 = 1;
  2445  035B  1683               	bsf	3,5	;RP0=1, select bank1
  2446  035C  1405               	bsf	5,0
  2447                           
  2448                           ;DS18B20.c: 40: _nop();_nop();
  2449  035D  0000               	nop
  2450  035E  0000               	nop
  2451  035F                     l2740:	
  2452                           
  2453                           ;DS18B20.c: 41: }
  2454                           ;DS18B20.c: 42: dat = dat >> 1;
  2455  035F  1283               	bcf	3,5	;RP0=0, select bank0
  2456  0360  3008               	movlw	8
  2457  0361  1303               	bcf	3,6	;RP1=0, select bank0
  2458  0362  1003               	clrc
  2459  0363  0CCE               	rrf	WriteByte@dat,f
  2460  0364  0ACF               	incf	WriteByte@j,f
  2461  0365  024F               	subwf	WriteByte@j,w
  2462  0366  1803               	btfsc	3,0
  2463  0367  0008               	return
  2464  0368  2B2F               	goto	l2734
  2465  0369                     __end_of_WriteByte:	
  2466  0369                     __ptext1075:	
  2467 ;; =============== function _i2c_Restart ends ============
  2468                           
  2469                           
  2470 ;; *************** function _Reset *****************
  2471 ;; Defined at:
  2472 ;;		line 6 in file "../DS18B20.c"
  2473 ;; Parameters:    Size  Location     Type
  2474 ;;		None
  2475 ;; Auto vars:     Size  Location     Type
  2476 ;;  i               2    1[BANK0 ] unsigned int 
  2477 ;;  k               1    0[BANK0 ] unsigned char 
  2478 ;; Return value:  Size  Location     Type
  2479 ;;                  1    wreg      unsigned char 
  2480 ;; Registers used:
  2481 ;;		wreg, status,2, status,0
  2482 ;; Tracked objects:
  2483 ;;		On entry : 40/0
  2484 ;;		On exit  : 60/0
  2485 ;;		Unchanged: FFF9F/0
  2486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2487 ;;      Params:         0       0       0       0       0
  2488 ;;      Locals:         0       3       0       0       0
  2489 ;;      Temps:          0       0       0       0       0
  2490 ;;      Totals:         0       3       0       0       0
  2491 ;;Total ram usage:        3 bytes
  2492 ;; Hardware stack levels used:    1
  2493 ;; Hardware stack levels required when called:    3
  2494 ;; This function calls:
  2495 ;;		Nothing
  2496 ;; This function is called by:
  2497 ;;		_DS18B20Convert
  2498 ;;		_DS18B20ReadFlash
  2499 ;;		_DS18B20Initial
  2500 ;; This function uses a non-reentrant model
  2501 ;;
  2502  0369                     _Reset:	
  2503                           
  2504                           ;DS18B20.c: 7: unsigned int i;
  2505                           ;DS18B20.c: 8: unsigned char k;
  2506                           ;DS18B20.c: 9: TRISA0 = 0;
  2507                           
  2508                           ; Regs used in _Reset: [wreg+status,2+status,0]
  2509  0369  1683               	bsf	3,5	;RP0=1, select bank1
  2510  036A  1005               	bcf	5,0
  2511                           
  2512                           ;DS18B20.c: 10: RA0 = 0;
  2513  036B  1283               	bcf	3,5	;RP0=0, select bank0
  2514  036C  3043               	movlw	67
  2515  036D  1005               	bcf	5,0
  2516                           
  2517                           ;DS18B20.c: 11: i=67;while(i>0){i--;}
  2518  036E  00CF               	movwf	Reset@i
  2519  036F  01D0               	clrf	Reset@i+1
  2520  0370                     l5976:	
  2521  0370  0850               	movf	Reset@i+1,w
  2522  0371  044F               	iorwf	Reset@i,w
  2523  0372  1903               	btfsc	3,2
  2524  0373  2B7B               	goto	l2722
  2525  0374  3001               	movlw	1
  2526  0375  02CF               	subwf	Reset@i,f
  2527  0376  3000               	movlw	0
  2528  0377  1C03               	skipc
  2529  0378  03D0               	decf	Reset@i+1,f
  2530  0379  02D0               	subwf	Reset@i+1,f
  2531  037A  2B70               	goto	l5976
  2532  037B                     l2722:	
  2533                           
  2534                           ;DS18B20.c: 12: TRISA0 = 1;
  2535  037B  1683               	bsf	3,5	;RP0=1, select bank1
  2536  037C  3006               	movlw	6
  2537  037D  1405               	bsf	5,0
  2538                           
  2539                           ;DS18B20.c: 13: i=6;while(i>0){i--;}
  2540  037E  1283               	bcf	3,5	;RP0=0, select bank0
  2541  037F  00CF               	movwf	Reset@i
  2542  0380  01D0               	clrf	Reset@i+1
  2543  0381                     l5982:	
  2544  0381  0850               	movf	Reset@i+1,w
  2545  0382  044F               	iorwf	Reset@i,w
  2546  0383  1903               	btfsc	3,2
  2547  0384  2B8C               	goto	l2725
  2548  0385  3001               	movlw	1
  2549  0386  02CF               	subwf	Reset@i,f
  2550  0387  3000               	movlw	0
  2551  0388  1C03               	skipc
  2552  0389  03D0               	decf	Reset@i+1,f
  2553  038A  02D0               	subwf	Reset@i+1,f
  2554  038B  2B81               	goto	l5982
  2555  038C                     l2725:	
  2556                           
  2557                           ;DS18B20.c: 14: if(RA0 == 0){
  2558  038C  1805               	btfsc	5,0
  2559  038D  2B90               	goto	l2726
  2560                           
  2561                           ;DS18B20.c: 15: k = 0;
  2562  038E  01CE               	clrf	Reset@k
  2563                           
  2564                           ;DS18B20.c: 16: }else{
  2565  038F  2B92               	goto	l5986
  2566  0390                     l2726:	
  2567                           
  2568                           ;DS18B20.c: 17: k = 1;
  2569  0390  01CE               	clrf	Reset@k
  2570  0391  0ACE               	incf	Reset@k,f
  2571  0392                     l5986:	
  2572                           
  2573                           ;DS18B20.c: 18: }
  2574                           ;DS18B20.c: 19: i=31;while(i>0){i--;}
  2575  0392  301F               	movlw	31
  2576  0393  00CF               	movwf	Reset@i
  2577  0394  01D0               	clrf	Reset@i+1
  2578  0395                     l5990:	
  2579  0395  0850               	movf	Reset@i+1,w
  2580  0396  044F               	iorwf	Reset@i,w
  2581  0397  1903               	btfsc	3,2
  2582  0398  2BA0               	goto	l5992
  2583  0399  3001               	movlw	1
  2584  039A  02CF               	subwf	Reset@i,f
  2585  039B  3000               	movlw	0
  2586  039C  1C03               	skipc
  2587  039D  03D0               	decf	Reset@i+1,f
  2588  039E  02D0               	subwf	Reset@i+1,f
  2589  039F  2B95               	goto	l5990
  2590  03A0                     l5992:	
  2591                           
  2592                           ;DS18B20.c: 20: return k;
  2593  03A0  084E               	movf	Reset@k,w
  2594  03A1  0008               	return
  2595  03A2                     __end_of_Reset:	
  2596  03A2                     __ptext1066:	
  2597 ;; =============== function _DataHandle ends ============
  2598                           
  2599                           
  2600 ;; *************** function _ReadByte *****************
  2601 ;; Defined at:
  2602 ;;		line 47 in file "../DS18B20.c"
  2603 ;; Parameters:    Size  Location     Type
  2604 ;;		None
  2605 ;; Auto vars:     Size  Location     Type
  2606 ;;  i               2    0[BANK0 ] unsigned int 
  2607 ;;  j               1    3[BANK0 ] unsigned char 
  2608 ;;  buf             1    2[BANK0 ] unsigned char 
  2609 ;; Return value:  Size  Location     Type
  2610 ;;                  1    wreg      unsigned char 
  2611 ;; Registers used:
  2612 ;;		wreg, status,2, status,0
  2613 ;; Tracked objects:
  2614 ;;		On entry : 60/0
  2615 ;;		On exit  : 60/0
  2616 ;;		Unchanged: 0/0
  2617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2618 ;;      Params:         0       0       0       0       0
  2619 ;;      Locals:         0       4       0       0       0
  2620 ;;      Temps:          0       0       0       0       0
  2621 ;;      Totals:         0       4       0       0       0
  2622 ;;Total ram usage:        4 bytes
  2623 ;; Hardware stack levels used:    1
  2624 ;; Hardware stack levels required when called:    3
  2625 ;; This function calls:
  2626 ;;		Nothing
  2627 ;; This function is called by:
  2628 ;;		_DS18B20ReadFlash
  2629 ;; This function uses a non-reentrant model
  2630 ;;
  2631  03A2                     _ReadByte:	
  2632                           
  2633                           ;DS18B20.c: 48: unsigned int i;
  2634                           ;DS18B20.c: 49: unsigned char j,buf = 0;
  2635                           
  2636                           ; Regs used in _ReadByte: [wreg+status,2+status,0]
  2637  03A2  01D0               	clrf	ReadByte@buf
  2638                           
  2639                           ;DS18B20.c: 50: for(j=1; j<=8; j++)
  2640  03A3  01D1               	clrf	ReadByte@j
  2641  03A4  0AD1               	incf	ReadByte@j,f
  2642                           
  2643                           ;DS18B20.c: 51: {
  2644                           ;DS18B20.c: 52: buf = buf >> 1;
  2645  03A5  1003               	clrc
  2646  03A6                     L6:	
  2647  03A6  0CD0               	rrf	ReadByte@buf,f
  2648                           
  2649                           ;DS18B20.c: 53: TRISA0 = 0;
  2650  03A7  1683               	bsf	3,5	;RP0=1, select bank1
  2651  03A8  1005               	bcf	5,0
  2652                           
  2653                           ;DS18B20.c: 54: RA0 = 0;
  2654  03A9  1283               	bcf	3,5	;RP0=0, select bank0
  2655  03AA  1005               	bcf	5,0
  2656                           
  2657                           ;DS18B20.c: 55: _nop();_nop();
  2658  03AB  0000               	nop
  2659  03AC  0000               	nop
  2660                           
  2661                           ;DS18B20.c: 56: TRISA0 = 1;
  2662  03AD  1683               	bsf	3,5	;RP0=1, select bank1
  2663  03AE  1303               	bcf	3,6	;RP1=0, select bank1
  2664  03AF  1405               	bsf	5,0
  2665                           
  2666                           ;DS18B20.c: 57: _nop();_nop();_nop();_nop();_nop();_nop();
  2667  03B0  0000               	nop
  2668  03B1  0000               	nop
  2669  03B2  0000               	nop
  2670  03B3  0000               	nop
  2671  03B4  0000               	nop
  2672  03B5  0000               	nop
  2673                           
  2674                           ;DS18B20.c: 58: if(RA0 == 1){
  2675  03B6  1283               	bcf	3,5	;RP0=0, select bank0
  2676  03B7  1303               	bcf	3,6	;RP1=0, select bank0
  2677  03B8  1805               	btfsc	5,0
  2678                           
  2679                           ;DS18B20.c: 59: buf |= 0x80;
  2680  03B9  17D0               	bsf	ReadByte@buf,7
  2681                           
  2682                           ;DS18B20.c: 60: }
  2683                           ;DS18B20.c: 61: i=4;while(i>0){i--;}
  2684  03BA  3004               	movlw	4
  2685  03BB  00CE               	movwf	ReadByte@i
  2686  03BC  01CF               	clrf	ReadByte@i+1
  2687  03BD                     l6170:	
  2688  03BD  084F               	movf	ReadByte@i+1,w
  2689  03BE  044E               	iorwf	ReadByte@i,w
  2690  03BF  1903               	btfsc	3,2
  2691  03C0  2BC6               	goto	l6172
  2692  03C1  3001               	movlw	1
  2693  03C2  02CE               	subwf	ReadByte@i,f
  2694  03C3  1C03               	skipc
  2695  03C4  03CF               	decf	ReadByte@i+1,f
  2696  03C5  2BBD               	goto	l6170
  2697  03C6                     l6172:	
  2698  03C6  3009               	movlw	9
  2699  03C7  0AD1               	incf	ReadByte@j,f
  2700  03C8  0251               	subwf	ReadByte@j,w
  2701  03C9  1C03               	skipc
  2702  03CA  2BA6               	goto	L6
  2703                           
  2704                           ;DS18B20.c: 62: }
  2705                           ;DS18B20.c: 63: return buf;
  2706  03CB  0850               	movf	ReadByte@buf,w
  2707  03CC  0008               	return
  2708  03CD                     __end_of_ReadByte:	
  2709                           
  2710                           	psect	text1065
  2711  000F                     __ptext1065:	
  2712 ;; =============== function _DS18B20Initial ends ============
  2713                           
  2714                           
  2715 ;; *************** function _DataHandle *****************
  2716 ;; Defined at:
  2717 ;;		line 173 in file "../Main.c"
  2718 ;; Parameters:    Size  Location     Type
  2719 ;;		None
  2720 ;; Auto vars:     Size  Location     Type
  2721 ;;  snNumL          1    8[BANK0 ] unsigned char 
  2722 ;;  snNumH          1    7[BANK0 ] unsigned char 
  2723 ;; Return value:  Size  Location     Type
  2724 ;;		None               void
  2725 ;; Registers used:
  2726 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2727 ;; Tracked objects:
  2728 ;;		On entry : 60/0
  2729 ;;		On exit  : 60/0
  2730 ;;		Unchanged: 0/0
  2731 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2732 ;;      Params:         0       0       0       0       0
  2733 ;;      Locals:         0       2       0       0       0
  2734 ;;      Temps:          0       2       0       0       0
  2735 ;;      Totals:         0       4       0       0       0
  2736 ;;Total ram usage:        4 bytes
  2737 ;; Hardware stack levels used:    1
  2738 ;; Hardware stack levels required when called:    5
  2739 ;; This function calls:
  2740 ;;		_RelayOn
  2741 ;;		_RelayOff
  2742 ;;		_WriteEE
  2743 ;;		_ReadEE
  2744 ;;		_WriteSN
  2745 ;;		_ReadSN
  2746 ;; This function is called by:
  2747 ;;		_main
  2748 ;; This function uses a non-reentrant model
  2749 ;;
  2750  000F                     _DataHandle:	
  2751                           
  2752                           ;Main.c: 175: if(rcvCommand == 0x00){
  2753                           
  2754                           ; Regs used in _DataHandle: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2755  000F  08BE               	movf	_rcvCommand,f
  2756  0010  1D03               	skipz
  2757  0011  2827               	goto	l6184
  2758                           
  2759                           ;Main.c: 176: sndCommand = rcvCommand;
  2760  0012  083E               	movf	_rcvCommand,w
  2761  0013  00C2               	movwf	_sndCommand
  2762                           
  2763                           ;Main.c: 177: sndLength = rcvLength;
  2764  0014  0840               	movf	_rcvLength,w
  2765  0015  00C4               	movwf	_sndLength
  2766                           
  2767                           ;Main.c: 178: sndData[0] = rcvData[0];
  2768  0016  0820               	movf	_rcvData,w
  2769  0017  00C5               	movwf	_sndData
  2770                           
  2771                           ;Main.c: 179: sndData[1] = rcvData[1];
  2772  0018  0821               	movf	_rcvData+1,w
  2773  0019  00C6               	movwf	_sndData+1
  2774                           
  2775                           ;Main.c: 180: sndData[2] = rcvData[2];
  2776  001A  0822               	movf	_rcvData+2,w
  2777  001B  00C7               	movwf	_sndData+2
  2778                           
  2779                           ;Main.c: 181: sndData[3] = rcvData[3];
  2780  001C  0823               	movf	_rcvData+3,w
  2781  001D  00C8               	movwf	_sndData+3
  2782                           
  2783                           ;Main.c: 182: sndData[4] = rcvData[4];
  2784  001E  0824               	movf	_rcvData+4,w
  2785  001F  00C9               	movwf	_sndData+4
  2786                           
  2787                           ;Main.c: 183: sndData[5] = rcvData[5];
  2788  0020  0825               	movf	_rcvData+5,w
  2789  0021  00CA               	movwf	_sndData+5
  2790                           
  2791                           ;Main.c: 184: sndData[6] = rcvData[6];
  2792  0022  0826               	movf	_rcvData+6,w
  2793  0023  00CB               	movwf	_sndData+6
  2794                           
  2795                           ;Main.c: 185: sndData[7] = rcvData[7];
  2796  0024  0827               	movf	_rcvData+7,w
  2797  0025  00CC               	movwf	_sndData+7
  2798                           
  2799                           ;Main.c: 187: }else if(rcvCommand == 0x11){
  2800  0026  0008               	return
  2801  0027                     l6184:	
  2802  0027  083E               	movf	_rcvCommand,w
  2803  0028  3A11               	xorlw	17
  2804  0029  1D03               	skipz
  2805  002A  287F               	goto	l6192
  2806                           
  2807                           ; Regs used in _RelayOn: []
  2808                           
  2809                           ;Main.c: 188: RelayOn();
  2810  002B  1406               	bsf	6,0
  2811  002C  287B               	goto	l6188
  2812  002D                     l6194:	
  2813                           
  2814                           ; Regs used in _RelayOff: []
  2815                           
  2816                           ;Main.c: 193: RelayOff();
  2817  002D  1006               	bcf	6,0
  2818  002E  287B               	goto	l6188
  2819  002F                     l6202:	
  2820                           
  2821                           ; Regs used in _RelayOn: []
  2822                           
  2823                           ;Main.c: 198: RelayOn();
  2824  002F  1406               	bsf	6,0
  2825                           
  2826                           ;Main.c: 199: timer1_counter = 0;
  2827  0030  01AE               	clrf	_timer1_counter
  2828  0031  01AF               	clrf	_timer1_counter+1
  2829                           
  2830                           ;Main.c: 200: delay_flag = 1;
  2831  0032  01AA               	clrf	_delay_flag
  2832  0033  0AAA               	incf	_delay_flag,f
  2833  0034  01AB               	clrf	_delay_flag+1
  2834  0035  287B               	goto	l6188
  2835  0036                     l6214:	
  2836                           
  2837                           ;Main.c: 205: CFG_H = CFG_H & 0x7F | rcvData[0] << 7 & 0x80;
  2838  0036  0820               	movf	_rcvData,w
  2839  0037  00D3               	movwf	??_DataHandle
  2840  0038  3007               	movlw	7
  2841  0039                     u1375:	
  2842  0039  1003               	clrc
  2843  003A  0DD3               	rlf	??_DataHandle,f
  2844  003B  3EFF               	addlw	-1
  2845  003C  1D03               	skipz
  2846  003D  2839               	goto	u1375
  2847  003E  3080               	movlw	128
  2848  003F  0553               	andwf	??_DataHandle,w
  2849  0040  00D4               	movwf	??_DataHandle+1
  2850  0041  0831               	movf	_CFG_H,w
  2851  0042  397F               	andlw	127
  2852  0043  285D               	goto	L2
  2853  0044                     l6222:	
  2854                           
  2855                           ;Main.c: 210: CFG_L = CFG_L & 0x7F | rcvData[0] << 7 & 0x80;
  2856  0044  0820               	movf	_rcvData,w
  2857  0045  00D3               	movwf	??_DataHandle
  2858  0046  3007               	movlw	7
  2859  0047                     u1395:	
  2860  0047  1003               	clrc
  2861  0048  0DD3               	rlf	??_DataHandle,f
  2862  0049  3EFF               	addlw	-1
  2863  004A  1D03               	skipz
  2864  004B  2847               	goto	u1395
  2865  004C  3080               	movlw	128
  2866  004D  0553               	andwf	??_DataHandle,w
  2867  004E  00D4               	movwf	??_DataHandle+1
  2868  004F  0832               	movf	_CFG_L,w
  2869  0050  397F               	andlw	127
  2870  0051  286A               	goto	L3
  2871  0052                     l6230:	
  2872                           
  2873                           ;Main.c: 215: CFG_H = CFG_H & 0xF3 | rcvData[0] << 2 & 0x0C;
  2874  0052  0820               	movf	_rcvData,w
  2875  0053  00D3               	movwf	??_DataHandle
  2876  0054  300C               	movlw	12
  2877  0055  1003               	clrc
  2878  0056  0DD3               	rlf	??_DataHandle,f
  2879  0057  1003               	clrc
  2880  0058  0DD3               	rlf	??_DataHandle,f
  2881  0059  0553               	andwf	??_DataHandle,w
  2882  005A  00D4               	movwf	??_DataHandle+1
  2883  005B  0831               	movf	_CFG_H,w
  2884  005C  39F3               	andlw	243
  2885  005D                     L2:	
  2886  005D  0454               	iorwf	??_DataHandle+1,w
  2887  005E  2872               	goto	L4
  2888  005F                     l6238:	
  2889                           
  2890                           ;Main.c: 220: CFG_L = CFG_L & 0xF3 | rcvData[0] << 2 & 0x0C;
  2891  005F  0820               	movf	_rcvData,w
  2892  0060  00D3               	movwf	??_DataHandle
  2893  0061  300C               	movlw	12
  2894  0062  1003               	clrc
  2895  0063  0DD3               	rlf	??_DataHandle,f
  2896  0064  1003               	clrc
  2897  0065  0DD3               	rlf	??_DataHandle,f
  2898  0066  0553               	andwf	??_DataHandle,w
  2899  0067  00D4               	movwf	??_DataHandle+1
  2900  0068  0832               	movf	_CFG_L,w
  2901  0069  39F3               	andlw	243
  2902  006A                     L3:	
  2903  006A  0454               	iorwf	??_DataHandle+1,w
  2904  006B  287A               	goto	L5
  2905  006C                     l6246:	
  2906                           
  2907                           ;Main.c: 225: CFG_H = CFG_H & 0xFC | rcvData[0] & 0x03;
  2908  006C  3003               	movlw	3
  2909  006D  0520               	andwf	_rcvData,w
  2910  006E  00D3               	movwf	??_DataHandle
  2911  006F  0831               	movf	_CFG_H,w
  2912  0070  39FC               	andlw	252
  2913  0071  0453               	iorwf	??_DataHandle,w
  2914  0072                     L4:	
  2915  0072  00B1               	movwf	_CFG_H
  2916  0073  287B               	goto	l6188
  2917  0074                     l6254:	
  2918                           
  2919                           ;Main.c: 230: CFG_L = CFG_L & 0xFC | rcvData[0] & 0x03;
  2920  0074  3003               	movlw	3
  2921  0075  0520               	andwf	_rcvData,w
  2922  0076  00D3               	movwf	??_DataHandle
  2923  0077  0832               	movf	_CFG_L,w
  2924  0078  39FC               	andlw	252
  2925  0079  0453               	iorwf	??_DataHandle,w
  2926  007A                     L5:	
  2927  007A  00B2               	movwf	_CFG_L
  2928  007B                     l6188:	
  2929                           
  2930                           ;Main.c: 189: sndCommand = rcvCommand;
  2931  007B  083E               	movf	_rcvCommand,w
  2932  007C  00C2               	movwf	_sndCommand
  2933                           
  2934                           ;Main.c: 190: sndLength = 0;
  2935  007D  01C4               	clrf	_sndLength
  2936                           
  2937                           ;Main.c: 192: }else if(rcvCommand == 0x12){
  2938  007E  0008               	return
  2939  007F                     l6192:	
  2940  007F  083E               	movf	_rcvCommand,w
  2941  0080  3A12               	xorlw	18
  2942  0081  1903               	btfsc	3,2
  2943  0082  282D               	goto	l6194
  2944  0083  083E               	movf	_rcvCommand,w
  2945  0084  3A35               	xorlw	53
  2946  0085  1903               	btfsc	3,2
  2947  0086  282F               	goto	l6202
  2948  0087  083E               	movf	_rcvCommand,w
  2949  0088  3A13               	xorlw	19
  2950  0089  1903               	btfsc	3,2
  2951  008A  2836               	goto	l6214
  2952  008B  083E               	movf	_rcvCommand,w
  2953  008C  3A14               	xorlw	20
  2954  008D  1903               	btfsc	3,2
  2955  008E  2844               	goto	l6222
  2956  008F  083E               	movf	_rcvCommand,w
  2957  0090  3A15               	xorlw	21
  2958  0091  1903               	btfsc	3,2
  2959  0092  2852               	goto	l6230
  2960  0093  083E               	movf	_rcvCommand,w
  2961  0094  3A16               	xorlw	22
  2962  0095  1903               	btfsc	3,2
  2963  0096  285F               	goto	l6238
  2964  0097  083E               	movf	_rcvCommand,w
  2965  0098  3A17               	xorlw	23
  2966  0099  1903               	btfsc	3,2
  2967  009A  286C               	goto	l6246
  2968  009B  083E               	movf	_rcvCommand,w
  2969  009C  3A18               	xorlw	24
  2970  009D  1903               	btfsc	3,2
  2971  009E  2874               	goto	l6254
  2972  009F  083E               	movf	_rcvCommand,w
  2973  00A0  3A21               	xorlw	33
  2974  00A1  1D03               	skipz
  2975  00A2  28AE               	goto	l6264
  2976                           
  2977                           ;Main.c: 235: sndCommand = rcvCommand;
  2978  00A3  083E               	movf	_rcvCommand,w
  2979  00A4  00C2               	movwf	_sndCommand
  2980                           
  2981                           ;Main.c: 236: sndLength = 3;
  2982  00A5  3003               	movlw	3
  2983  00A6  00C4               	movwf	_sndLength
  2984                           
  2985                           ;Main.c: 237: sndData[0] = H_M;
  2986  00A7  0834               	movf	_H_M,w
  2987  00A8  00C5               	movwf	_sndData
  2988                           
  2989                           ;Main.c: 238: sndData[1] = H_L;
  2990  00A9  0833               	movf	_H_L,w
  2991  00AA  00C6               	movwf	_sndData+1
  2992                           
  2993                           ;Main.c: 239: sndData[2] = H_S;
  2994  00AB  0835               	movf	_H_S,w
  2995  00AC  00C7               	movwf	_sndData+2
  2996                           
  2997                           ;Main.c: 241: }else if(rcvCommand == 0x22){
  2998  00AD  0008               	return
  2999  00AE                     l6264:	
  3000  00AE  083E               	movf	_rcvCommand,w
  3001  00AF  3A22               	xorlw	34
  3002  00B0  1D03               	skipz
  3003  00B1  28BD               	goto	l6268
  3004                           
  3005                           ;Main.c: 242: sndCommand = rcvCommand;
  3006  00B2  083E               	movf	_rcvCommand,w
  3007  00B3  00C2               	movwf	_sndCommand
  3008                           
  3009                           ;Main.c: 243: sndLength = 3;
  3010  00B4  3003               	movlw	3
  3011  00B5  00C4               	movwf	_sndLength
  3012                           
  3013                           ;Main.c: 244: sndData[0] = L_M;
  3014  00B6  0837               	movf	_L_M,w
  3015  00B7  00C5               	movwf	_sndData
  3016                           
  3017                           ;Main.c: 245: sndData[1] = L_L;
  3018  00B8  0836               	movf	_L_L,w
  3019  00B9  00C6               	movwf	_sndData+1
  3020                           
  3021                           ;Main.c: 246: sndData[2] = L_S;
  3022  00BA  0838               	movf	_L_S,w
  3023  00BB  00C7               	movwf	_sndData+2
  3024                           
  3025                           ;Main.c: 248: }else if(rcvCommand == 0x23){
  3026  00BC  0008               	return
  3027  00BD                     l6268:	
  3028  00BD  083E               	movf	_rcvCommand,w
  3029  00BE  3A23               	xorlw	35
  3030  00BF  1D03               	skipz
  3031  00C0  28CA               	goto	l6272
  3032                           
  3033                           ;Main.c: 249: sndCommand = rcvCommand;
  3034  00C1  083E               	movf	_rcvCommand,w
  3035  00C2  00C2               	movwf	_sndCommand
  3036                           
  3037                           ;Main.c: 250: sndLength = 2;
  3038  00C3  3002               	movlw	2
  3039  00C4  00C4               	movwf	_sndLength
  3040                           
  3041                           ;Main.c: 251: sndData[0] = T_M;
  3042  00C5  083B               	movf	_T_M,w
  3043  00C6  00C5               	movwf	_sndData
  3044                           
  3045                           ;Main.c: 252: sndData[1] = T_L;
  3046  00C7  0839               	movf	_T_L,w
  3047  00C8  00C6               	movwf	_sndData+1
  3048                           
  3049                           ;Main.c: 254: }else if(rcvCommand == 0x24){
  3050  00C9  0008               	return
  3051  00CA                     l6272:	
  3052  00CA  083E               	movf	_rcvCommand,w
  3053  00CB  3A24               	xorlw	36
  3054  00CC  1D03               	skipz
  3055  00CD  28E3               	goto	l6276
  3056                           
  3057                           ;Main.c: 255: sndCommand = rcvCommand;
  3058  00CE  083E               	movf	_rcvCommand,w
  3059  00CF  00C2               	movwf	_sndCommand
  3060                           
  3061                           ;Main.c: 256: sndLength = 8;
  3062  00D0  3008               	movlw	8
  3063  00D1  00C4               	movwf	_sndLength
  3064                           
  3065                           ;Main.c: 257: sndData[0] = H_M;
  3066  00D2  0834               	movf	_H_M,w
  3067  00D3  00C5               	movwf	_sndData
  3068                           
  3069                           ;Main.c: 258: sndData[1] = H_L;
  3070  00D4  0833               	movf	_H_L,w
  3071  00D5  00C6               	movwf	_sndData+1
  3072                           
  3073                           ;Main.c: 259: sndData[2] = H_S;
  3074  00D6  0835               	movf	_H_S,w
  3075  00D7  00C7               	movwf	_sndData+2
  3076                           
  3077                           ;Main.c: 260: sndData[3] = L_M;
  3078  00D8  0837               	movf	_L_M,w
  3079  00D9  00C8               	movwf	_sndData+3
  3080                           
  3081                           ;Main.c: 261: sndData[4] = L_L;
  3082  00DA  0836               	movf	_L_L,w
  3083  00DB  00C9               	movwf	_sndData+4
  3084                           
  3085                           ;Main.c: 262: sndData[5] = L_S;
  3086  00DC  0838               	movf	_L_S,w
  3087  00DD  00CA               	movwf	_sndData+5
  3088                           
  3089                           ;Main.c: 263: sndData[6] = T_M;
  3090  00DE  083B               	movf	_T_M,w
  3091  00DF  00CB               	movwf	_sndData+6
  3092                           
  3093                           ;Main.c: 264: sndData[7] = T_L;
  3094  00E0  0839               	movf	_T_L,w
  3095  00E1  00CC               	movwf	_sndData+7
  3096                           
  3097                           ;Main.c: 266: }else if(rcvCommand == 0x31){
  3098  00E2  0008               	return
  3099  00E3                     l6276:	
  3100  00E3  083E               	movf	_rcvCommand,w
  3101  00E4  3A31               	xorlw	49
  3102  00E5  1D03               	skipz
  3103  00E6  28F6               	goto	l6288
  3104                           
  3105                           ;Main.c: 267: WriteEE(rcvData[0], rcvData[1]);
  3106  00E7  0821               	movf	_rcvData+1,w
  3107  00E8  00CE               	movwf	?_WriteEE
  3108  00E9  0820               	movf	_rcvData,w
  3109  00EA  2153               	fcall	_WriteEE
  3110                           
  3111                           ;Main.c: 268: sndCommand = rcvCommand;
  3112  00EB  1283               	bcf	3,5	;RP0=0, select bank0
  3113  00EC  1303               	bcf	3,6	;RP1=0, select bank0
  3114  00ED  083E               	movf	_rcvCommand,w
  3115  00EE  00C2               	movwf	_sndCommand
  3116                           
  3117                           ;Main.c: 269: sndLength = 2;
  3118  00EF  3002               	movlw	2
  3119  00F0                     L1:	
  3120  00F0  00C4               	movwf	_sndLength
  3121                           
  3122                           ;Main.c: 270: sndData[0] = rcvData[0];
  3123  00F1  0820               	movf	_rcvData,w
  3124  00F2  00C5               	movwf	_sndData
  3125                           
  3126                           ;Main.c: 271: sndData[1] = rcvData[1];
  3127  00F3  0821               	movf	_rcvData+1,w
  3128  00F4  00C6               	movwf	_sndData+1
  3129                           
  3130                           ;Main.c: 272: }else if(rcvCommand == 0x32) {
  3131  00F5  0008               	return
  3132  00F6                     l6288:	
  3133  00F6  083E               	movf	_rcvCommand,w
  3134  00F7  3A32               	xorlw	50
  3135  00F8  1D03               	skipz
  3136  00F9  2904               	goto	l6294
  3137                           
  3138                           ;Main.c: 273: sndCommand = rcvCommand;
  3139  00FA  083E               	movf	_rcvCommand,w
  3140  00FB  00C2               	movwf	_sndCommand
  3141                           
  3142                           ;Main.c: 274: sndLength = 2;
  3143  00FC  3002               	movlw	2
  3144  00FD  00C4               	movwf	_sndLength
  3145                           
  3146                           ;Main.c: 275: sndData[0] = rcvData[0];
  3147  00FE  0820               	movf	_rcvData,w
  3148  00FF  00C5               	movwf	_sndData
  3149                           
  3150                           ;Main.c: 276: sndData[1] = ReadEE(rcvData[0]);
  3151  0100  0820               	movf	_rcvData,w
  3152  0101  217E               	fcall	_ReadEE
  3153  0102  00C6               	movwf	_sndData+1
  3154                           
  3155                           ;Main.c: 277: }else if(rcvCommand == 0x33){
  3156  0103  0008               	return
  3157  0104                     l6294:	
  3158  0104  083E               	movf	_rcvCommand,w
  3159  0105  3A33               	xorlw	51
  3160  0106  1D03               	skipz
  3161  0107  291A               	goto	l6310
  3162                           
  3163                           ;Main.c: 278: if(rcvLength == 0x02)
  3164  0108  0840               	movf	_rcvLength,w
  3165  0109  3A02               	xorlw	2
  3166  010A  1D03               	skipz
  3167  010B  0008               	return
  3168                           
  3169                           ;Main.c: 279: {
  3170                           ;Main.c: 280: unsigned char snNumH, snNumL;
  3171                           ;Main.c: 281: snNumH = rcvData[0];
  3172  010C  0820               	movf	_rcvData,w
  3173  010D  00D5               	movwf	DataHandle@snNumH
  3174                           
  3175                           ;Main.c: 282: snNumL = rcvData[1];
  3176  010E  0821               	movf	_rcvData+1,w
  3177  010F  00D6               	movwf	DataHandle@snNumL
  3178                           
  3179                           ;Main.c: 283: WriteSN(snNumH, snNumL);
  3180  0110  00D0               	movwf	?_WriteSN
  3181  0111  0855               	movf	DataHandle@snNumH,w
  3182  0112  2124  118A         	fcall	_WriteSN
  3183                           
  3184                           ;Main.c: 285: sndCommand = rcvCommand;
  3185  0114  1283               	bcf	3,5	;RP0=0, select bank0
  3186  0115  1303               	bcf	3,6	;RP1=0, select bank0
  3187  0116  083E               	movf	_rcvCommand,w
  3188  0117  00C2               	movwf	_sndCommand
  3189                           
  3190                           ;Main.c: 286: sndLength = rcvLength;
  3191  0118  0840               	movf	_rcvLength,w
  3192  0119  28F0               	goto	L1
  3193  011A                     l6310:	
  3194  011A  083E               	movf	_rcvCommand,w
  3195  011B  3A34               	xorlw	52
  3196  011C  1D03               	skipz
  3197  011D  287B               	goto	l6188
  3198                           
  3199                           ;Main.c: 291: sndCommand = rcvCommand;
  3200  011E  083E               	movf	_rcvCommand,w
  3201  011F  00C2               	movwf	_sndCommand
  3202                           
  3203                           ;Main.c: 292: sndLength = 6;
  3204  0120  3006               	movlw	6
  3205  0121  00C4               	movwf	_sndLength
  3206                           
  3207                           ;Main.c: 293: ReadSN(sndData);
  3208  0122  3045               	movlw	_sndData& (0+255)
  3209  0123  296D               	ljmp	_ReadSN
  3210  0124                     __end_of_DataHandle:	
  3211  0124                     __ptext1072:	
  3212 ;; =============== function _ReadSN ends ============
  3213                           
  3214                           
  3215 ;; *************** function _WriteSN *****************
  3216 ;; Defined at:
  3217 ;;		line 38 in file "../eeprom.c"
  3218 ;; Parameters:    Size  Location     Type
  3219 ;;  numH            1    wreg     unsigned char 
  3220 ;;  numL            1    2[BANK0 ] unsigned char 
  3221 ;; Auto vars:     Size  Location     Type
  3222 ;;  numH            1    3[BANK0 ] unsigned char 
  3223 ;; Return value:  Size  Location     Type
  3224 ;;		None               void
  3225 ;; Registers used:
  3226 ;;		wreg, status,2, status,0, pclath, cstack
  3227 ;; Tracked objects:
  3228 ;;		On entry : 60/0
  3229 ;;		On exit  : 0/0
  3230 ;;		Unchanged: 0/0
  3231 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3232 ;;      Params:         0       1       0       0       0
  3233 ;;      Locals:         0       1       0       0       0
  3234 ;;      Temps:          0       0       0       0       0
  3235 ;;      Totals:         0       2       0       0       0
  3236 ;;Total ram usage:        2 bytes
  3237 ;; Hardware stack levels used:    1
  3238 ;; Hardware stack levels required when called:    4
  3239 ;; This function calls:
  3240 ;;		_WriteEE
  3241 ;; This function is called by:
  3242 ;;		_DataHandle
  3243 ;; This function uses a non-reentrant model
  3244 ;;
  3245  0124                     _WriteSN:	
  3246                           
  3247                           ; Regs used in _WriteSN: [wreg+status,2+status,0+pclath+cstack]
  3248                           ;WriteSN@numH stored from wreg
  3249  0124  00D1               	movwf	WriteSN@numH
  3250                           
  3251                           ;eeprom.c: 40: WriteEE(0x00, 0x57);
  3252  0125  3057               	movlw	87
  3253  0126  00CE               	movwf	?_WriteEE
  3254  0127  3000               	movlw	0
  3255  0128  2153  118A         	fcall	_WriteEE
  3256                           
  3257                           ;eeprom.c: 41: _nop();
  3258  012A  0000               	nop
  3259                           
  3260                           ;eeprom.c: 42: WriteEE(0x01, 0x48);
  3261  012B  3048               	movlw	72
  3262  012C  1283               	bcf	3,5	;RP0=0, select bank0
  3263  012D  1303               	bcf	3,6	;RP1=0, select bank0
  3264  012E  00CE               	movwf	?_WriteEE
  3265  012F  3001               	movlw	1
  3266  0130  2153  118A         	fcall	_WriteEE
  3267                           
  3268                           ;eeprom.c: 43: _nop();
  3269  0132  0000               	nop
  3270                           
  3271                           ;eeprom.c: 44: WriteEE(0x02, 0x53);
  3272  0133  3053               	movlw	83
  3273  0134  1283               	bcf	3,5	;RP0=0, select bank0
  3274  0135  1303               	bcf	3,6	;RP1=0, select bank0
  3275  0136  00CE               	movwf	?_WriteEE
  3276  0137  3002               	movlw	2
  3277  0138  2153  118A         	fcall	_WriteEE
  3278                           
  3279                           ;eeprom.c: 45: _nop();
  3280  013A  0000               	nop
  3281                           
  3282                           ;eeprom.c: 46: WriteEE(0x03, 0x45);
  3283  013B  3045               	movlw	69
  3284  013C  1283               	bcf	3,5	;RP0=0, select bank0
  3285  013D  1303               	bcf	3,6	;RP1=0, select bank0
  3286  013E  00CE               	movwf	?_WriteEE
  3287  013F  3003               	movlw	3
  3288  0140  2153  118A         	fcall	_WriteEE
  3289                           
  3290                           ;eeprom.c: 47: _nop();
  3291  0142  0000               	nop
  3292                           
  3293                           ;eeprom.c: 48: WriteEE(0x04, numH&0xff);
  3294  0143  1283               	bcf	3,5	;RP0=0, select bank0
  3295  0144  1303               	bcf	3,6	;RP1=0, select bank0
  3296  0145  0851               	movf	WriteSN@numH,w
  3297  0146  00CE               	movwf	?_WriteEE
  3298  0147  3004               	movlw	4
  3299  0148  2153  118A         	fcall	_WriteEE
  3300                           
  3301                           ;eeprom.c: 49: _nop();
  3302  014A  0000               	nop
  3303                           
  3304                           ;eeprom.c: 50: WriteEE(0x05, numL&0xff);
  3305  014B  1283               	bcf	3,5	;RP0=0, select bank0
  3306  014C  1303               	bcf	3,6	;RP1=0, select bank0
  3307  014D  0850               	movf	WriteSN@numL,w
  3308  014E  00CE               	movwf	?_WriteEE
  3309  014F  3005               	movlw	5
  3310  0150  2153               	fcall	_WriteEE
  3311                           
  3312                           ;eeprom.c: 51: _nop();
  3313  0151  0000               	nop
  3314  0152  0008               	return
  3315  0153                     __end_of_WriteSN:	
  3316  0153                     __ptext1080:	
  3317 ;; =============== function _ReadEE ends ============
  3318                           
  3319                           
  3320 ;; *************** function _WriteEE *****************
  3321 ;; Defined at:
  3322 ;;		line 6 in file "../eeprom.c"
  3323 ;; Parameters:    Size  Location     Type
  3324 ;;  addr            1    wreg     unsigned char 
  3325 ;;  data            1    0[BANK0 ] unsigned char 
  3326 ;; Auto vars:     Size  Location     Type
  3327 ;;  addr            1    1[BANK0 ] unsigned char 
  3328 ;; Return value:  Size  Location     Type
  3329 ;;		None               void
  3330 ;; Registers used:
  3331 ;;		wreg
  3332 ;; Tracked objects:
  3333 ;;		On entry : 60/0
  3334 ;;		On exit  : 60/60
  3335 ;;		Unchanged: FFF9F/0
  3336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3337 ;;      Params:         0       1       0       0       0
  3338 ;;      Locals:         0       1       0       0       0
  3339 ;;      Temps:          0       0       0       0       0
  3340 ;;      Totals:         0       2       0       0       0
  3341 ;;Total ram usage:        2 bytes
  3342 ;; Hardware stack levels used:    1
  3343 ;; Hardware stack levels required when called:    3
  3344 ;; This function calls:
  3345 ;;		Nothing
  3346 ;; This function is called by:
  3347 ;;		_DataHandle
  3348 ;;		_WriteSN
  3349 ;; This function uses a non-reentrant model
  3350 ;;
  3351  0153                     _WriteEE:	
  3352                           
  3353                           ; Regs used in _WriteEE: [wreg]
  3354                           ;WriteEE@addr stored from wreg
  3355  0153  00CF               	movwf	WriteEE@addr
  3356  0154                     l3379:	
  3357                           ;eeprom.c: 7: do{}
  3358                           
  3359                           
  3360                           ;eeprom.c: 8: while(WR == 1);
  3361  0154  1683               	bsf	3,5	;RP0=1, select bank3
  3362  0155  1703               	bsf	3,6	;RP1=1, select bank3
  3363  0156  188C               	btfsc	12,1
  3364  0157  2954               	goto	l3379
  3365                           
  3366                           ;eeprom.c: 10: EEADR = addr;
  3367  0158  1283               	bcf	3,5	;RP0=0, select bank0
  3368  0159  1303               	bcf	3,6	;RP1=0, select bank0
  3369  015A  084F               	movf	WriteEE@addr,w
  3370  015B  1703               	bsf	3,6	;RP1=1, select bank2
  3371  015C  008D               	movwf	13	;volatile
  3372                           
  3373                           ;eeprom.c: 11: EEDATA = data;
  3374  015D  1303               	bcf	3,6	;RP1=0, select bank0
  3375  015E  084E               	movf	WriteEE@data,w
  3376  015F  1703               	bsf	3,6	;RP1=1, select bank2
  3377  0160  008C               	movwf	12	;volatile
  3378                           
  3379                           ;eeprom.c: 12: EEPGD = 0;
  3380  0161  1683               	bsf	3,5	;RP0=1, select bank3
  3381  0162  3055               	movlw	85
  3382  0163  138C               	bcf	12,7
  3383  0164  150C               	bsf	12,2
  3384                           
  3385                           ;eeprom.c: 14: EECON2 = 0x55;
  3386  0165  008D               	movwf	13	;volatile
  3387                           
  3388                           ;eeprom.c: 15: EECON2 = 0xaa;
  3389  0166  30AA               	movlw	170
  3390  0167  008D               	movwf	13	;volatile
  3391                           
  3392                           ;eeprom.c: 16: WR = 1;
  3393  0168  148C               	bsf	12,1
  3394  0169                     l5820:	
  3395                           
  3396                           ;eeprom.c: 18: while(WR == 1);
  3397  0169  188C               	btfsc	12,1
  3398  016A  2969               	goto	l5820
  3399                           
  3400                           ;eeprom.c: 19: WREN = 0;
  3401  016B  110C               	bcf	12,2
  3402  016C  0008               	return
  3403  016D                     __end_of_WriteEE:	
  3404  016D                     __ptext1071:	
  3405 ;; =============== function _SendService ends ============
  3406                           
  3407                           
  3408 ;; *************** function _ReadSN *****************
  3409 ;; Defined at:
  3410 ;;		line 55 in file "../eeprom.c"
  3411 ;; Parameters:    Size  Location     Type
  3412 ;;  data            1    wreg     PTR unsigned char 
  3413 ;;		 -> sndData(8), 
  3414 ;; Auto vars:     Size  Location     Type
  3415 ;;  data            1    3[BANK0 ] PTR unsigned char 
  3416 ;;		 -> sndData(8), 
  3417 ;;  i               1    4[BANK0 ] unsigned char 
  3418 ;; Return value:  Size  Location     Type
  3419 ;;		None               void
  3420 ;; Registers used:
  3421 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3422 ;; Tracked objects:
  3423 ;;		On entry : 60/0
  3424 ;;		On exit  : 160/0
  3425 ;;		Unchanged: FFE9F/0
  3426 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3427 ;;      Params:         0       0       0       0       0
  3428 ;;      Locals:         0       2       0       0       0
  3429 ;;      Temps:          0       1       0       0       0
  3430 ;;      Totals:         0       3       0       0       0
  3431 ;;Total ram usage:        3 bytes
  3432 ;; Hardware stack levels used:    1
  3433 ;; Hardware stack levels required when called:    4
  3434 ;; This function calls:
  3435 ;;		_ReadEE
  3436 ;; This function is called by:
  3437 ;;		_DataHandle
  3438 ;; This function uses a non-reentrant model
  3439 ;;
  3440  016D                     _ReadSN:	
  3441                           
  3442                           ; Regs used in _ReadSN: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3443                           ;ReadSN@data stored from wreg
  3444  016D  00D1               	movwf	ReadSN@data
  3445                           
  3446                           ;eeprom.c: 56: unsigned char i;
  3447                           ;eeprom.c: 57: for(i=0;i<6;i++)
  3448  016E  01D2               	clrf	ReadSN@i
  3449  016F                     l6078:	
  3450                           
  3451                           ;eeprom.c: 58: data[i] = ReadEE(i);
  3452  016F  0852               	movf	ReadSN@i,w
  3453  0170  0751               	addwf	ReadSN@data,w
  3454  0171  00D0               	movwf	??_ReadSN
  3455  0172  0084               	movwf	4
  3456  0173  0852               	movf	ReadSN@i,w
  3457  0174  217E  118A         	fcall	_ReadEE
  3458  0176  1383               	bcf	3,7	;select IRP bank0
  3459  0177  0080               	movwf	0
  3460  0178  3006               	movlw	6
  3461  0179  0AD2               	incf	ReadSN@i,f
  3462  017A  0252               	subwf	ReadSN@i,w
  3463  017B  1803               	btfsc	3,0
  3464  017C  0008               	return
  3465  017D  296F               	goto	l6078
  3466  017E                     __end_of_ReadSN:	
  3467  017E                     __ptext1079:	
  3468 ;; =============== function _putch ends ============
  3469                           
  3470                           
  3471 ;; *************** function _ReadEE *****************
  3472 ;; Defined at:
  3473 ;;		line 24 in file "../eeprom.c"
  3474 ;; Parameters:    Size  Location     Type
  3475 ;;  addr            1    wreg     unsigned char 
  3476 ;; Auto vars:     Size  Location     Type
  3477 ;;  addr            1    0[BANK0 ] unsigned char 
  3478 ;;  num             1    1[BANK0 ] unsigned char 
  3479 ;; Return value:  Size  Location     Type
  3480 ;;                  1    wreg      unsigned char 
  3481 ;; Registers used:
  3482 ;;		wreg
  3483 ;; Tracked objects:
  3484 ;;		On entry : 60/0
  3485 ;;		On exit  : 60/0
  3486 ;;		Unchanged: FFF9F/0
  3487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3488 ;;      Params:         0       0       0       0       0
  3489 ;;      Locals:         0       2       0       0       0
  3490 ;;      Temps:          0       0       0       0       0
  3491 ;;      Totals:         0       2       0       0       0
  3492 ;;Total ram usage:        2 bytes
  3493 ;; Hardware stack levels used:    1
  3494 ;; Hardware stack levels required when called:    3
  3495 ;; This function calls:
  3496 ;;		Nothing
  3497 ;; This function is called by:
  3498 ;;		_DataHandle
  3499 ;;		_ReadSN
  3500 ;; This function uses a non-reentrant model
  3501 ;;
  3502  017E                     _ReadEE:	
  3503                           
  3504                           ; Regs used in _ReadEE: [wreg]
  3505                           ;ReadEE@addr stored from wreg
  3506  017E  00CE               	movwf	ReadEE@addr
  3507                           
  3508                           ;eeprom.c: 28: EEADR = addr;
  3509                           
  3510                           ;eeprom.c: 27: while(RD == -1);
  3511  017F  084E               	movf	ReadEE@addr,w
  3512  0180  1703               	bsf	3,6	;RP1=1, select bank2
  3513  0181  008D               	movwf	13	;volatile
  3514                           
  3515                           ;eeprom.c: 29: EEPGD = 0;
  3516  0182  1683               	bsf	3,5	;RP0=1, select bank3
  3517  0183  138C               	bcf	12,7
  3518                           
  3519                           ;eeprom.c: 30: RD = 1;
  3520  0184  140C               	bsf	12,0
  3521  0185                     l5828:	
  3522                           
  3523                           ;eeprom.c: 32: while(RD == 1);
  3524  0185  180C               	btfsc	12,0
  3525  0186  2985               	goto	l5828
  3526                           
  3527                           ;eeprom.c: 33: num = EEDATA;
  3528  0187  1283               	bcf	3,5	;RP0=0, select bank2
  3529  0188  080C               	movf	12,w	;volatile
  3530  0189  1303               	bcf	3,6	;RP1=0, select bank0
  3531  018A  00CF               	movwf	ReadEE@num
  3532                           
  3533                           ;eeprom.c: 34: return num;
  3534  018B  0008               	return
  3535  018C                     __end_of_ReadEE:	
  3536                           
  3537                           	psect	text1070
  3538  0519                     __ptext1070:	
  3539 ;; =============== function _i2c_WaitForSCL ends ============
  3540                           
  3541                           
  3542 ;; *************** function _SendService *****************
  3543 ;; Defined at:
  3544 ;;		line 300 in file "../Main.c"
  3545 ;; Parameters:    Size  Location     Type
  3546 ;;		None
  3547 ;; Auto vars:     Size  Location     Type
  3548 ;;		None
  3549 ;; Return value:  Size  Location     Type
  3550 ;;		None               void
  3551 ;; Registers used:
  3552 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3553 ;; Tracked objects:
  3554 ;;		On entry : 60/0
  3555 ;;		On exit  : 60/0
  3556 ;;		Unchanged: FFE9F/0
  3557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3558 ;;      Params:         0       0       0       0       0
  3559 ;;      Locals:         0       0       0       0       0
  3560 ;;      Temps:          0       0       0       0       0
  3561 ;;      Totals:         0       0       0       0       0
  3562 ;;Total ram usage:        0 bytes
  3563 ;; Hardware stack levels used:    1
  3564 ;; Hardware stack levels required when called:    4
  3565 ;; This function calls:
  3566 ;;		_putch
  3567 ;; This function is called by:
  3568 ;;		_main
  3569 ;; This function uses a non-reentrant model
  3570 ;;
  3571  0519                     _SendService:	
  3572                           
  3573                           ;Main.c: 301: sndCRC = 0x40 ^ unitAddr ^ sndCommand ^ sndLength;
  3574                           
  3575                           ; Regs used in _SendService: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3576  0519  084D               	movf	_unitAddr,w
  3577  051A  0642               	xorwf	_sndCommand,w
  3578  051B  0644               	xorwf	_sndLength,w
  3579  051C  3A40               	xorlw	64
  3580  051D  00C1               	movwf	_sndCRC
  3581                           
  3582                           ;Main.c: 302: putch(0x40);
  3583  051E  3040               	movlw	64
  3584  051F  2542  118A         	fcall	_putch
  3585                           
  3586                           ;Main.c: 303: putch(unitAddr);
  3587  0521  084D               	movf	_unitAddr,w
  3588  0522  2542  118A         	fcall	_putch
  3589                           
  3590                           ;Main.c: 304: putch(sndCommand);
  3591  0524  0842               	movf	_sndCommand,w
  3592  0525  2542  118A         	fcall	_putch
  3593                           
  3594                           ;Main.c: 305: putch(sndLength);
  3595  0527  0844               	movf	_sndLength,w
  3596  0528  2542  118A         	fcall	_putch
  3597                           
  3598                           ;Main.c: 306: for(sndCount=0; sndCount < sndLength; sndCount++){
  3599  052A  01C3               	clrf	_sndCount
  3600  052B                     l6102:	
  3601  052B  0844               	movf	_sndLength,w
  3602  052C  0243               	subwf	_sndCount,w
  3603  052D  1803               	btfsc	3,0
  3604  052E  2D3D               	goto	l6104
  3605                           
  3606                           ;Main.c: 307: putch(sndData[sndCount]);
  3607  052F  0843               	movf	_sndCount,w
  3608  0530  3E45               	addlw	_sndData& (0+255)
  3609  0531  0084               	movwf	4
  3610  0532  1383               	bcf	3,7	;select IRP bank0
  3611  0533  0800               	movf	0,w
  3612  0534  2542  118A         	fcall	_putch
  3613                           
  3614                           ;Main.c: 308: sndCRC ^= sndData[sndCount];
  3615  0536  0843               	movf	_sndCount,w
  3616  0537  3E45               	addlw	_sndData& (0+255)
  3617  0538  0084               	movwf	4
  3618  0539  0800               	movf	0,w
  3619  053A  06C1               	xorwf	_sndCRC,f
  3620  053B  0AC3               	incf	_sndCount,f
  3621  053C  2D2B               	goto	l6102
  3622  053D                     l6104:	
  3623                           
  3624                           ;Main.c: 309: }
  3625                           ;Main.c: 310: putch(sndCRC);
  3626  053D  0841               	movf	_sndCRC,w
  3627  053E  2542  118A         	fcall	_putch
  3628                           
  3629                           ;Main.c: 311: putch(0x0A);
  3630  0540  300A               	movlw	10
  3631  0541  2D42               	ljmp	_putch
  3632  0542                     __end_of_SendService:	
  3633  0542                     __ptext1078:	
  3634 ;; =============== function _timer1_init ends ============
  3635                           
  3636                           
  3637 ;; *************** function _putch *****************
  3638 ;; Defined at:
  3639 ;;		line 7 in file "../usart.c"
  3640 ;; Parameters:    Size  Location     Type
  3641 ;;  byte            1    wreg     unsigned char 
  3642 ;; Auto vars:     Size  Location     Type
  3643 ;;  byte            1    0[BANK0 ] unsigned char 
  3644 ;; Return value:  Size  Location     Type
  3645 ;;		None               void
  3646 ;; Registers used:
  3647 ;;		wreg
  3648 ;; Tracked objects:
  3649 ;;		On entry : 60/0
  3650 ;;		On exit  : 60/0
  3651 ;;		Unchanged: FFF9F/0
  3652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3653 ;;      Params:         0       0       0       0       0
  3654 ;;      Locals:         0       1       0       0       0
  3655 ;;      Temps:          0       0       0       0       0
  3656 ;;      Totals:         0       1       0       0       0
  3657 ;;Total ram usage:        1 bytes
  3658 ;; Hardware stack levels used:    1
  3659 ;; Hardware stack levels required when called:    3
  3660 ;; This function calls:
  3661 ;;		Nothing
  3662 ;; This function is called by:
  3663 ;;		_SendService
  3664 ;; This function uses a non-reentrant model
  3665 ;;
  3666  0542                     _putch:	
  3667                           
  3668                           ; Regs used in _putch: [wreg]
  3669                           ;putch@byte stored from wreg
  3670  0542  00CE               	movwf	putch@byte
  3671  0543                     l1426:	
  3672                           ;usart.c: 9: while(!TXIF)
  3673                           
  3674  0543  1E0C               	btfss	12,4
  3675  0544  2D43               	goto	l1426
  3676                           
  3677                           ;usart.c: 11: TXREG = byte;
  3678  0545  084E               	movf	putch@byte,w
  3679  0546  0099               	movwf	25	;volatile
  3680  0547  0008               	return
  3681  0548                     __end_of_putch:	
  3682                           
  3683                           	psect	text1076
  3684  0573                     __ptext1076:	
  3685 ;; =============== function _Reset ends ============
  3686                           
  3687                           
  3688 ;; *************** function _Delay *****************
  3689 ;; Defined at:
  3690 ;;		line 8 in file "../delay.c"
  3691 ;; Parameters:    Size  Location     Type
  3692 ;;  t               2    0[BANK0 ] unsigned int 
  3693 ;; Auto vars:     Size  Location     Type
  3694 ;;		None
  3695 ;; Return value:  Size  Location     Type
  3696 ;;		None               void
  3697 ;; Registers used:
  3698 ;;		wreg, status,2, status,0
  3699 ;; Tracked objects:
  3700 ;;		On entry : 60/0
  3701 ;;		On exit  : 60/0
  3702 ;;		Unchanged: FFF9F/0
  3703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3704 ;;      Params:         0       2       0       0       0
  3705 ;;      Locals:         0       0       0       0       0
  3706 ;;      Temps:          0       0       0       0       0
  3707 ;;      Totals:         0       2       0       0       0
  3708 ;;Total ram usage:        2 bytes
  3709 ;; Hardware stack levels used:    1
  3710 ;; Hardware stack levels required when called:    3
  3711 ;; This function calls:
  3712 ;;		Nothing
  3713 ;; This function is called by:
  3714 ;;		_main
  3715 ;; This function uses a non-reentrant model
  3716 ;;
  3717  0573                     _Delay:	
  3718                           
  3719                           ;delay.c: 9: static unsigned int k;
  3720                           ;delay.c: 10: for(k = 0; k < t; k++);
  3721                           
  3722                           ; Regs used in _Delay: [wreg+status,2+status,0]
  3723  0573  01A8               	clrf	Delay@k
  3724  0574  01A9               	clrf	Delay@k+1
  3725  0575                     l5882:	
  3726  0575  084F               	movf	Delay@t+1,w
  3727  0576  0229               	subwf	Delay@k+1,w
  3728  0577  1D03               	skipz
  3729  0578  2D7B               	goto	u945
  3730  0579  084E               	movf	Delay@t,w
  3731  057A  0228               	subwf	Delay@k,w
  3732  057B                     u945:	
  3733  057B  1803               	btfsc	3,0
  3734  057C  0008               	return
  3735  057D  0AA8               	incf	Delay@k,f
  3736  057E  1903               	skipnz
  3737  057F  0AA9               	incf	Delay@k+1,f
  3738  0580  2D75               	goto	l5882
  3739  0581                     __end_of_Delay:	
  3740                           
  3741                           	psect	text1077
  3742  0560                     __ptext1077:	
  3743 ;; =============== function _Delay ends ============
  3744                           
  3745                           
  3746 ;; *************** function _timer1_init *****************
  3747 ;; Defined at:
  3748 ;;		line 14 in file "../delay.c"
  3749 ;; Parameters:    Size  Location     Type
  3750 ;;		None
  3751 ;; Auto vars:     Size  Location     Type
  3752 ;;		None
  3753 ;; Return value:  Size  Location     Type
  3754 ;;		None               void
  3755 ;; Registers used:
  3756 ;;		wreg, status,2
  3757 ;; Tracked objects:
  3758 ;;		On entry : 60/0
  3759 ;;		On exit  : 60/0
  3760 ;;		Unchanged: FFF9F/0
  3761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3762 ;;      Params:         0       0       0       0       0
  3763 ;;      Locals:         0       0       0       0       0
  3764 ;;      Temps:          0       0       0       0       0
  3765 ;;      Totals:         0       0       0       0       0
  3766 ;;Total ram usage:        0 bytes
  3767 ;; Hardware stack levels used:    1
  3768 ;; Hardware stack levels required when called:    3
  3769 ;; This function calls:
  3770 ;;		Nothing
  3771 ;; This function is called by:
  3772 ;;		_main
  3773 ;; This function uses a non-reentrant model
  3774 ;;
  3775  0560                     _timer1_init:	
  3776                           
  3777                           ;delay.c: 15: T1CONbits.TMR1CS = 0;
  3778                           
  3779                           ; Regs used in _timer1_init: [wreg+status,2]
  3780  0560  1090               	bcf	16,1	;volatile
  3781                           
  3782                           ;delay.c: 16: T1CONbits.T1CKPS1 = 1;
  3783  0561  1690               	bsf	16,5	;volatile
  3784                           
  3785                           ;delay.c: 17: T1CONbits.T1CKPS0 = 0;
  3786  0562  1210               	bcf	16,4	;volatile
  3787                           
  3788                           ;delay.c: 18: TMR1L = 0xDC;
  3789  0563  30DC               	movlw	220
  3790  0564  008E               	movwf	14	;volatile
  3791                           
  3792                           ;delay.c: 19: TMR1H = 0x0B;
  3793  0565  300B               	movlw	11
  3794  0566  008F               	movwf	15	;volatile
  3795                           
  3796                           ;delay.c: 21: PIR1bits.TMR1IF = 0;
  3797  0567  100C               	bcf	12,0	;volatile
  3798                           
  3799                           ;delay.c: 22: GIE = 1;
  3800  0568  178B               	bsf	11,7
  3801                           
  3802                           ;delay.c: 23: PEIE = 1;
  3803  0569  170B               	bsf	11,6
  3804                           
  3805                           ;delay.c: 24: T1CONbits.TMR1ON = 1;
  3806  056A  1410               	bsf	16,0	;volatile
  3807                           
  3808                           ;delay.c: 25: TMR1IE = 1;
  3809  056B  1683               	bsf	3,5	;RP0=1, select bank1
  3810  056C  140C               	bsf	12,0
  3811                           
  3812                           ;delay.c: 26: timer1_counter = 0;
  3813  056D  1283               	bcf	3,5	;RP0=0, select bank0
  3814  056E  01AE               	clrf	_timer1_counter
  3815  056F  01AF               	clrf	_timer1_counter+1
  3816                           
  3817                           ;delay.c: 27: delay_flag = 0;
  3818  0570  01AA               	clrf	_delay_flag
  3819  0571  01AB               	clrf	_delay_flag+1
  3820  0572  0008               	return
  3821  0573                     __end_of_timer1_init:	
  3822                           
  3823                           	psect	text1081
  3824  059A                     __ptext1081:	
  3825 ;; =============== function _WriteEE ends ============
  3826                           
  3827                           
  3828 ;; *************** function _AutoAdjustGain *****************
  3829 ;; Defined at:
  3830 ;;		line 167 in file "../Main.c"
  3831 ;; Parameters:    Size  Location     Type
  3832 ;;		None
  3833 ;; Auto vars:     Size  Location     Type
  3834 ;;		None
  3835 ;; Return value:  Size  Location     Type
  3836 ;;		None               void
  3837 ;; Registers used:
  3838 ;;		None
  3839 ;; Tracked objects:
  3840 ;;		On entry : 60/20
  3841 ;;		On exit  : 60/20
  3842 ;;		Unchanged: FFFFFF9F/0
  3843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3844 ;;      Params:         0       0       0       0       0
  3845 ;;      Locals:         0       0       0       0       0
  3846 ;;      Temps:          0       0       0       0       0
  3847 ;;      Totals:         0       0       0       0       0
  3848 ;;Total ram usage:        0 bytes
  3849 ;; Hardware stack levels used:    1
  3850 ;; Hardware stack levels required when called:    3
  3851 ;; This function calls:
  3852 ;;		Nothing
  3853 ;; This function is called by:
  3854 ;;		_main
  3855 ;; This function uses a non-reentrant model
  3856 ;;
  3857  059A                     _AutoAdjustGain:	
  3858                           
  3859                           ; Regs used in _AutoAdjustGain: []
  3860  059A  0008               	return
  3861  059B                     __end_of_AutoAdjustGain:	
  3862                           
  3863                           	psect	text1082
  3864  0548                     __ptext1082:	
  3865 ;; =============== function _AutoAdjustGain ends ============
  3866                           
  3867                           
  3868 ;; *************** function _ResetUart *****************
  3869 ;; Defined at:
  3870 ;;		line 125 in file "../Main.c"
  3871 ;; Parameters:    Size  Location     Type
  3872 ;;		None
  3873 ;; Auto vars:     Size  Location     Type
  3874 ;;		None
  3875 ;; Return value:  Size  Location     Type
  3876 ;;		None               void
  3877 ;; Registers used:
  3878 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3879 ;; Tracked objects:
  3880 ;;		On entry : 60/0
  3881 ;;		On exit  : 60/0
  3882 ;;		Unchanged: FFE9F/0
  3883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3884 ;;      Params:         0       0       0       0       0
  3885 ;;      Locals:         0       0       0       0       0
  3886 ;;      Temps:          0       0       0       0       0
  3887 ;;      Totals:         0       0       0       0       0
  3888 ;;Total ram usage:        0 bytes
  3889 ;; Hardware stack levels used:    1
  3890 ;; Hardware stack levels required when called:    3
  3891 ;; This function calls:
  3892 ;;		Nothing
  3893 ;; This function is called by:
  3894 ;;		_main
  3895 ;; This function uses a non-reentrant model
  3896 ;;
  3897  0548                     _ResetUart:	
  3898                           
  3899                           ;Main.c: 126: static unsigned char i;
  3900                           ;Main.c: 127: rcvCommand = 0x00;
  3901                           
  3902                           ; Regs used in _ResetUart: [wreg-fsr0h+status,2+status,0]
  3903  0548  01BE               	clrf	_rcvCommand
  3904                           
  3905                           ;Main.c: 128: rcvLength = 0x00;
  3906  0549  01C0               	clrf	_rcvLength
  3907                           
  3908                           ;Main.c: 129: rcvCount = 0x00;
  3909  054A  01BF               	clrf	_rcvCount
  3910                           
  3911                           ;Main.c: 130: for(i=0; i < 8; i++){rcvData[i] = 0x00;}
  3912  054B  01B0               	clrf	ResetUart@i
  3913  054C                     l6546:	
  3914  054C  3008               	movlw	8
  3915  054D  0230               	subwf	ResetUart@i,w
  3916  054E  1803               	btfsc	3,0
  3917  054F  2D57               	goto	l6556
  3918  0550  0830               	movf	ResetUart@i,w
  3919  0551  3E20               	addlw	_rcvData& (0+255)
  3920  0552  0084               	movwf	4
  3921  0553  1383               	bcf	3,7	;select IRP bank0
  3922  0554  0180               	clrf	0
  3923  0555  0AB0               	incf	ResetUart@i,f
  3924  0556  2D4C               	goto	l6546
  3925  0557                     l6556:	
  3926                           
  3927                           ;Main.c: 131: rcvCRC = 0x00;
  3928  0557  01BD               	clrf	_rcvCRC
  3929                           
  3930                           ;Main.c: 132: rcvStartOk = 0;
  3931  0558  105B               	bcf	_rcvStartOk/(0+8),_rcvStartOk& (0+7)
  3932                           
  3933                           ;Main.c: 133: rcvAddrOk = 0;
  3934  0559  107D               	bcf	_rcvAddrOk/(0+8),_rcvAddrOk& (0+7)
  3935                           
  3936                           ;Main.c: 134: rcvCommandOk = 0;
  3937  055A  117D               	bcf	_rcvCommandOk/(0+8),_rcvCommandOk& (0+7)
  3938                           
  3939                           ;Main.c: 135: rcvLengthOk = 0;
  3940  055B  127D               	bcf	_rcvLengthOk/(0+8),_rcvLengthOk& (0+7)
  3941                           
  3942                           ;Main.c: 136: rcvDataOk = 0;
  3943  055C  11FD               	bcf	_rcvDataOk/(0+8),_rcvDataOk& (0+7)
  3944                           
  3945                           ;Main.c: 137: rcvCRCOk = 0;
  3946  055D  10FD               	bcf	_rcvCRCOk/(0+8),_rcvCRCOk& (0+7)
  3947                           
  3948                           ;Main.c: 138: rcvTerminalOk = 0;
  3949  055E  12FD               	bcf	_rcvTerminalOk/(0+8),_rcvTerminalOk& (0+7)
  3950  055F  0008               	return
  3951  0560                     __end_of_ResetUart:	
  3952                           
  3953                           	psect	text1083
  3954  0594                     __ptext1083:	
  3955 ;; =============== function _ResetUart ends ============
  3956                           
  3957                           
  3958 ;; *************** function _RelayOff *****************
  3959 ;; Defined at:
  3960 ;;		line 121 in file "../Main.c"
  3961 ;; Parameters:    Size  Location     Type
  3962 ;;		None
  3963 ;; Auto vars:     Size  Location     Type
  3964 ;;		None
  3965 ;; Return value:  Size  Location     Type
  3966 ;;		None               void
  3967 ;; Registers used:
  3968 ;;		None
  3969 ;; Tracked objects:
  3970 ;;		On entry : 60/0
  3971 ;;		On exit  : 60/0
  3972 ;;		Unchanged: FFF9F/0
  3973 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3974 ;;      Params:         0       0       0       0       0
  3975 ;;      Locals:         0       0       0       0       0
  3976 ;;      Temps:          0       0       0       0       0
  3977 ;;      Totals:         0       0       0       0       0
  3978 ;;Total ram usage:        0 bytes
  3979 ;; Hardware stack levels used:    1
  3980 ;; Hardware stack levels required when called:    3
  3981 ;; This function calls:
  3982 ;;		Nothing
  3983 ;; This function is called by:
  3984 ;;		_DataHandle
  3985 ;; This function uses a non-reentrant model
  3986 ;;
  3987  0594                     _RelayOff:	
  3988                           
  3989                           ; Regs used in _RelayOff: []
  3990  0594  1006               	bcf	6,0
  3991  0595  0008               	return
  3992  0596                     __end_of_RelayOff:	
  3993                           
  3994                           	psect	text1084
  3995  0596                     __ptext1084:	
  3996 ;; =============== function _RelayOff ends ============
  3997                           
  3998                           
  3999 ;; *************** function _RelayOn *****************
  4000 ;; Defined at:
  4001 ;;		line 120 in file "../Main.c"
  4002 ;; Parameters:    Size  Location     Type
  4003 ;;		None
  4004 ;; Auto vars:     Size  Location     Type
  4005 ;;		None
  4006 ;; Return value:  Size  Location     Type
  4007 ;;		None               void
  4008 ;; Registers used:
  4009 ;;		None
  4010 ;; Tracked objects:
  4011 ;;		On entry : 60/0
  4012 ;;		On exit  : 60/0
  4013 ;;		Unchanged: FFF9F/0
  4014 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4015 ;;      Params:         0       0       0       0       0
  4016 ;;      Locals:         0       0       0       0       0
  4017 ;;      Temps:          0       0       0       0       0
  4018 ;;      Totals:         0       0       0       0       0
  4019 ;;Total ram usage:        0 bytes
  4020 ;; Hardware stack levels used:    1
  4021 ;; Hardware stack levels required when called:    3
  4022 ;; This function calls:
  4023 ;;		Nothing
  4024 ;; This function is called by:
  4025 ;;		_DataHandle
  4026 ;; This function uses a non-reentrant model
  4027 ;;
  4028  0596                     _RelayOn:	
  4029                           
  4030                           ; Regs used in _RelayOn: []
  4031  0596  1406               	bsf	6,0
  4032  0597  0008               	return
  4033  0598                     __end_of_RelayOn:	
  4034                           
  4035                           	psect	text1085
  4036  03CD                     __ptext1085:	
  4037 ;; =============== function _RelayOn ends ============
  4038                           
  4039                           
  4040 ;; *************** function _isr *****************
  4041 ;; Defined at:
  4042 ;;		line 390 in file "../Main.c"
  4043 ;; Parameters:    Size  Location     Type
  4044 ;;		None
  4045 ;; Auto vars:     Size  Location     Type
  4046 ;;		None
  4047 ;; Return value:  Size  Location     Type
  4048 ;;		None               void
  4049 ;; Registers used:
  4050 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4051 ;; Tracked objects:
  4052 ;;		On entry : 0/0
  4053 ;;		On exit  : 0/0
  4054 ;;		Unchanged: FFE00/0
  4055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4056 ;;      Params:         0       0       0       0       0
  4057 ;;      Locals:         0       0       0       0       0
  4058 ;;      Temps:          6       0       0       0       0
  4059 ;;      Totals:         6       0       0       0       0
  4060 ;;Total ram usage:        6 bytes
  4061 ;; Hardware stack levels used:    1
  4062 ;; Hardware stack levels required when called:    2
  4063 ;; This function calls:
  4064 ;;		i1_ResetUart
  4065 ;;		i1_RelayOff
  4066 ;;		_SendRelayOff
  4067 ;; This function is called by:
  4068 ;;		Interrupt level 1
  4069 ;; This function uses a non-reentrant model
  4070 ;;
  4071  03CD                     _isr:	
  4072                           
  4073                           ;Main.c: 391: if(RCIF){
  4074  03CD  1283               	bcf	3,5	;RP0=0, select bank0
  4075  03CE  1303               	bcf	3,6	;RP1=0, select bank0
  4076  03CF  1E8C               	btfss	12,5
  4077  03D0  2C38               	goto	i1l790
  4078                           
  4079                           ;Main.c: 392: if(rcvStartOk == 0){
  4080  03D1  185B               	btfsc	_rcvStartOk/(0+8),_rcvStartOk& (0+7)
  4081  03D2  2BE0               	goto	i1l791
  4082                           
  4083                           ;Main.c: 393: if(RCREG == 0x40){
  4084  03D3  081A               	movf	26,w	;volatile
  4085  03D4  3A40               	xorlw	64
  4086  03D5  1D03               	skipz
  4087  03D6  2BDD               	goto	i1l6606
  4088                           
  4089                           ;Main.c: 394: ResetUart();
  4090  03D7  2465  118A         	fcall	i1_ResetUart
  4091                           
  4092                           ;Main.c: 395: rcvCRC = 0x40;
  4093  03D9  3040               	movlw	64
  4094  03DA  00BD               	movwf	_rcvCRC
  4095                           
  4096                           ;Main.c: 396: rcvStartOk = 1;
  4097  03DB  145B               	bsf	_rcvStartOk/(0+8),_rcvStartOk& (0+7)
  4098                           
  4099                           ;Main.c: 397: }else{
  4100  03DC  2C5C               	goto	i1l825
  4101  03DD                     i1l6606:	
  4102                           
  4103                           ;Main.c: 398: ResetUart();
  4104  03DD  2465  118A         	fcall	i1_ResetUart
  4105  03DF  2C5C               	goto	i1l825
  4106  03E0                     i1l791:	
  4107  03E0  187D               	btfsc	_rcvAddrOk/(0+8),_rcvAddrOk& (0+7)
  4108  03E1  2BEA               	goto	i1l795
  4109                           
  4110                           ;Main.c: 401: if(RCREG == unitAddr){
  4111  03E2  081A               	movf	26,w	;volatile
  4112  03E3  064D               	xorwf	_unitAddr,w
  4113  03E4  1D03               	skipz
  4114  03E5  2BDD               	goto	i1l6606
  4115                           
  4116                           ;Main.c: 402: rcvCRC ^= unitAddr;
  4117  03E6  084D               	movf	_unitAddr,w
  4118  03E7  06BD               	xorwf	_rcvCRC,f
  4119                           
  4120                           ;Main.c: 403: rcvAddrOk = 1;
  4121  03E8  147D               	bsf	_rcvAddrOk/(0+8),_rcvAddrOk& (0+7)
  4122                           
  4123                           ;Main.c: 404: }else{
  4124  03E9  2C5C               	goto	i1l825
  4125  03EA                     i1l795:	
  4126  03EA  197D               	btfsc	_rcvCommandOk/(0+8),_rcvCommandOk& (0+7)
  4127  03EB  2BF1               	goto	i1l799
  4128                           
  4129                           ;Main.c: 408: rcvCommand = RCREG;
  4130  03EC  081A               	movf	26,w	;volatile
  4131  03ED  00BE               	movwf	_rcvCommand
  4132                           
  4133                           ;Main.c: 409: rcvCRC ^= rcvCommand;
  4134  03EE  06BD               	xorwf	_rcvCRC,f
  4135                           
  4136                           ;Main.c: 410: rcvCommandOk = 1;
  4137  03EF  157D               	bsf	_rcvCommandOk/(0+8),_rcvCommandOk& (0+7)
  4138                           
  4139                           ;Main.c: 411: }else if(!rcvLengthOk){
  4140  03F0  2C5C               	goto	i1l825
  4141  03F1                     i1l799:	
  4142  03F1  1A7D               	btfsc	_rcvLengthOk/(0+8),_rcvLengthOk& (0+7)
  4143  03F2  2C01               	goto	i1l801
  4144                           
  4145                           ;Main.c: 412: rcvLength = RCREG;
  4146  03F3  081A               	movf	26,w	;volatile
  4147  03F4  00C0               	movwf	_rcvLength
  4148                           
  4149                           ;Main.c: 413: rcvCRC ^= rcvLength;
  4150  03F5  06BD               	xorwf	_rcvCRC,f
  4151                           
  4152                           ;Main.c: 414: if(rcvLength == 0){
  4153  03F6  08C0               	movf	_rcvLength,f
  4154  03F7  1D03               	skipz
  4155  03F8  2BFB               	goto	i1l6628
  4156                           
  4157                           ;Main.c: 415: rcvDataOk = 1;
  4158  03F9  15FD               	bsf	_rcvDataOk/(0+8),_rcvDataOk& (0+7)
  4159  03FA  2BFF               	goto	i1l6630
  4160  03FB                     i1l6628:	
  4161                           ;Main.c: 417: }else if(rcvLength <= 8){
  4162                           
  4163                           ;Main.c: 416: rcvLengthOk = 1;
  4164                           
  4165  03FB  3009               	movlw	9
  4166  03FC  0240               	subwf	_rcvLength,w
  4167  03FD  1803               	skipnc
  4168  03FE  2BDD               	goto	i1l6606
  4169  03FF                     i1l6630:	
  4170                           
  4171                           ;Main.c: 418: rcvLengthOk = 1;
  4172  03FF  167D               	bsf	_rcvLengthOk/(0+8),_rcvLengthOk& (0+7)
  4173                           
  4174                           ;Main.c: 419: }else{
  4175  0400  2C5C               	goto	i1l825
  4176  0401                     i1l801:	
  4177  0401  19FD               	btfsc	_rcvDataOk/(0+8),_rcvDataOk& (0+7)
  4178  0402  2C25               	goto	i1l807
  4179                           
  4180                           ;Main.c: 423: rcvData[rcvCount] = RCREG;
  4181  0403  083F               	movf	_rcvCount,w
  4182  0404  3E20               	addlw	_rcvData& (0+255)
  4183  0405  0084               	movwf	4
  4184  0406  081A               	movf	26,w	;volatile
  4185  0407  1383               	bcf	3,7	;select IRP bank0
  4186  0408  0080               	movwf	0
  4187                           
  4188                           ;Main.c: 424: rcvCRC ^= rcvData[rcvCount];
  4189  0409  083F               	movf	_rcvCount,w
  4190  040A  3E20               	addlw	_rcvData& (0+255)
  4191  040B  0084               	movwf	4
  4192  040C  0800               	movf	0,w
  4193  040D  06BD               	xorwf	_rcvCRC,f
  4194                           
  4195                           ;Main.c: 425: if(rcvCount + 1 >= rcvLength){
  4196  040E  083F               	movf	_rcvCount,w
  4197  040F  3E01               	addlw	1
  4198  0410  00F7               	movwf	??_isr
  4199  0411  3000               	movlw	0
  4200  0412  1803               	skipnc
  4201  0413  3001               	movlw	1
  4202  0414  00F8               	movwf	??_isr+1
  4203  0415  3A80               	xorlw	128
  4204  0416  00F9               	movwf	??_isr+2
  4205  0417  3080               	movlw	128
  4206  0418  0279               	subwf	??_isr+2,w
  4207  0419  1D03               	skipz
  4208  041A  2C1D               	goto	u186_25
  4209  041B  0840               	movf	_rcvLength,w
  4210  041C  0277               	subwf	??_isr,w
  4211  041D                     u186_25:	
  4212  041D  1C03               	skipc
  4213  041E  2C21               	goto	i1l6640
  4214                           
  4215                           ;Main.c: 426: rcvDataOk = 1;
  4216  041F  15FD               	bsf	_rcvDataOk/(0+8),_rcvDataOk& (0+7)
  4217                           
  4218                           ;Main.c: 427: }else{
  4219  0420  2C5C               	goto	i1l825
  4220  0421                     i1l6640:	
  4221                           
  4222                           ;Main.c: 428: rcvCount += 1;
  4223  0421  1283               	bcf	3,5	;RP0=0, select bank0
  4224  0422  1303               	bcf	3,6	;RP1=0, select bank0
  4225  0423  0ABF               	incf	_rcvCount,f
  4226  0424  2C5C               	goto	i1l825
  4227  0425                     i1l807:	
  4228  0425  18FD               	btfsc	_rcvCRCOk/(0+8),_rcvCRCOk& (0+7)
  4229  0426  2C2D               	goto	i1l811
  4230                           
  4231                           ;Main.c: 431: if(rcvCRC == RCREG){
  4232  0427  083D               	movf	_rcvCRC,w
  4233  0428  061A               	xorwf	26,w	;volatile
  4234  0429  1D03               	skipz
  4235  042A  2BDD               	goto	i1l6606
  4236                           
  4237                           ;Main.c: 432: rcvCRCOk = 1;
  4238  042B  14FD               	bsf	_rcvCRCOk/(0+8),_rcvCRCOk& (0+7)
  4239                           
  4240                           ;Main.c: 433: }else{
  4241  042C  2C5C               	goto	i1l825
  4242  042D                     i1l811:	
  4243  042D  1AFD               	btfsc	_rcvTerminalOk/(0+8),_rcvTerminalOk& (0+7)
  4244  042E  2C35               	goto	i1l6654
  4245                           
  4246                           ;Main.c: 437: if(RCREG == 0x0A){
  4247  042F  081A               	movf	26,w	;volatile
  4248  0430  3A0A               	xorlw	10
  4249  0431  1D03               	skipz
  4250  0432  2BDD               	goto	i1l6606
  4251                           
  4252                           ;Main.c: 438: rcvTerminalOk = 1;
  4253  0433  16FD               	bsf	_rcvTerminalOk/(0+8),_rcvTerminalOk& (0+7)
  4254                           
  4255                           ;Main.c: 439: }else{
  4256  0434  2C5C               	goto	i1l825
  4257  0435                     i1l6654:	
  4258                           
  4259                           ;Main.c: 443: RCREG = RCREG;
  4260  0435  081A               	movf	26,w	;volatile
  4261  0436  009A               	movwf	26	;volatile
  4262  0437  2C5C               	goto	i1l825
  4263  0438                     i1l790:	
  4264  0438  1C0C               	btfss	12,0	;volatile
  4265  0439  2C58               	goto	i1l6676
  4266                           
  4267                           ;Main.c: 446: TMR1L = 0xDC;
  4268  043A  30DC               	movlw	220
  4269  043B  008E               	movwf	14	;volatile
  4270                           
  4271                           ;Main.c: 447: TMR1H = 0x0B;
  4272  043C  300B               	movlw	11
  4273  043D  008F               	movwf	15	;volatile
  4274                           
  4275                           ;Main.c: 449: if(timer1_counter%2 == 1) {
  4276  043E  1C2E               	btfss	_timer1_counter,0
  4277  043F  2C52               	goto	i1l821
  4278                           
  4279                           ;Main.c: 450: if(timer1_counter>(30*4) && delay_flag == 1) {
  4280  0440  3000               	movlw	0
  4281  0441  022F               	subwf	_timer1_counter+1,w
  4282  0442  3079               	movlw	121
  4283  0443  1903               	skipnz
  4284  0444  022E               	subwf	_timer1_counter,w
  4285  0445  1C03               	skipc
  4286  0446  2C53               	goto	i1l6672
  4287  0447  032A               	decf	_delay_flag,w
  4288  0448  042B               	iorwf	_delay_flag+1,w
  4289  0449  1D03               	skipz
  4290  044A  2C53               	goto	i1l6672
  4291                           
  4292                           ; Regs used in i1_RelayOff: []
  4293                           
  4294                           ;Main.c: 451: RelayOff();
  4295  044B  1006               	bcf	6,0
  4296                           
  4297                           ;Main.c: 452: delay_flag = 0;
  4298  044C  01AA               	clrf	_delay_flag
  4299  044D  01AB               	clrf	_delay_flag+1
  4300                           
  4301                           ;Main.c: 453: SendRelayOff();
  4302  044E  247F  118A         	fcall	_SendRelayOff
  4303                           
  4304                           ;Main.c: 454: PORTBbits.RB7 = 0;
  4305  0450  1386               	bcf	6,7	;volatile
  4306  0451  2C53               	goto	i1l6672
  4307  0452                     i1l821:	
  4308                           
  4309                           ;Main.c: 457: PORTBbits.RB7 = 1;
  4310  0452  1786               	bsf	6,7	;volatile
  4311  0453                     i1l6672:	
  4312                           
  4313                           ;Main.c: 458: }
  4314                           ;Main.c: 459: timer1_counter++;
  4315  0453  0AAE               	incf	_timer1_counter,f
  4316  0454  1903               	skipnz
  4317  0455  0AAF               	incf	_timer1_counter+1,f
  4318                           
  4319                           ;Main.c: 460: PIR1bits.TMR1IF = 0;
  4320  0456  100C               	bcf	12,0	;volatile
  4321                           
  4322                           ;Main.c: 461: } else{
  4323  0457  2C5C               	goto	i1l825
  4324  0458                     i1l6676:	
  4325                           
  4326                           ;Main.c: 462: PIR1 = 0B00000000;
  4327  0458  018C               	clrf	12	;volatile
  4328                           
  4329                           ;Main.c: 463: PIR2 = 0B00000000;
  4330  0459  018D               	clrf	13	;volatile
  4331                           
  4332                           ;Main.c: 464: INTCON = 0B11000000;
  4333  045A  30C0               	movlw	192
  4334  045B  008B               	movwf	11	;volatile
  4335  045C                     i1l825:	
  4336  045C  087C               	movf	??_isr+5,w
  4337  045D  008A               	movwf	10
  4338  045E  087B               	movf	??_isr+4,w
  4339  045F  0084               	movwf	4
  4340  0460  0E7A               	swapf	(??_isr+3)^(0+-128),w
  4341  0461  0083               	movwf	3
  4342  0462  0EFE               	swapf	126,f
  4343  0463  0E7E               	swapf	126,w
  4344  0464  0009               	retfie
  4345  0465                     __end_of_isr:	
  4346  0465                     __ptext1088:	
  4347 ;; =============== function i1_putch ends ============
  4348                           
  4349                           
  4350 ;; *************** function i1_ResetUart *****************
  4351 ;; Defined at:
  4352 ;;		line 125 in file "../Main.c"
  4353 ;; Parameters:    Size  Location     Type
  4354 ;;		None
  4355 ;; Auto vars:     Size  Location     Type
  4356 ;;		None
  4357 ;; Return value:  Size  Location     Type
  4358 ;;		None               void
  4359 ;; Registers used:
  4360 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4361 ;; Tracked objects:
  4362 ;;		On entry : 0/0
  4363 ;;		On exit  : 60/0
  4364 ;;		Unchanged: FFE9F/0
  4365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4366 ;;      Params:         0       0       0       0       0
  4367 ;;      Locals:         0       0       0       0       0
  4368 ;;      Temps:          0       0       0       0       0
  4369 ;;      Totals:         0       0       0       0       0
  4370 ;;Total ram usage:        0 bytes
  4371 ;; Hardware stack levels used:    1
  4372 ;; This function calls:
  4373 ;;		Nothing
  4374 ;; This function is called by:
  4375 ;;		_isr
  4376 ;; This function uses a non-reentrant model
  4377 ;;
  4378  0465                     i1_ResetUart:	
  4379                           
  4380                           ;Main.c: 126: static unsigned char i;
  4381                           ;Main.c: 127: rcvCommand = 0x00;
  4382                           
  4383                           ; Regs used in i1_ResetUart: [wreg-fsr0h+status,2+status,0]
  4384  0465  1283               	bcf	3,5	;RP0=0, select bank0
  4385  0466  1303               	bcf	3,6	;RP1=0, select bank0
  4386  0467  01BE               	clrf	_rcvCommand
  4387                           
  4388                           ;Main.c: 128: rcvLength = 0x00;
  4389  0468  01C0               	clrf	_rcvLength
  4390                           
  4391                           ;Main.c: 129: rcvCount = 0x00;
  4392  0469  01BF               	clrf	_rcvCount
  4393                           
  4394                           ;Main.c: 130: for(i=0; i < 8; i++){rcvData[i] = 0x00;}
  4395  046A  01B0               	clrf	ResetUart@i
  4396  046B                     i1l6684:	
  4397  046B  3008               	movlw	8
  4398  046C  0230               	subwf	ResetUart@i,w
  4399  046D  1803               	btfsc	3,0
  4400  046E  2C76               	goto	i1l6694
  4401  046F  0830               	movf	ResetUart@i,w
  4402  0470  3E20               	addlw	_rcvData& (0+255)
  4403  0471  0084               	movwf	4
  4404  0472  1383               	bcf	3,7	;select IRP bank0
  4405  0473  0180               	clrf	0
  4406  0474  0AB0               	incf	ResetUart@i,f
  4407  0475  2C6B               	goto	i1l6684
  4408  0476                     i1l6694:	
  4409                           
  4410                           ;Main.c: 131: rcvCRC = 0x00;
  4411  0476  01BD               	clrf	_rcvCRC
  4412                           
  4413                           ;Main.c: 132: rcvStartOk = 0;
  4414  0477  105B               	bcf	_rcvStartOk/(0+8),_rcvStartOk& (0+7)
  4415                           
  4416                           ;Main.c: 133: rcvAddrOk = 0;
  4417  0478  107D               	bcf	_rcvAddrOk/(0+8),_rcvAddrOk& (0+7)
  4418                           
  4419                           ;Main.c: 134: rcvCommandOk = 0;
  4420  0479  117D               	bcf	_rcvCommandOk/(0+8),_rcvCommandOk& (0+7)
  4421                           
  4422                           ;Main.c: 135: rcvLengthOk = 0;
  4423  047A  127D               	bcf	_rcvLengthOk/(0+8),_rcvLengthOk& (0+7)
  4424                           
  4425                           ;Main.c: 136: rcvDataOk = 0;
  4426  047B  11FD               	bcf	_rcvDataOk/(0+8),_rcvDataOk& (0+7)
  4427                           
  4428                           ;Main.c: 137: rcvCRCOk = 0;
  4429  047C  10FD               	bcf	_rcvCRCOk/(0+8),_rcvCRCOk& (0+7)
  4430                           
  4431                           ;Main.c: 138: rcvTerminalOk = 0;
  4432  047D  12FD               	bcf	_rcvTerminalOk/(0+8),_rcvTerminalOk& (0+7)
  4433  047E  0008               	return
  4434  047F                     __end_ofi1_ResetUart:	
  4435  047F                     __ptext1086:	
  4436 ;; =============== function _isr ends ============
  4437                           
  4438                           
  4439 ;; *************** function _SendRelayOff *****************
  4440 ;; Defined at:
  4441 ;;		line 315 in file "../Main.c"
  4442 ;; Parameters:    Size  Location     Type
  4443 ;;		None
  4444 ;; Auto vars:     Size  Location     Type
  4445 ;;  relayLenght     2    0        unsigned int 
  4446 ;;  relayCommand    2    3[COMMON] unsigned int 
  4447 ;;  relayCRC        2    1[COMMON] unsigned int 
  4448 ;; Return value:  Size  Location     Type
  4449 ;;		None               void
  4450 ;; Registers used:
  4451 ;;		wreg, status,2, status,0, pclath, cstack
  4452 ;; Tracked objects:
  4453 ;;		On entry : 60/0
  4454 ;;		On exit  : 60/0
  4455 ;;		Unchanged: FFF9F/0
  4456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4457 ;;      Params:         0       0       0       0       0
  4458 ;;      Locals:         6       0       0       0       0
  4459 ;;      Temps:          0       0       0       0       0
  4460 ;;      Totals:         6       0       0       0       0
  4461 ;;Total ram usage:        6 bytes
  4462 ;; Hardware stack levels used:    1
  4463 ;; Hardware stack levels required when called:    1
  4464 ;; This function calls:
  4465 ;;		i1_putch
  4466 ;; This function is called by:
  4467 ;;		_isr
  4468 ;; This function uses a non-reentrant model
  4469 ;;
  4470  047F                     _SendRelayOff:	
  4471                           
  4472                           ;Main.c: 316: unsigned int relayCommand = 0x36;
  4473                           
  4474                           ; Regs used in _SendRelayOff: [wreg+status,2+status,0+pclath+cstack]
  4475  047F  3036               	movlw	54
  4476  0480  00F3               	movwf	SendRelayOff@relayCommand
  4477  0481  01F4               	clrf	SendRelayOff@relayCommand+1
  4478                           
  4479                           ;Main.c: 318: unsigned int relayCRC = 0x40 ^ 0x00 ^ relayCommand ^ relayLenght;
  4480  0482  0874               	movf	SendRelayOff@relayCommand+1,w
  4481  0483  00F2               	movwf	SendRelayOff@relayCRC+1
  4482  0484  0873               	movf	SendRelayOff@relayCommand,w
  4483  0485  00F1               	movwf	SendRelayOff@relayCRC
  4484  0486  3040               	movlw	64
  4485  0487  06F1               	xorwf	SendRelayOff@relayCRC,f
  4486                           
  4487                           ;Main.c: 319: putch(0x40);
  4488  0488  2499  118A         	fcall	i1_putch
  4489                           
  4490                           ;Main.c: 320: putch(0x00);
  4491  048A  3000               	movlw	0
  4492  048B  2499  118A         	fcall	i1_putch
  4493                           
  4494                           ;Main.c: 321: putch(relayCommand);
  4495  048D  0873               	movf	SendRelayOff@relayCommand,w
  4496  048E  2499  118A         	fcall	i1_putch
  4497                           
  4498                           ;Main.c: 322: putch(relayLenght);
  4499  0490  3000               	movlw	0
  4500  0491  2499  118A         	fcall	i1_putch
  4501                           
  4502                           ;Main.c: 323: putch(relayCRC);
  4503  0493  0871               	movf	SendRelayOff@relayCRC,w
  4504  0494  2499  118A         	fcall	i1_putch
  4505                           
  4506                           ;Main.c: 324: putch(0x0A);
  4507  0496  300A               	movlw	10
  4508  0497  2499               	fcall	i1_putch
  4509  0498  0008               	return
  4510  0499                     __end_of_SendRelayOff:	
  4511  0499                     __ptext1087:	
  4512 ;; =============== function _SendRelayOff ends ============
  4513                           
  4514                           
  4515 ;; *************** function i1_putch *****************
  4516 ;; Defined at:
  4517 ;;		line 7 in file "../usart.c"
  4518 ;; Parameters:    Size  Location     Type
  4519 ;;  putch           1    wreg     unsigned char 
  4520 ;; Auto vars:     Size  Location     Type
  4521 ;;  putch           1    0[COMMON] unsigned char 
  4522 ;; Return value:  Size  Location     Type
  4523 ;;		None               void
  4524 ;; Registers used:
  4525 ;;		wreg
  4526 ;; Tracked objects:
  4527 ;;		On entry : 60/0
  4528 ;;		On exit  : 60/0
  4529 ;;		Unchanged: FFF9F/0
  4530 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4531 ;;      Params:         0       0       0       0       0
  4532 ;;      Locals:         1       0       0       0       0
  4533 ;;      Temps:          0       0       0       0       0
  4534 ;;      Totals:         1       0       0       0       0
  4535 ;;Total ram usage:        1 bytes
  4536 ;; Hardware stack levels used:    1
  4537 ;; This function calls:
  4538 ;;		Nothing
  4539 ;; This function is called by:
  4540 ;;		_SendRelayOff
  4541 ;; This function uses a non-reentrant model
  4542 ;;
  4543  0499                     i1_putch:	
  4544                           
  4545                           ; Regs used in i1_putch: [wreg]
  4546                           ;i1putch@byte stored from wreg
  4547  0499  00F0               	movwf	i1putch@byte
  4548  049A                     i1l1426:	
  4549                           ;usart.c: 9: while(!TXIF)
  4550                           
  4551  049A  1E0C               	btfss	12,4
  4552  049B  2C9A               	goto	i1l1426
  4553                           
  4554                           ;usart.c: 11: TXREG = byte;
  4555  049C  0870               	movf	i1putch@byte,w
  4556  049D  0099               	movwf	25	;volatile
  4557  049E  0008               	return
  4558  049F                     __end_ofi1_putch:	
  4559                           
  4560                           	psect	intentry
  4561  0004                     __pintentry:	
  4562                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4563                           
  4564  0004                     interrupt_function:	
  4565  007E                     saved_w	set	btemp
  4566  0004  00FE               	movwf	btemp
  4567  0005  0E03               	swapf	3,w
  4568  0006  00FA               	movwf	??_isr+3
  4569  0007  0804               	movf	4,w
  4570  0008  00FB               	movwf	??_isr+4
  4571  0009  080A               	movf	10,w
  4572  000A  00FC               	movwf	??_isr+5
  4573  000B  118A  2BCD         	ljmp	_isr
  4574                           
  4575                           	psect	text1089
  4576  0598                     __ptext1089:	
  4577 ;; =============== function i1_ResetUart ends ============
  4578                           
  4579                           
  4580 ;; *************** function i1_RelayOff *****************
  4581 ;; Defined at:
  4582 ;;		line 121 in file "../Main.c"
  4583 ;; Parameters:    Size  Location     Type
  4584 ;;		None
  4585 ;; Auto vars:     Size  Location     Type
  4586 ;;		None
  4587 ;; Return value:  Size  Location     Type
  4588 ;;		None               void
  4589 ;; Registers used:
  4590 ;;		None
  4591 ;; Tracked objects:
  4592 ;;		On entry : 60/0
  4593 ;;		On exit  : 60/0
  4594 ;;		Unchanged: FFF9F/0
  4595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4596 ;;      Params:         0       0       0       0       0
  4597 ;;      Locals:         0       0       0       0       0
  4598 ;;      Temps:          0       0       0       0       0
  4599 ;;      Totals:         0       0       0       0       0
  4600 ;;Total ram usage:        0 bytes
  4601 ;; Hardware stack levels used:    1
  4602 ;; This function calls:
  4603 ;;		Nothing
  4604 ;; This function is called by:
  4605 ;;		_isr
  4606 ;; This function uses a non-reentrant model
  4607 ;;
  4608  0598                     i1_RelayOff:	
  4609                           
  4610                           ; Regs used in i1_RelayOff: []
  4611  0598  1006               	bcf	6,0
  4612  0599  0008               	return
  4613  059A                     __end_ofi1_RelayOff:	
  4614                           
  4615                           	psect	text1090
  4616  0000                     __ptext1090:	
  4617 ;; =============== function i1_RelayOff ends ============
  4618                           
  4619  007E                     btemp	set	126	;btemp
  4620  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Thu Sep 06 14:54:35 2018

             ?_i2c_WaitForSCL 0070                            _RD 0C60                            _WR 0C61  
                          fsr 0004                 ??_i2c_GetByte 0052                    ReadEE@addr 004E  
            i2c_SendByte@byte 0050                           l712 0000                           l722 0000  
                         l709 0000                           l725 0000                           l719 0000  
                         l728 0000                           l781 04E7                           l774 0000  
                         _CKP 00A4                           _GIE 005F                           _RA0 0028  
                         _RB0 0030                           _RB1 0031                           _RB4 0034  
                         _PR2 0092                           _H_L 0033                           _H_M 0034  
                         u945 057B                           _H_S 0035                           _L_L 0036  
                         _L_M 0037                           _L_S 0038                           _T_L 0039  
                         _T_M 003B                           _isr 03CD                           fsr0 0004  
                         indf 0000       __size_of_DS18B20Convert 0019       __size_of_DS18B20Initial 001F  
               ??_i2c_Restart 004E                    _DataHandle 000F                 ??_i2c_PutByte 0052  
__size_of_i2c_SendAcknowledge 001A                    ReadSN@data 0051                          l2051 0245  
                        l2045 0000                          l2053 0269                          l2048 0000  
                        l2072 02C3                          l1426 0543                          l2074 0000  
                        l2066 0292                          l4011 0000                          l1429 0000  
                        l4008 0000                          l2722 037B                          l2731 0000  
                        l6100 0000                          l2740 035F                          l2725 038C  
                        l3390 0000                          l2726 0390                          l6030 0000  
                        l6102 052B                          l6110 0000                          l2734 032F  
                        l3383 0000                          l2743 035B                          l6032 0000  
                        l6104 053D                          l6120 0000                          l2744 0000  
                        l2736 034B                          l3393 0000                          l2753 0000  
                        l3386 0000                          l6034 0000                          l6050 0000  
                        l6042 0216                          l6106 0000                          l6122 0000  
                        l6202 002F                          l3379 0154                          l6036 0000  
                        l6052 0000                          l6044 0000                          l6060 0000  
                        l6124 0000                          l6140 0000                          l6132 0000  
                        l6300 0000                          l6204 0000                          l6038 0000  
                        l6054 0000                          l6046 0000                          l6070 0000  
                        l6062 0000                          l3398 0000                          l6126 02C5  
                        l6150 0352                          l6302 0000                          l6310 011A  
                        l6230 0052                          l6222 0044                          l6214 0036  
                        l6206 0000                          l6048 0000                          l6064 0000  
                        l6080 0000                          l6072 0000                          l6128 0000  
                        l6152 0000                          l6144 0342                          l6304 0000  
                        l6320 0000                          l6400 0000                          l6066 0000  
                        l6058 0000                          l6082 0000                          l6090 0000  
                        l6154 0000                          l6146 0000                          l6170 03BD  
                        l6314 0000                          l6330 0000                          l6402 0000  
                        l6068 0000                          l6092 0000                          l6084 0000  
                        l6172 03C6                          l6156 0000                          l6180 0000  
                        l6340 0000                          l6420 0000                          l6412 0000  
                        l6078 016F                          l6094 0000                          l6086 0000  
                        l6174 0000                          l6158 0000                          l6254 0074  
                        l6246 006C                          l6238 005F                          l6190 0000  
                        l6326 0316                          l6350 0000                          l6422 0000  
                        l6088 0000                          l6280 0000                          l6272 00CA  
                        l6264 00AE                          l6192 007F                          l6184 0027  
                        l6328 031F                          l6336 02DB                          l6360 030B  
                        l6432 0000                          l6424 0000                          l6098 0000  
                        l6282 0000                          l6194 002D                          l6338 02E6  
                        l6362 0000                          l6434 0000                          l6418 0000  
                        l5820 0169                          l6292 0000                          l6276 00E3  
                        l6268 00BD                          l6188 007B                          l6356 02F4  
                        l6372 026B                          l6436 0000                          l6444 0000  
                        l5814 0000                          l5822 0000                          l6294 0104  
                        l6286 0000                          l6358 02FF                          l6374 0000  
                        l6438 0000                          l6462 0000                          l6454 0000  
                        l6560 0000                          l6552 0000                          l6544 0000  
                        l5816 0000                          l5824 0000                          l6288 00F6  
                        l6384 0000                          l6376 0000                          l6368 0000  
                        l6720 0000                          l6570 0000                          l6562 0000  
                        l6546 054C                          l5818 0000                          l5826 0000  
                        l5834 0000                          l6386 0000                          l6394 018C  
                        l6466 0000                          l6730 0000                          l6722 0000  
                        l6714 0000                          l5780 0000                          l6564 0000  
                        l6556 0557                          l5828 0185                          l5860 0000  
                        l6388 0000                          l6396 0000                          l6468 0000  
                        l6740 0000                          l6732 0000                          l6724 0000  
                        l6716 0000                          ?_isr 0070                          l5782 0000  
                        l6566 0000                          l6558 0000                          l5870 0000  
                        l5862 0000                          l6398 0000                          l6750 0000  
                        l6742 0000                          l6734 0000                          l6726 0000  
                        l6718 0000                          l6568 0000                          l5872 0000  
                        l5864 0000                          l6760 04E3                          l6752 0000  
                        l6744 0000                          l6736 0000                          l6728 0000  
                        l5874 0000                          l5866 0000                          l5882 0575  
                        l5970 0000                          l6754 0000                          l6746 0000  
                        l6738 0000                          l5876 0000                          l5868 0000  
                        l5972 0000                          l6780 0000                          l6772 0000  
                        l6756 0000                          l6748 0000                          l5878 0000  
                        l5990 0395                          l5982 0381                          l6774 0000  
                        l6766 04F2                          l6758 0000                          l5992 03A0  
                        l5976 0370                          l6784 0000                          l6776 0000  
                        l6768 0000                          l5986 0392                          l5978 0000  
                        l6786 0000                          l6778 0000                          _CREN 00C4  
                        u2017 0297                          u2107 021B                          u2027 02A5  
                        u2117 0223                          u2037 0192                          u2127 022B  
                        u2047 019A                          u1600 0257                          u2137 0233  
                        u2057 026E                          u2147 023B                          u2067 027A  
                        u2157 0200                          u2077 02C8                          u1614 025A  
                        u2167 0208                          u2087 02D0                          u1375 0039  
                        u1624 0261                          u2177 0210                          u2097 0289  
                        u1625 025F                          u1395 0047                          _PIE1 008C  
                        u1594 024E                          u1595 024C                          _PEIE 005E  
                        _RCIF 0065                          _PIR1 000C                          _PIR2 000D  
                        _OERR 00C1                          _WREN 0C62                          _TXIF 0064  
              ??_i2c_ReadByte 004F              __end_of_I2CReadH 01E3              __end_of_I2CReadL 01C7  
                        _main 049F                          btemp 007E                ??_i2c_SendByte 004F  
                        start 000D               __end_ofi1_putch 049F              ??_AutoAdjustGain 004E  
             __end_of_RelayOn 0598                         ??_isr 0077                         ?_main 0057  
                       _EEADR 010D                         _CFG_H 0031                         _CFG_L 0032  
                       _EEPGD 0C67               __end_of_WriteEE 016D                         _ANSEL 009B  
                       _T1CON 0010               __end_of_WriteSN 0153                         _T2CON 0012  
                       i1l712 0000                         i1l801 0401                         i1l811 042D  
                       i1l821 0452                         i1l719 0000                         i1l807 0425  
                       i1l825 045C                         i1l790 0438                         i1l791 03E0  
                       i1l777 0000                         i1l795 03EA                         i1l799 03F1  
                       _RCREG 001A                 i2c_ReadByte@i 0051                         _RCSTA 0018  
                       _TMR1H 000F                         _TMR1L 000E                         _SPBRG 0099  
                       _PORTA 0005                         _PORTB 0006                         _TRISA 0085  
                       _TRISB 0086                         _SSPEN 00A5                         _TXREG 0019  
                       _TXSTA 0098                         _Delay 0573                         _T_Lsb 003A  
                       _T_Msb 003C                         _Reset 0369           __end_of_i2c_GetByte 01FB  
                 ReadByte@buf 0050               i2c_GetByte@byte 0052                         _putch 0542  
             i2c_GetByte@more 0054                __pbitbssCOMMON 03E8                         pclath 000A  
                 ?i1_RelayOff 0070           __end_of_i2c_Restart 0216                         status 0003  
         _i2c_ReadAcknowledge 018C           __end_of_i2c_PutByte 01EB                         wtemp0 007E  
               i2c_SendByte@i 0051                  __end_of_main 0519              __end_of_i2c_Stop 0242  
            __end_of_ReadByte 03CD      __end_of_DS18B20ReadFlash 030E                 ??_SendService 004F  
        ?_i2c_ReadAcknowledge 0070                        ??_main 005B              __end_of_RelayOff 0596  
                      ?_Delay 004E                    ResetUart@i 0030                        ?_Reset 0070  
                 ?_DataHandle 0070                        _ADCON0 001F                        _ADCON1 009F  
                      _EEDATA 010C                        _CCPR1H 0016                        _CCPR1L 0015  
                      _EECON2 018D                        ?_putch 0070                        i1l1426 049A  
                      i1l1429 0000                        Delay@k 0028                        i1l6602 0000  
                      i1l6700 0000                        i1l6620 0000                        i1l6612 0000  
                      i1l6604 0000                        i1l6702 0000                        i1l6710 0000  
                      i1l6630 03FF                        i1l6606 03DD                        i1l6704 0000  
                      i1l6640 0421                        i1l6624 0000                        Delay@t 004E  
                      i1l6706 0000                        i1l6618 0000                        i1l6708 0000  
                      i1l6580 0000                        i1l6572 0000                        i1l6636 0000  
                      i1l6628 03FB                        i1l6590 0000                        i1l6582 0000  
                      i1l6574 0000                        i1l6670 0000                        i1l6654 0435  
                      i1l6680 0000                        i1l6592 0000                        i1l6584 0000  
                      i1l6576 0000                        i1l6672 0453                        i1l6690 0000  
                      i1l6682 0000                        i1l6586 0000                        i1l6578 0000  
                      i1l6674 0000                        i1l6666 0000                        i1l6658 0000  
                      i1l6594 0000                        i1l6684 046B                        i1l6588 0000  
                      i1l6668 0000                        i1l6676 0458                        i1l6694 0476  
                      i1l6678 0000                        i1l6696 0000                        i1l6698 0000  
                      _INTCON 000B                        u186_25 041D                     ??i1_putch 0070  
                      _TMR1IE 0460                        _TRISA0 0428                        _TRISB1 0431  
                      _TRISB2 0432                        _TRISB4 0434                        _TRISB5 0435  
                      _SSPCON 0014        i2c_ReadAcknowledge@ack 0050                        _ReadEE 017E  
                      _ReadSN 016D                     ??_RelayOn 004E                        Reset@i 004F  
                      Reset@k 004E                     ??_WriteEE 004F                     ??_WriteSN 0051  
                ?_timer1_init 0070                        _rcvCRC 003D                        _sndCRC 0041  
          __size_of_ResetUart 0018         ??_i2c_ReadAcknowledge 004F                   _i2c_GetByte 01EB  
        __end_of_i2c_ReadByte 02B9                        clrloop 058D           __size_ofi1_RelayOff 0002  
              _DS18B20Convert 02D3                     ?_I2CReadH 0070                     ?_I2CReadL 0070  
               ?_SendRelayOff 0070                _DS18B20Initial 030E          __end_of_i2c_SendByte 0284  
                      saved_w 007E           __end_of_SendService 0542                   _i2c_Restart 01FB  
                 _i2c_PutByte 01E3                  ?i1_ResetUart 0070            __size_of_WriteByte 003C  
            ??_i2c_WaitForSCL 004E                 __end_of_Delay 0581                __pcstackCOMMON 0070  
               __end_of_Reset 03A2           _i2c_SendAcknowledge 02B9           __size_of_DataHandle 0115  
                 i1putch@byte 0070                 __end_of_putch 0548        __end_of_DS18B20Convert 02EC  
      __end_of_DS18B20Initial 032D                ??_SendRelayOff 0071                    ??_I2CReadH 0055  
                  ??_I2CReadL 0055                       ??_Delay 0050                       ??_Reset 004E  
        ?_i2c_SendAcknowledge 0070                       ??_putch 004E                    __pbssBANK0 0020  
                   ?_i2c_Stop 0070                  WriteByte@dat 004E             __end_of_ResetUart 0560  
                   ?_ReadByte 0070                     ?_RelayOff 0070                       ?_ReadEE 0070  
                  WriteByte@i 0050                    WriteByte@j 004F                       ?_ReadSN 0070  
                  _delay_flag 002A                    __pmaintext 049F                    __pintentry 0004  
                     _CCP1CON 0017                    __ptext1060 018C                    __ptext1061 0242  
                  __ptext1070 0519                    __ptext1062 02EC                    __ptext1054 0000  
                  __ptext1071 016D                    __ptext1063 02D3                    __ptext1055 01AB  
                  __ptext1080 0153                    __ptext1072 0124                    __ptext1064 030E  
                  __ptext1056 01C7                    __ptext1081 059A                    __ptext1073 0216  
                  __ptext1065 000F                    __ptext1057 01EB                    __ptext1090 0000  
                  __ptext1082 0548                    __ptext1074 01FB                    __ptext1066 03A2  
                  __ptext1058 01E3                    __ptext1083 0594                    __ptext1075 0369  
                  __ptext1067 032D                    __ptext1059 0290                    __ptext1084 0596  
                  __ptext1076 0573                    __ptext1068 02B9                    __ptext1085 03CD  
                  __ptext1077 0560                    __ptext1069 0284                    __ptext1086 047F  
                  __ptext1078 0542                    __ptext1087 0499                    __ptext1079 017E  
                  __ptext1088 0465                    __ptext1089 0598               ?_DS18B20Convert 0070  
                 _SendService 0519               ?_DS18B20Initial 0070             __end_of_WriteByte 0369  
       ??_i2c_SendAcknowledge 004E                       ReadSN@i 0052                    ??_i2c_Stop 004E  
                     i1_putch 0499                    ??_ReadByte 004E                  ??i1_RelayOff 0070  
                  ??_RelayOff 004E                       _RelayOn 0596               __size_of_ReadEE 000E  
             __size_of_ReadSN 0011         __size_of_i2c_ReadByte 0029                       _WriteEE 0153  
                     _WriteSN 0124             ?_DS18B20ReadFlash 0070         __size_of_i2c_SendByte 0042  
                     _idleCnt 002C          __size_of_timer1_init 0013            ??_DS18B20ReadFlash 0052  
                   _T1CONbits 0010            __end_ofi1_RelayOff 059A                  __size_of_isr 0098  
                     _rcvData 0020                    _rcvCommand 003E                       _sndData 0045  
                ??_DataHandle 0053          end_of_initialization 0589                    _sndCommand 0042  
                  _rcvStartOk 02D8     i2c_SendAcknowledge@status 004F          __size_ofi1_ResetUart 001A  
                _i2c_ReadByte 0290          __end_of_SendRelayOff 0499                  _i2c_SendByte 0242  
          __end_of_DataHandle 0124                  ?_i2c_GetByte 0070                     _PORTBbits 0006  
            DataHandle@snNumH 0055              DataHandle@snNumL 0056       __size_of_AutoAdjustGain 0001  
                   _TRISBbits 0086             __size_of_I2CReadH 001C             __size_of_I2CReadL 001C  
                ?_i2c_Restart 0070                  ?_i2c_PutByte 0070                     ReadEE@num 004F  
                   ReadByte@i 004E                     ReadByte@j 0051   __end_of_i2c_ReadAcknowledge 01AB  
              __end_of_ReadEE 018C                __end_of_ReadSN 017E                 _rcvTerminalOk 03ED  
        SendRelayOff@relayCRC 0071                _timer1_counter 002E                 __pbitbssBANK0 02D8  
         start_initialization 0581                   __end_of_isr 0465             __size_of_i2c_Stop 002C  
           __size_of_ReadByte 002B                      ??_ReadEE 004E                     _ResetUart 0548  
                    ??_ReadSN 0050             __size_of_RelayOff 0002              ??_DS18B20Convert 0052  
            ??_DS18B20Initial 0052                  ?_SendService 0070                   WriteEE@addr 004F  
                 WriteEE@data 004E                 __pcstackBANK0 004E                     _WriteByte 032D  
                 WriteSN@numH 0051                   WriteSN@numL 0050         __size_of_SendRelayOff 001A  
    SendRelayOff@relayCommand 0073                      ?i1_putch 0070                    ?_ResetUart 0070  
                    ?_RelayOn 0070                      ?_WriteEE 004E                      ?_WriteSN 0050  
     __size_of_i2c_WaitForSCL 000C               i2c_PutByte@data 0052   __end_of_i2c_SendAcknowledge 02D3  
                    _I2CReadH 01C7                      _I2CReadL 01AB          __size_of_i2c_GetByte 0010  
              _AutoAdjustGain 059A                __size_of_Delay 000E                  _SendRelayOff 047F  
              __size_of_Reset 0039                    ?_WriteByte 0070                     _rcvAddrOk 03E8  
                   _rcvDataOk 03EB                  _rcvCommandOk 03EA                __size_of_putch 0006  
   __size_of_DS18B20ReadFlash 0022          __size_of_i2c_Restart 001B          __size_of_i2c_PutByte 0008  
                   _rcvLength 0040             interrupt_function 0004                     _sndLength 0044  
                    _PIR1bits 000C              i2c_ReadByte@byte 0050                 ??_timer1_init 004E  
      __end_of_AutoAdjustGain 059B                 ??i1_ResetUart 0070                      _i2c_Stop 0216  
                    _ReadByte 03A2              __size_ofi1_putch 0006                      _RelayOff 0594  
                 ??_ResetUart 004E              __size_of_RelayOn 0002              __size_of_WriteEE 001A  
            __size_of_WriteSN 002F               ?_AutoAdjustGain 0070           __end_of_timer1_init 0573  
        __size_of_SendService 0029                   ??_WriteByte 004E                      _rcvCRCOk 03E9  
               __size_of_main 007A                      _rcvCount 003F                      _sndCount 0043  
         __end_ofi1_ResetUart 047F                      clear_ram 058C                   _rcvLengthOk 03EC  
                    _unitAddr 004D                _i2c_WaitForSCL 0284                      main@argc 0057  
                    main@argv 0059  __size_of_i2c_ReadAcknowledge 001F                     putch@byte 004E  
            _DS18B20ReadFlash 02EC                      intlevel1 0000        __end_of_i2c_WaitForSCL 0290  
                 _timer1_init 0560             DS18B20ReadFlash@i 0052                   i1_ResetUart 0465  
             DS18B20Convert@i 0052                    i1_RelayOff 0598                 ?_i2c_ReadByte 0070  
             DS18B20Initial@i 0052                 ?_i2c_SendByte 0070  
