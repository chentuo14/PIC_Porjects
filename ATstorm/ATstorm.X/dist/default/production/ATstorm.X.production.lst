

HI-TECH Software PIC PRO Macro Assembler V9.83 build 10920 
                                                                                               Thu Jan 18 16:53:29 2018

HI-TECH Software Omniscient Code Generator (PRO mode) build 10920
     1                           	processor	16F88
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	config,global,class=CONFIG,delta=2
     5                           	psect	text1052,local,class=CODE,delta=2
     6                           	psect	cinit,global,class=CODE,delta=2
     7                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,delta=2
    14                           	psect	text1058,local,class=CODE,delta=2
    15                           	psect	text1061,local,class=CODE,delta=2
    16                           	psect	text1063,local,class=CODE,delta=2
    17                           	psect	text1068,local,class=CODE,delta=2
    18                           	psect	text1077,local,class=CODE,delta=2
    19                           	psect	text1078,local,class=CODE,delta=2
    20                           	psect	text1079,local,class=CODE,delta=2
    21                           	psect	text1080,local,class=CODE,delta=2
    22                           	psect	text1081,local,class=CODE,delta=2
    23                           	psect	text1082,local,class=CODE,delta=2
    24                           	psect	intentry,global,class=CODE,delta=2
    25                           	psect	text1084,local,class=CODE,delta=2
    26                           	dabs	1,0x7E,2
    27  000A                     	;#
    28                           
    29                           	psect	config
    30  2007  FF2E               	dw	65326	;#
    31  2008  FFFC               	dw	65532	;#
    32                           
    33                           	psect	text1052
    34  0000                     __ptext1052:	
    35  001F                     _ADCON0	set	31
    36  0017                     _CCP1CON	set	23
    37  0016                     _CCPR1H	set	22
    38  0015                     _CCPR1L	set	21
    39  000B                     _INTCON	set	11
    40  000C                     _PIR1	set	12
    41  000D                     _PIR2	set	13
    42  0005                     _PORTA	set	5
    43  0006                     _PORTB	set	6
    44  001A                     _RCREG	set	26
    45  0018                     _RCSTA	set	24
    46  0014                     _SSPCON	set	20
    47  0010                     _T1CON	set	16
    48  0012                     _T2CON	set	18
    49  0019                     _TXREG	set	25
    50  00A4                     _CKP	set	164
    51  00C4                     _CREN	set	196
    52  00C1                     _OERR	set	193
    53  0028                     _RA0	set	40
    54  0030                     _RB0	set	48
    55  0031                     _RB1	set	49
    56  0034                     _RB4	set	52
    57  0065                     _RCIF	set	101
    58  00A5                     _SSPEN	set	165
    59  0064                     _TXIF	set	100
    60  009F                     _ADCON1	set	159
    61  009B                     _ANSEL	set	155
    62  008C                     _PIE1	set	140
    63  0092                     _PR2	set	146
    64  0099                     _SPBRG	set	153
    65  0085                     _TRISA	set	133
    66  0086                     _TRISB	set	134
    67  0098                     _TXSTA	set	152
    68  0428                     _TRISA0	set	1064
    69  0431                     _TRISB1	set	1073
    70  0432                     _TRISB2	set	1074
    71  0434                     _TRISB4	set	1076
    72  0435                     _TRISB5	set	1077
    73  010D                     _EEADR	set	269
    74  010C                     _EEDATA	set	268
    75  018D                     _EECON2	set	397
    76  0C67                     _EEPGD	set	3175
    77  0C60                     _RD	set	3168
    78  0C61                     _WR	set	3169
    79  0C62                     _WREN	set	3170
    80                           
    81                           	psect	cinit
    82  052D                     start_initialization:	
    83                           
    84                           ; Clear objects allocated to BITCOMMON
    85  052D  01F0               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
    86                           
    87                           ; Clear objects allocated to COMMON
    88  052E  01F7               	clrf	__pbssCOMMON& (0+127)
    89  052F  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
    90  0530  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
    91  0531  01FA               	clrf	(__pbssCOMMON+3)& (0+127)
    92  0532  01FB               	clrf	(__pbssCOMMON+4)& (0+127)
    93                           
    94                           ; Clear objects allocated to BANK0
    95  0533  1383               	bcf	3,7	;select IRP bank0
    96  0534  3020               	movlw	low __pbssBANK0
    97  0535  0084               	movwf	4
    98  0536  3045               	movlw	low (__pbssBANK0+37)
    99  0537  118A  254A         	fcall	clear_ram
   100  0539                     end_of_initialization:	
   101                           ;End of C runtime variable initialization code
   102                           
   103  0539  0183               	clrf	3
   104  053A  118A  2C73         	ljmp	_main	;jump to C main() function
   105                           
   106                           	psect	bitbssCOMMON
   107  0380                     __pbitbssCOMMON:	
   108  0380                     _rcvAddrOk:	
   109  0380                     	ds	1
   110  0381                     _rcvCRCOk:	
   111  0381                     	ds	1
   112  0382                     _rcvCommandOk:	
   113  0382                     	ds	1
   114  0383                     _rcvDataOk:	
   115  0383                     	ds	1
   116  0384                     _rcvLengthOk:	
   117  0384                     	ds	1
   118  0385                     _rcvStartOk:	
   119  0385                     	ds	1
   120  0386                     _rcvTerminalOk:	
   121  0386                     	ds	1
   122                           
   123                           	psect	bssCOMMON
   124  0077                     __pbssCOMMON:	
   125  0077                     ResetUart@i:	
   126  0077                     	ds	1
   127  0078                     _rcvCRC:	
   128  0078                     	ds	1
   129  0079                     _rcvCount:	
   130  0079                     	ds	1
   131  007A                     _sndCRC:	
   132  007A                     	ds	1
   133  007B                     _sndCount:	
   134  007B                     	ds	1
   135                           
   136                           	psect	bssBANK0
   137  0020                     __pbssBANK0:	
   138  0020                     _rcvData:	
   139  0020                     	ds	8
   140  0028                     Delay@k:	
   141  0028                     	ds	2
   142  002A                     _idleCnt:	
   143  002A                     	ds	2
   144  002C                     _CFG_H:	
   145  002C                     	ds	1
   146  002D                     _CFG_L:	
   147  002D                     	ds	1
   148  002E                     _H_L:	
   149  002E                     	ds	1
   150  002F                     _H_M:	
   151  002F                     	ds	1
   152  0030                     _H_S:	
   153  0030                     	ds	1
   154  0031                     _L_L:	
   155  0031                     	ds	1
   156  0032                     _L_M:	
   157  0032                     	ds	1
   158  0033                     _L_S:	
   159  0033                     	ds	1
   160  0034                     _T_L:	
   161  0034                     	ds	1
   162  0035                     _T_Lsb:	
   163  0035                     	ds	1
   164  0036                     _T_M:	
   165  0036                     	ds	1
   166  0037                     _T_Msb:	
   167  0037                     	ds	1
   168  0038                     _rcvCommand:	
   169  0038                     	ds	1
   170  0039                     _rcvLength:	
   171  0039                     	ds	1
   172  003A                     _sndCommand:	
   173  003A                     	ds	1
   174  003B                     _sndLength:	
   175  003B                     	ds	1
   176  003C                     _sndData:	
   177  003C                     	ds	8
   178  0044                     _unitAddr:	
   179  0044                     	ds	1
   180                           
   181                           	psect	clrtext
   182  054A                     clear_ram:	
   183                           ;	Called with FSR containing the base address, and
   184                           ;	W with the last address+1
   185                           
   186  054A  0064               	clrwdt	;clear the watchdog before getting into this loop
   187  054B                     clrloop:	
   188  054B  0180               	clrf	0	;clear RAM location pointed to by FSR
   189  054C  0A84               	incf	4,f	;increment pointer
   190  054D  0604               	xorwf	4,w	;XOR with final address
   191  054E  1903               	btfsc	3,2	;have we reached the end yet?
   192  054F  3400               	retlw	0	;all done for this memory range, return
   193  0550  0604               	xorwf	4,w	;XOR again to restore value
   194  0551  2D4B               	goto	clrloop	;do the next byte
   195                           
   196                           	psect	cstackCOMMON
   197  0071                     __pcstackCOMMON:	
   198  0071                     ?_i2c_Restart:	
   199  0071                     ?_i2c_Stop:	
   200                           ; 0 bytes @ 0x0
   201                           
   202  0071                     ?_ReadSN:	
   203                           ; 0 bytes @ 0x0
   204                           
   205  0071                     ?_putch:	
   206                           ; 0 bytes @ 0x0
   207                           
   208  0071                     ?_DS18B20Initial:	
   209                           ; 0 bytes @ 0x0
   210                           
   211  0071                     ?_DS18B20ReadFlash:	
   212                           ; 0 bytes @ 0x0
   213                           
   214  0071                     ?_RelayOn:	
   215                           ; 0 bytes @ 0x0
   216                           
   217  0071                     ?_RelayOff:	
   218                           ; 0 bytes @ 0x0
   219                           
   220  0071                     ?_ResetUart:	
   221                           ; 0 bytes @ 0x0
   222                           
   223  0071                     ?_I2CReadH:	
   224                           ; 0 bytes @ 0x0
   225                           
   226  0071                     ?_I2CReadL:	
   227                           ; 0 bytes @ 0x0
   228                           
   229  0071                     ?_AutoAdjustGain:	
   230                           ; 0 bytes @ 0x0
   231                           
   232  0071                     ?_DataHandle:	
   233                           ; 0 bytes @ 0x0
   234                           
   235  0071                     ?_SendService:	
   236                           ; 0 bytes @ 0x0
   237                           
   238  0071                     ?_isr:	
   239                           ; 0 bytes @ 0x0
   240                           
   241  0071                     ??_isr:	
   242                           ; 0 bytes @ 0x0
   243                           
   244  0071                     ?_i2c_SendAcknowledge:	
   245                           ; 0 bytes @ 0x0
   246                           
   247  0071                     ?_WriteByte:	
   248                           ; 0 bytes @ 0x0
   249                           
   250  0071                     ?i1_ResetUart:	
   251                           ; 0 bytes @ 0x0
   252                           
   253  0071                     ??i1_ResetUart:	
   254                           ; 0 bytes @ 0x0
   255                           
   256  0071                     ?_i2c_PutByte:	
   257                           ; 0 bytes @ 0x0
   258                           
   259  0071                     ?_i2c_GetByte:	
   260                           ; 1 bytes @ 0x0
   261                           
   262  0071                     ?_ReadEE:	
   263                           ; 1 bytes @ 0x0
   264                           
   265  0071                     ?_DS18B20Convert:	
   266                           ; 1 bytes @ 0x0
   267                           
   268  0071                     ?_i2c_WaitForSCL:	
   269                           ; 1 bytes @ 0x0
   270                           
   271  0071                     ?_i2c_SendByte:	
   272                           ; 1 bytes @ 0x0
   273                           
   274  0071                     ?_i2c_ReadAcknowledge:	
   275                           ; 1 bytes @ 0x0
   276                           
   277  0071                     ?_i2c_ReadByte:	
   278                           ; 1 bytes @ 0x0
   279                           
   280  0071                     ?_Reset:	
   281                           ; 1 bytes @ 0x0
   282                           
   283  0071                     ?_ReadByte:	
   284                           ; 1 bytes @ 0x0
   285                           
   286                           
   287                           ; 1 bytes @ 0x0
   288  0071                     	ds	6
   289                           
   290                           	psect	cstackBANK0
   291  0045                     __pcstackBANK0:	
   292  0045                     ??_i2c_Restart:	
   293  0045                     ??_i2c_Stop:	
   294                           ; 0 bytes @ 0x0
   295                           
   296  0045                     ?_WriteEE:	
   297                           ; 0 bytes @ 0x0
   298                           
   299  0045                     ??_ReadEE:	
   300                           ; 0 bytes @ 0x0
   301                           
   302  0045                     ??_putch:	
   303                           ; 0 bytes @ 0x0
   304                           
   305  0045                     ??_i2c_WaitForSCL:	
   306                           ; 0 bytes @ 0x0
   307                           
   308  0045                     ??_RelayOn:	
   309                           ; 0 bytes @ 0x0
   310                           
   311  0045                     ??_RelayOff:	
   312                           ; 0 bytes @ 0x0
   313                           
   314  0045                     ?_Delay:	
   315                           ; 0 bytes @ 0x0
   316                           
   317  0045                     ??_ResetUart:	
   318                           ; 0 bytes @ 0x0
   319                           
   320  0045                     ??_AutoAdjustGain:	
   321                           ; 0 bytes @ 0x0
   322                           
   323  0045                     ??_i2c_SendAcknowledge:	
   324                           ; 0 bytes @ 0x0
   325                           
   326  0045                     ??_Reset:	
   327                           ; 0 bytes @ 0x0
   328                           
   329  0045                     ??_WriteByte:	
   330                           ; 0 bytes @ 0x0
   331                           
   332  0045                     ??_ReadByte:	
   333                           ; 0 bytes @ 0x0
   334                           
   335  0045                     putch@byte:	
   336                           ; 0 bytes @ 0x0
   337                           
   338  0045                     Reset@k:	
   339                           ; 1 bytes @ 0x0
   340                           
   341  0045                     WriteByte@dat:	
   342                           ; 1 bytes @ 0x0
   343                           
   344  0045                     WriteEE@data:	
   345                           ; 1 bytes @ 0x0
   346                           
   347  0045                     ReadEE@addr:	
   348                           ; 1 bytes @ 0x0
   349                           
   350  0045                     Delay@t:	
   351                           ; 1 bytes @ 0x0
   352                           
   353  0045                     ReadByte@i:	
   354                           ; 2 bytes @ 0x0
   355                           
   356                           
   357                           ; 2 bytes @ 0x0
   358  0045                     	ds	1
   359  0046                     ??_WriteEE:	
   360  0046                     ??_SendService:	
   361                           ; 0 bytes @ 0x1
   362                           
   363  0046                     ??_i2c_SendByte:	
   364                           ; 0 bytes @ 0x1
   365                           
   366  0046                     ??_i2c_ReadAcknowledge:	
   367                           ; 0 bytes @ 0x1
   368                           
   369  0046                     ??_i2c_ReadByte:	
   370                           ; 0 bytes @ 0x1
   371                           
   372  0046                     i2c_SendAcknowledge@status:	
   373                           ; 0 bytes @ 0x1
   374                           
   375  0046                     WriteByte@j:	
   376                           ; 1 bytes @ 0x1
   377                           
   378  0046                     WriteEE@addr:	
   379                           ; 1 bytes @ 0x1
   380                           
   381  0046                     ReadEE@num:	
   382                           ; 1 bytes @ 0x1
   383                           
   384  0046                     Reset@i:	
   385                           ; 1 bytes @ 0x1
   386                           
   387                           
   388                           ; 2 bytes @ 0x1
   389  0046                     	ds	1
   390  0047                     ?_WriteSN:	
   391  0047                     ??_ReadSN:	
   392                           ; 0 bytes @ 0x2
   393                           
   394  0047                     ??_Delay:	
   395                           ; 0 bytes @ 0x2
   396                           
   397  0047                     i2c_SendByte@byte:	
   398                           ; 0 bytes @ 0x2
   399                           
   400  0047                     i2c_ReadAcknowledge@ack:	
   401                           ; 1 bytes @ 0x2
   402                           
   403  0047                     i2c_ReadByte@byte:	
   404                           ; 1 bytes @ 0x2
   405                           
   406  0047                     ReadByte@buf:	
   407                           ; 1 bytes @ 0x2
   408                           
   409  0047                     WriteByte@i:	
   410                           ; 1 bytes @ 0x2
   411                           
   412  0047                     WriteSN@numH:	
   413                           ; 2 bytes @ 0x2
   414                           
   415                           
   416                           ; 2 bytes @ 0x2
   417  0047                     	ds	1
   418  0048                     i2c_SendByte@i:	
   419  0048                     i2c_ReadByte@i:	
   420                           ; 1 bytes @ 0x3
   421                           
   422  0048                     ReadByte@j:	
   423                           ; 1 bytes @ 0x3
   424                           
   425  0048                     ReadSN@data:	
   426                           ; 1 bytes @ 0x3
   427                           
   428                           
   429                           ; 1 bytes @ 0x3
   430  0048                     	ds	1
   431  0049                     ??_i2c_PutByte:	
   432  0049                     ??_i2c_GetByte:	
   433                           ; 0 bytes @ 0x4
   434                           
   435  0049                     ??_DS18B20Initial:	
   436                           ; 0 bytes @ 0x4
   437                           
   438  0049                     ??_DS18B20Convert:	
   439                           ; 0 bytes @ 0x4
   440                           
   441  0049                     ??_DS18B20ReadFlash:	
   442                           ; 0 bytes @ 0x4
   443                           
   444  0049                     i2c_PutByte@data:	
   445                           ; 0 bytes @ 0x4
   446                           
   447  0049                     i2c_GetByte@more:	
   448                           ; 1 bytes @ 0x4
   449                           
   450  0049                     ReadSN@i:	
   451                           ; 1 bytes @ 0x4
   452                           
   453  0049                     DS18B20Convert@i:	
   454                           ; 1 bytes @ 0x4
   455                           
   456  0049                     DS18B20ReadFlash@i:	
   457                           ; 2 bytes @ 0x4
   458                           
   459  0049                     DS18B20Initial@i:	
   460                           ; 2 bytes @ 0x4
   461                           
   462  0049                     WriteSN@numL:	
   463                           ; 2 bytes @ 0x4
   464                           
   465                           
   466                           ; 2 bytes @ 0x4
   467  0049                     	ds	1
   468  004A                     i2c_GetByte@byte:	
   469                           
   470                           ; 2 bytes @ 0x5
   471  004A                     	ds	1
   472  004B                     ??_WriteSN:	
   473  004B                     ??_DataHandle:	
   474                           ; 0 bytes @ 0x6
   475                           
   476                           
   477                           ; 0 bytes @ 0x6
   478  004B                     	ds	1
   479  004C                     ??_I2CReadH:	
   480  004C                     ??_I2CReadL:	
   481                           ; 0 bytes @ 0x7
   482                           
   483                           
   484                           ; 0 bytes @ 0x7
   485  004C                     	ds	1
   486  004D                     DataHandle@snNumH:	
   487                           
   488                           ; 2 bytes @ 0x8
   489  004D                     	ds	2
   490  004F                     DataHandle@snNumL:	
   491                           
   492                           ; 2 bytes @ 0xA
   493  004F                     	ds	2
   494  0051                     ?_main:	
   495  0051                     main@argc:	
   496                           ; 2 bytes @ 0xC
   497                           
   498                           
   499                           ; 2 bytes @ 0xC
   500  0051                     	ds	2
   501  0053                     main@argv:	
   502                           
   503                           ; 2 bytes @ 0xE
   504  0053                     	ds	2
   505  0055                     ??_main:	
   506                           
   507                           	psect	maintext
   508  0473                     __pmaintext:	
   509                           ; 0 bytes @ 0x10
   510 ;;Data sizes: Strings 0, constant 0, data 0, bss 42, persistent 0 stack 0
   511 ;;Auto spaces:   Size  Autos    Used
   512 ;; COMMON          14      6      12
   513 ;; BANK0           80     16      53
   514 ;; BANK1           80      0       0
   515 ;; BANK3           96      0       0
   516 ;; BANK2           96      0       0
   517 ;;
   518 ;; Pointer list with targets:
   519 ;; ReadSN@data	PTR unsigned char  size(1) Largest target is 8
   520 ;;		 -> sndData(BANK0[8]), 
   521 ;;
   522 ;;
   523 ;; Critical Paths under _main in COMMON
   524 ;;
   525 ;;   None.
   526 ;;
   527 ;; Critical Paths under _isr in COMMON
   528 ;;
   529 ;;   None.
   530 ;;
   531 ;; Critical Paths under _main in BANK0
   532 ;;
   533 ;;   _main->_DataHandle
   534 ;;   _I2CReadL->_i2c_GetByte
   535 ;;   _I2CReadH->_i2c_GetByte
   536 ;;   _i2c_GetByte->_i2c_ReadByte
   537 ;;   _i2c_PutByte->_i2c_SendByte
   538 ;;   _i2c_ReadByte->_i2c_WaitForSCL
   539 ;;   _i2c_ReadAcknowledge->_i2c_WaitForSCL
   540 ;;   _i2c_SendByte->_i2c_WaitForSCL
   541 ;;   _DS18B20ReadFlash->_WriteByte
   542 ;;   _DS18B20ReadFlash->_ReadByte
   543 ;;   _DS18B20Convert->_WriteByte
   544 ;;   _DS18B20Initial->_WriteByte
   545 ;;   _DataHandle->_WriteSN
   546 ;;   _SendService->_putch
   547 ;;   _ReadSN->_ReadEE
   548 ;;   _WriteSN->_WriteEE
   549 ;;
   550 ;; Critical Paths under _isr in BANK0
   551 ;;
   552 ;;   None.
   553 ;;
   554 ;; Critical Paths under _main in BANK1
   555 ;;
   556 ;;   None.
   557 ;;
   558 ;; Critical Paths under _isr in BANK1
   559 ;;
   560 ;;   None.
   561 ;;
   562 ;; Critical Paths under _main in BANK3
   563 ;;
   564 ;;   None.
   565 ;;
   566 ;; Critical Paths under _isr in BANK3
   567 ;;
   568 ;;   None.
   569 ;;
   570 ;; Critical Paths under _main in BANK2
   571 ;;
   572 ;;   None.
   573 ;;
   574 ;; Critical Paths under _isr in BANK2
   575 ;;
   576 ;;   None.
   577 ;;
   578 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   579 ;;
   580 ;;
   581 ;;Call Graph Tables:
   582 ;;
   583 ;; ---------------------------------------------------------------------------------
   584 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   585 ;; ---------------------------------------------------------------------------------
   586 ;; (0) _main                                                 4     0      4    2819
   587 ;;                                             12 BANK0      4     0      4
   588 ;;                          _ResetUart
   589 ;;                     _DS18B20Initial
   590 ;;                         _DataHandle
   591 ;;                        _SendService
   592 ;;                           _I2CReadH
   593 ;;                              _Delay
   594 ;;                           _I2CReadL
   595 ;;                     _AutoAdjustGain
   596 ;;                     _DS18B20Convert
   597 ;;                   _DS18B20ReadFlash
   598 ;; ---------------------------------------------------------------------------------
   599 ;; (1) _I2CReadL                                             0     0      0     461
   600 ;;                        _i2c_Restart
   601 ;;                        _i2c_PutByte
   602 ;;                           _i2c_Stop
   603 ;;                        _i2c_GetByte
   604 ;; ---------------------------------------------------------------------------------
   605 ;; (1) _I2CReadH                                             0     0      0     461
   606 ;;                        _i2c_Restart
   607 ;;                        _i2c_PutByte
   608 ;;                           _i2c_Stop
   609 ;;                        _i2c_GetByte
   610 ;; ---------------------------------------------------------------------------------
   611 ;; (2) _i2c_GetByte                                          3     3      0     204
   612 ;;                                              4 BANK0      3     3      0
   613 ;;                       _i2c_ReadByte
   614 ;;                _i2c_SendAcknowledge
   615 ;; ---------------------------------------------------------------------------------
   616 ;; (2) _i2c_PutByte                                          1     1      0     257
   617 ;;                                              4 BANK0      1     1      0
   618 ;;                       _i2c_SendByte
   619 ;;                _i2c_ReadAcknowledge
   620 ;; ---------------------------------------------------------------------------------
   621 ;; (3) _i2c_ReadByte                                         3     3      0     108
   622 ;;                                              1 BANK0      3     3      0
   623 ;;                     _i2c_WaitForSCL
   624 ;; ---------------------------------------------------------------------------------
   625 ;; (3) _i2c_ReadAcknowledge                                  2     2      0      34
   626 ;;                                              1 BANK0      2     2      0
   627 ;;                     _i2c_WaitForSCL
   628 ;; ---------------------------------------------------------------------------------
   629 ;; (3) _i2c_SendByte                                         3     3      0     192
   630 ;;                                              1 BANK0      3     3      0
   631 ;;                     _i2c_WaitForSCL
   632 ;; ---------------------------------------------------------------------------------
   633 ;; (1) _DS18B20ReadFlash                                     2     2      0     506
   634 ;;                                              4 BANK0      2     2      0
   635 ;;                              _Reset
   636 ;;                          _WriteByte
   637 ;;                           _ReadByte
   638 ;; ---------------------------------------------------------------------------------
   639 ;; (1) _DS18B20Convert                                       2     2      0     361
   640 ;;                                              4 BANK0      2     2      0
   641 ;;                              _Reset
   642 ;;                          _WriteByte
   643 ;; ---------------------------------------------------------------------------------
   644 ;; (1) _DS18B20Initial                                       2     2      0     361
   645 ;;                                              4 BANK0      2     2      0
   646 ;;                              _Reset
   647 ;;                          _WriteByte
   648 ;; ---------------------------------------------------------------------------------
   649 ;; (1) _DataHandle                                           6     6      0     607
   650 ;;                                              6 BANK0      6     6      0
   651 ;;                            _RelayOn
   652 ;;                           _RelayOff
   653 ;;                            _WriteEE
   654 ;;                             _ReadEE
   655 ;;                            _WriteSN
   656 ;;                             _ReadSN
   657 ;; ---------------------------------------------------------------------------------
   658 ;; (2) _ReadByte                                             4     4      0     145
   659 ;;                                              0 BANK0      4     4      0
   660 ;; ---------------------------------------------------------------------------------
   661 ;; (2) _WriteByte                                            4     4      0     176
   662 ;;                                              0 BANK0      4     4      0
   663 ;; ---------------------------------------------------------------------------------
   664 ;; (3) _i2c_SendAcknowledge                                  2     2      0      31
   665 ;;                                              0 BANK0      2     2      0
   666 ;; ---------------------------------------------------------------------------------
   667 ;; (4) _i2c_WaitForSCL                                       1     1      0       0
   668 ;;                                              0 BANK0      1     1      0
   669 ;; ---------------------------------------------------------------------------------
   670 ;; (1) _SendService                                          0     0      0      31
   671 ;;                              _putch
   672 ;; ---------------------------------------------------------------------------------
   673 ;; (2) _ReadSN                                               3     3      0     226
   674 ;;                                              2 BANK0      3     3      0
   675 ;;                             _ReadEE
   676 ;; ---------------------------------------------------------------------------------
   677 ;; (2) _WriteSN                                              4     0      4     186
   678 ;;                                              2 BANK0      4     0      4
   679 ;;                            _WriteEE
   680 ;; ---------------------------------------------------------------------------------
   681 ;; (2) _i2c_Stop                                             1     1      0       0
   682 ;;                                              0 BANK0      1     1      0
   683 ;; ---------------------------------------------------------------------------------
   684 ;; (2) _i2c_Restart                                          1     1      0       0
   685 ;;                                              0 BANK0      1     1      0
   686 ;; ---------------------------------------------------------------------------------
   687 ;; (2) _Reset                                                3     3      0     148
   688 ;;                                              0 BANK0      3     3      0
   689 ;; ---------------------------------------------------------------------------------
   690 ;; (2) _putch                                                1     1      0      31
   691 ;;                                              0 BANK0      1     1      0
   692 ;; ---------------------------------------------------------------------------------
   693 ;; (3) _ReadEE                                               2     2      0      65
   694 ;;                                              0 BANK0      2     2      0
   695 ;; ---------------------------------------------------------------------------------
   696 ;; (3) _WriteEE                                              2     1      1      62
   697 ;;                                              0 BANK0      2     1      1
   698 ;; ---------------------------------------------------------------------------------
   699 ;; (1) _AutoAdjustGain                                       0     0      0       0
   700 ;; ---------------------------------------------------------------------------------
   701 ;; (1) _ResetUart                                            0     0      0       0
   702 ;; ---------------------------------------------------------------------------------
   703 ;; (1) _Delay                                                2     0      2      31
   704 ;;                                              0 BANK0      2     0      2
   705 ;; ---------------------------------------------------------------------------------
   706 ;; (2) _RelayOff                                             0     0      0       0
   707 ;; ---------------------------------------------------------------------------------
   708 ;; (2) _RelayOn                                              0     0      0       0
   709 ;; ---------------------------------------------------------------------------------
   710 ;; Estimated maximum stack depth 4
   711 ;; ---------------------------------------------------------------------------------
   712 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   713 ;; ---------------------------------------------------------------------------------
   714 ;; (5) _isr                                                  6     6      0       0
   715 ;;                                              0 COMMON     6     6      0
   716 ;;                        i1_ResetUart
   717 ;; ---------------------------------------------------------------------------------
   718 ;; (6) i1_ResetUart                                          0     0      0       0
   719 ;; ---------------------------------------------------------------------------------
   720 ;; Estimated maximum stack depth 6
   721 ;; ---------------------------------------------------------------------------------
   722 ;; Call Graph Graphs:
   723 ;; _main (ROOT)
   724 ;;   _ResetUart
   725 ;;   _DS18B20Initial
   726 ;;     _Reset
   727 ;;     _WriteByte
   728 ;;   _DataHandle
   729 ;;     _RelayOn
   730 ;;     _RelayOff
   731 ;;     _WriteEE
   732 ;;     _ReadEE
   733 ;;     _WriteSN
   734 ;;       _WriteEE
   735 ;;     _ReadSN
   736 ;;       _ReadEE
   737 ;;   _SendService
   738 ;;     _putch
   739 ;;   _I2CReadH
   740 ;;     _i2c_Restart
   741 ;;     _i2c_PutByte
   742 ;;       _i2c_SendByte
   743 ;;         _i2c_WaitForSCL
   744 ;;       _i2c_ReadAcknowledge
   745 ;;         _i2c_WaitForSCL
   746 ;;     _i2c_Stop
   747 ;;     _i2c_GetByte
   748 ;;       _i2c_ReadByte
   749 ;;         _i2c_WaitForSCL
   750 ;;       _i2c_SendAcknowledge
   751 ;;   _Delay
   752 ;;   _I2CReadL
   753 ;;     _i2c_Restart
   754 ;;     _i2c_PutByte
   755 ;;       _i2c_SendByte
   756 ;;         _i2c_WaitForSCL
   757 ;;       _i2c_ReadAcknowledge
   758 ;;         _i2c_WaitForSCL
   759 ;;     _i2c_Stop
   760 ;;     _i2c_GetByte
   761 ;;       _i2c_ReadByte
   762 ;;         _i2c_WaitForSCL
   763 ;;       _i2c_SendAcknowledge
   764 ;;   _AutoAdjustGain
   765 ;;   _DS18B20Convert
   766 ;;     _Reset
   767 ;;     _WriteByte
   768 ;;   _DS18B20ReadFlash
   769 ;;     _Reset
   770 ;;     _WriteByte
   771 ;;     _ReadByte
   772 ;;
   773 ;; _isr (ROOT)
   774 ;;   i1_ResetUart
   775 ;;
   776 ;; Address spaces:
   777 ;;Name               Size   Autos  Total    Cost      Usage
   778 ;;BITCOMMON            E      0       1       0        7.1%
   779 ;;EEDATA             100      0       0       0        0.0%
   780 ;;NULL                 0      0       0       0        0.0%
   781 ;;CODE                 0      0       0       0        0.0%
   782 ;;COMMON               E      6       C       1       85.7%
   783 ;;BITSFR0              0      0       0       1        0.0%
   784 ;;SFR0                 0      0       0       1        0.0%
   785 ;;BITSFR1              0      0       0       2        0.0%
   786 ;;SFR1                 0      0       0       2        0.0%
   787 ;;STACK                0      0       8       2        0.0%
   788 ;;ABS                  0      0      41       3        0.0%
   789 ;;BITBANK0            50      0       0       4        0.0%
   790 ;;BITSFR3              0      0       0       4        0.0%
   791 ;;SFR3                 0      0       0       4        0.0%
   792 ;;BANK0               50     10      35       5       66.3%
   793 ;;BITSFR2              0      0       0       5        0.0%
   794 ;;SFR2                 0      0       0       5        0.0%
   795 ;;BITBANK1            50      0       0       6        0.0%
   796 ;;BANK1               50      0       0       7        0.0%
   797 ;;BITBANK3            60      0       0       8        0.0%
   798 ;;BANK3               60      0       0       9        0.0%
   799 ;;BITBANK2            60      0       0      10        0.0%
   800 ;;BANK2               60      0       0      11        0.0%
   801 ;;DATA                 0      0      49      12        0.0%
   802                           
   803                           
   804 ;; *************** function _main *****************
   805 ;; Defined at:
   806 ;;		line 288 in file "../Main.c"
   807 ;; Parameters:    Size  Location     Type
   808 ;;  argc            2   12[BANK0 ] int 
   809 ;;  argv            2   14[BANK0 ] PTR PTR unsigned char 
   810 ;; Auto vars:     Size  Location     Type
   811 ;;		None
   812 ;; Return value:  Size  Location     Type
   813 ;;                  2   12[BANK0 ] int 
   814 ;; Registers used:
   815 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   816 ;; Tracked objects:
   817 ;;		On entry : 17F/0
   818 ;;		On exit  : 60/0
   819 ;;		Unchanged: 0/0
   820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   821 ;;      Params:         0       4       0       0       0
   822 ;;      Locals:         0       0       0       0       0
   823 ;;      Temps:          0       0       0       0       0
   824 ;;      Totals:         0       4       0       0       0
   825 ;;Total ram usage:        4 bytes
   826 ;; Hardware stack levels required when called:    6
   827 ;; This function calls:
   828 ;;		_ResetUart
   829 ;;		_DS18B20Initial
   830 ;;		_DataHandle
   831 ;;		_SendService
   832 ;;		_I2CReadH
   833 ;;		_Delay
   834 ;;		_I2CReadL
   835 ;;		_AutoAdjustGain
   836 ;;		_DS18B20Convert
   837 ;;		_DS18B20ReadFlash
   838 ;; This function is called by:
   839 ;;		Startup code after reset
   840 ;; This function uses a non-reentrant model
   841 ;;
   842  0473                     _main:	
   843                           
   844                           ;Main.c: 289: TRISA = 0B11111111;
   845                           
   846                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   847  0473  30FF               	movlw	255
   848  0474  1683               	bsf	3,5	;RP0=1, select bank1
   849  0475  0085               	movwf	5	;volatile
   850                           
   851                           ;Main.c: 290: TRISB = 0B11110110;
   852  0476  30F6               	movlw	246
   853  0477  0086               	movwf	6	;volatile
   854                           
   855                           ;Main.c: 291: PORTA = 0x00;
   856  0478  1283               	bcf	3,5	;RP0=0, select bank0
   857  0479  0185               	clrf	5	;volatile
   858                           
   859                           ;Main.c: 292: PORTB = 0x00;
   860  047A  0186               	clrf	6	;volatile
   861                           
   862                           ;Main.c: 294: ANSEL = 0x00;
   863  047B  1683               	bsf	3,5	;RP0=1, select bank1
   864  047C  019B               	clrf	27	;volatile
   865                           
   866                           ;Main.c: 295: ADCON0 = 0x00;
   867  047D  1283               	bcf	3,5	;RP0=0, select bank0
   868  047E  019F               	clrf	31	;volatile
   869                           
   870                           ;Main.c: 296: ADCON1 = 0x00;
   871  047F  1683               	bsf	3,5	;RP0=1, select bank1
   872  0480  019F               	clrf	31	;volatile
   873                           
   874                           ;Main.c: 298: CCP1CON = 0x00;
   875  0481  1283               	bcf	3,5	;RP0=0, select bank0
   876  0482  0197               	clrf	23	;volatile
   877                           
   878                           ;Main.c: 299: CCPR1L = 0x7F;
   879  0483  307F               	movlw	127
   880  0484  0095               	movwf	21	;volatile
   881                           
   882                           ;Main.c: 300: CCPR1H = 0x7F;
   883  0485  0096               	movwf	22	;volatile
   884                           
   885                           ;Main.c: 301: T1CON = 0B00110001;
   886  0486  3031               	movlw	49
   887  0487  0090               	movwf	16	;volatile
   888                           
   889                           ;Main.c: 302: T2CON = 0B01111111;
   890  0488  307F               	movlw	127
   891  0489  0092               	movwf	18	;volatile
   892                           
   893                           ;Main.c: 303: PR2 = 0xD7;
   894  048A  30D7               	movlw	215
   895  048B  1683               	bsf	3,5	;RP0=1, select bank1
   896  048C  0092               	movwf	18	;volatile
   897  048D  3019               	movlw	25
   898                           
   899                           ;Main.c: 305: TRISB2 = 1; TRISB5 = 1; SPBRG = ((int)(4000000L/(16UL * 9600) -1)); RCSTA 
      +                          = (0|0x90); TXSTA = (0x4|0|0x20);
   900  048E  1506               	bsf	6,2
   901  048F  1686               	bsf	6,5
   902  0490  0099               	movwf	25	;volatile
   903  0491  3090               	movlw	144
   904  0492  1283               	bcf	3,5	;RP0=0, select bank0
   905  0493  0098               	movwf	24	;volatile
   906  0494  3024               	movlw	36
   907  0495  1683               	bsf	3,5	;RP0=1, select bank1
   908  0496  0098               	movwf	24	;volatile
   909                           
   910                           ;Main.c: 306: SSPCON &=0xF0; SSPCON|=(0B1011 & 0xf);
   911  0497  30F0               	movlw	240
   912  0498  1283               	bcf	3,5	;RP0=0, select bank0
   913  0499  0594               	andwf	20,f	;volatile
   914  049A  300B               	movlw	11
   915  049B  0494               	iorwf	20,f	;volatile
   916  049C  3020               	movlw	32
   917                           
   918                           ;Main.c: 307: SSPEN = 1;
   919  049D  1694               	bsf	20,5
   920  049E  1614               	bsf	20,4
   921                           
   922                           ;Main.c: 310: PIE1 = 0B00100000;
   923  049F  1683               	bsf	3,5	;RP0=1, select bank1
   924  04A0  008C               	movwf	12	;volatile
   925                           
   926                           ;Main.c: 311: PIR1 = 0B00000000;
   927  04A1  1283               	bcf	3,5	;RP0=0, select bank0
   928  04A2  018C               	clrf	12	;volatile
   929                           
   930                           ;Main.c: 312: PIR2 = 0B00000000;
   931  04A3  018D               	clrf	13	;volatile
   932                           
   933                           ;Main.c: 314: INTCON = 0B11000000;
   934  04A4  30C0               	movlw	192
   935  04A5  008B               	movwf	11	;volatile
   936                           
   937                           ;Main.c: 316: ResetUart();
   938  04A6  118A  2515  118A   	fcall	_ResetUart
   939  04A9  300C               	movlw	12
   940                           
   941                           ;Main.c: 317: unitAddr = 0x00;
   942  04AA  01C4               	clrf	_unitAddr
   943                           
   944                           ;Main.c: 318: CFG_H = 0x0C;
   945  04AB  00AC               	movwf	_CFG_H
   946                           
   947                           ;Main.c: 319: CFG_L = 0x0C;
   948  04AC  00AD               	movwf	_CFG_L
   949                           
   950                           ;Main.c: 320: DS18B20Initial();
   951  04AD  118A  2324  118A   	fcall	_DS18B20Initial
   952  04B0                     l6315:	
   953                           
   954                           ;Main.c: 322: if(OERR){ CREN = 0; CREN = 1; }
   955  04B0  1C98               	btfss	24,1
   956  04B1  2CB4               	goto	l762
   957  04B2  1218               	bcf	24,4
   958  04B3  1618               	bsf	24,4
   959  04B4                     l762:	
   960                           
   961                           ;Main.c: 323: if(rcvTerminalOk == 1){
   962  04B4  1F70               	btfss	_rcvTerminalOk/(0+8),_rcvTerminalOk& (0+7)
   963  04B5  2CBF               	goto	l6321
   964                           
   965                           ;Main.c: 324: DataHandle();
   966  04B6  118A  200F  118A   	fcall	_DataHandle
   967                           
   968                           ;Main.c: 325: SendService();
   969  04B9  118A  24E6  118A   	fcall	_SendService
   970                           
   971                           ;Main.c: 326: ResetUart();
   972  04BC  118A  2515  118A   	fcall	_ResetUart
   973  04BF                     l6321:	
   974                           
   975                           ;Main.c: 327: }
   976                           ;Main.c: 328: idleCnt++;
   977  04BF  0AAA               	incf	_idleCnt,f
   978  04C0  1903               	skipnz
   979  04C1  0AAB               	incf	_idleCnt+1,f
   980                           
   981                           ;Main.c: 329: if(idleCnt >= 50000){
   982  04C2  30C3               	movlw	195
   983  04C3  022B               	subwf	_idleCnt+1,w
   984  04C4  3050               	movlw	80
   985  04C5  1903               	skipnz
   986  04C6  022A               	subwf	_idleCnt,w
   987  04C7  1C03               	skipc
   988  04C8  2CB0               	goto	l6315
   989                           
   990                           ;Main.c: 330: idleCnt = 0;
   991  04C9  01AA               	clrf	_idleCnt
   992  04CA  01AB               	clrf	_idleCnt+1
   993                           
   994                           ;Main.c: 331: I2CReadH();
   995  04CB  118A  21DD  118A   	fcall	_I2CReadH
   996                           
   997                           ;Main.c: 332: Delay(100);
   998  04CE  3064               	movlw	100
   999  04CF  1283               	bcf	3,5	;RP0=0, select bank0
  1000  04D0  00C5               	movwf	?_Delay
  1001  04D1  01C6               	clrf	?_Delay+1
  1002  04D2  118A  253C  118A   	fcall	_Delay
  1003                           
  1004                           ;Main.c: 333: I2CReadL();
  1005  04D5  118A  21C1  118A   	fcall	_I2CReadL
  1006                           
  1007                           ;Main.c: 335: if(DS18B20Convert() == 1){
  1008                           
  1009                           ;Main.c: 334: AutoAdjustGain();
  1010  04D8  118A  22E9  118A   	fcall	_DS18B20Convert
  1011  04DB  3A01               	xorlw	1
  1012  04DC  1D03               	skipz
  1013  04DD  2CB0               	goto	l6315
  1014                           
  1015                           ;Main.c: 336: DS18B20ReadFlash();
  1016  04DE  118A  2302  118A   	fcall	_DS18B20ReadFlash
  1017                           
  1018                           ;Main.c: 337: T_M = T_Msb;
  1019  04E1  0837               	movf	_T_Msb,w
  1020  04E2  00B6               	movwf	_T_M
  1021                           
  1022                           ;Main.c: 338: T_L = T_Lsb;
  1023  04E3  0835               	movf	_T_Lsb,w
  1024  04E4  00B4               	movwf	_T_L
  1025  04E5  2CB0               	goto	l6315
  1026  04E6                     __end_of_main:	
  1027                           
  1028                           	psect	text1058
  1029  01A2                     __ptext1058:	
  1030 ;; =============== function _i2c_ReadByte ends ============
  1031                           
  1032                           
  1033 ;; *************** function _i2c_ReadAcknowledge *****************
  1034 ;; Defined at:
  1035 ;;		line 93 in file "../i2c.c"
  1036 ;; Parameters:    Size  Location     Type
  1037 ;;		None
  1038 ;; Auto vars:     Size  Location     Type
  1039 ;;  ack             1    2[BANK0 ] unsigned char 
  1040 ;; Return value:  Size  Location     Type
  1041 ;;                  1    wreg      char 
  1042 ;; Registers used:
  1043 ;;		wreg, pclath, cstack
  1044 ;; Tracked objects:
  1045 ;;		On entry : 60/0
  1046 ;;		On exit  : 60/0
  1047 ;;		Unchanged: 0/0
  1048 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1049 ;;      Params:         0       0       0       0       0
  1050 ;;      Locals:         0       1       0       0       0
  1051 ;;      Temps:          0       1       0       0       0
  1052 ;;      Totals:         0       2       0       0       0
  1053 ;;Total ram usage:        2 bytes
  1054 ;; Hardware stack levels used:    1
  1055 ;; Hardware stack levels required when called:    3
  1056 ;; This function calls:
  1057 ;;		_i2c_WaitForSCL
  1058 ;; This function is called by:
  1059 ;;		_i2c_PutByte
  1060 ;; This function uses a non-reentrant model
  1061 ;;
  1062  01A2                     _i2c_ReadAcknowledge:	
  1063  01A2                     l6199:	
  1064                           ; Regs used in _i2c_ReadAcknowledge: [wreg+pclath+cstack]
  1065                           
  1066                           
  1067                           ;i2c.c: 94: unsigned char ack;
  1068                           ;i2c.c: 96: TRISB4 = 0;
  1069  01A2  1683               	bsf	3,5	;RP0=1, select bank1
  1070  01A3  300D               	movlw	13
  1071  01A4  1206               	bcf	6,4
  1072                           
  1073                           ;i2c.c: 97: TRISB1 = 1;
  1074  01A5  1486               	bsf	6,1
  1075                           
  1076                           ;i2c.c: 98: _delay((unsigned long)((40)*(4000000/4000000.0)));
  1077  01A6  1283               	bcf	3,5	;RP0=0, select bank0
  1078  01A7  00C6               	movwf	??_i2c_ReadAcknowledge
  1079  01A8                     u2287:	
  1080  01A8  0BC6               	decfsz	??_i2c_ReadAcknowledge,f
  1081  01A9  29A8               	goto	u2287
  1082                           
  1083                           ;i2c.c: 99: TRISB4 = 1;
  1084  01AA  1683               	bsf	3,5	;RP0=1, select bank1
  1085  01AB  3003               	movlw	3
  1086  01AC  1303               	bcf	3,6	;RP1=0, select bank1
  1087  01AD  1606               	bsf	6,4
  1088                           
  1089                           ;i2c.c: 100: _delay((unsigned long)((10)*(4000000/4000000.0)));
  1090  01AE  1283               	bcf	3,5	;RP0=0, select bank0
  1091  01AF  00C6               	movwf	??_i2c_ReadAcknowledge
  1092  01B0                     u2297:	
  1093  01B0  0BC6               	decfsz	??_i2c_ReadAcknowledge,f
  1094  01B1  29B0               	goto	u2297
  1095                           
  1096                           ;i2c.c: 101: ack = RB1;
  1097  01B2  3000               	movlw	0
  1098  01B3  1283               	bcf	3,5	;RP0=0, select bank0
  1099  01B4  1303               	bcf	3,6	;RP1=0, select bank0
  1100  01B5  1886               	btfsc	6,1
  1101  01B6  3001               	movlw	1
  1102  01B7  00C7               	movwf	i2c_ReadAcknowledge@ack
  1103                           
  1104                           ;i2c.c: 102: TRISB4 = 0;
  1105  01B8  1683               	bsf	3,5	;RP0=1, select bank1
  1106  01B9  1206               	bcf	6,4
  1107                           
  1108                           ;i2c.c: 105: if(i2c_WaitForSCL())
  1109  01BA  229A  118A         	fcall	_i2c_WaitForSCL
  1110  01BC  3A00               	xorlw	0
  1111  01BD  1D03               	btfss	3,2
  1112                           
  1113                           ;i2c.c: 106: return (-1);
  1114  01BE  34FF               	retlw	-1
  1115                           
  1116                           ;i2c.c: 107: return ack;
  1117  01BF  0847               	movf	i2c_ReadAcknowledge@ack,w
  1118  01C0  0008               	return
  1119  01C1                     __end_of_i2c_ReadAcknowledge:	
  1120  01C1                     __ptext1053:	
  1121 ;; =============== function _main ends ============
  1122                           
  1123                           
  1124 ;; *************** function _I2CReadL *****************
  1125 ;; Defined at:
  1126 ;;		line 133 in file "../Main.c"
  1127 ;; Parameters:    Size  Location     Type
  1128 ;;		None
  1129 ;; Auto vars:     Size  Location     Type
  1130 ;;		None
  1131 ;; Return value:  Size  Location     Type
  1132 ;;		None               void
  1133 ;; Registers used:
  1134 ;;		wreg, status,2, status,0, pclath, cstack
  1135 ;; Tracked objects:
  1136 ;;		On entry : 60/0
  1137 ;;		On exit  : 60/20
  1138 ;;		Unchanged: 0/0
  1139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1140 ;;      Params:         0       0       0       0       0
  1141 ;;      Locals:         0       0       0       0       0
  1142 ;;      Temps:          0       0       0       0       0
  1143 ;;      Totals:         0       0       0       0       0
  1144 ;;Total ram usage:        0 bytes
  1145 ;; Hardware stack levels used:    1
  1146 ;; Hardware stack levels required when called:    5
  1147 ;; This function calls:
  1148 ;;		_i2c_Restart
  1149 ;;		_i2c_PutByte
  1150 ;;		_i2c_Stop
  1151 ;;		_i2c_GetByte
  1152 ;; This function is called by:
  1153 ;;		_main
  1154 ;; This function uses a non-reentrant model
  1155 ;;
  1156  01C1                     _I2CReadL:	
  1157                           
  1158                           ;Main.c: 134: i2c_Restart();
  1159                           
  1160                           ; Regs used in _I2CReadL: [wreg+status,2+status,0+pclath+cstack]
  1161  01C1  2211  118A         	fcall	_i2c_Restart
  1162                           
  1163                           ;Main.c: 135: i2c_PutByte(0x92 | 0x00);
  1164  01C3  3092               	movlw	146
  1165  01C4  21F9  118A         	fcall	_i2c_PutByte
  1166                           
  1167                           ;Main.c: 136: i2c_PutByte(CFG_L);
  1168  01C6  082D               	movf	_CFG_L,w
  1169  01C7  21F9  118A         	fcall	_i2c_PutByte
  1170                           
  1171                           ;Main.c: 137: i2c_Stop();
  1172  01C9  222C  118A         	fcall	_i2c_Stop
  1173                           
  1174                           ;Main.c: 138: i2c_Restart();
  1175  01CB  2211  118A         	fcall	_i2c_Restart
  1176                           
  1177                           ;Main.c: 139: i2c_PutByte(0x92 | 0x01);
  1178  01CD  3093               	movlw	147
  1179  01CE  21F9  118A         	fcall	_i2c_PutByte
  1180                           
  1181                           ;Main.c: 140: L_M = i2c_GetByte(!0);
  1182  01D0  3001               	movlw	1
  1183  01D1  2201  118A         	fcall	_i2c_GetByte
  1184  01D3  00B2               	movwf	_L_M
  1185                           
  1186                           ;Main.c: 141: L_L = i2c_GetByte(!0);
  1187  01D4  3001               	movlw	1
  1188  01D5  2201  118A         	fcall	_i2c_GetByte
  1189  01D7  00B1               	movwf	_L_L
  1190                           
  1191                           ;Main.c: 142: L_S = i2c_GetByte(0);
  1192  01D8  3000               	movlw	0
  1193  01D9  2201  118A         	fcall	_i2c_GetByte
  1194  01DB  00B3               	movwf	_L_S
  1195                           
  1196                           ;Main.c: 143: i2c_Stop();
  1197  01DC  2A2C               	ljmp	l5851
  1198  01DD                     __end_of_I2CReadL:	
  1199  01DD                     __ptext1054:	
  1200 ;; =============== function _I2CReadL ends ============
  1201                           
  1202                           
  1203 ;; *************** function _I2CReadH *****************
  1204 ;; Defined at:
  1205 ;;		line 120 in file "../Main.c"
  1206 ;; Parameters:    Size  Location     Type
  1207 ;;		None
  1208 ;; Auto vars:     Size  Location     Type
  1209 ;;		None
  1210 ;; Return value:  Size  Location     Type
  1211 ;;		None               void
  1212 ;; Registers used:
  1213 ;;		wreg, status,2, status,0, pclath, cstack
  1214 ;; Tracked objects:
  1215 ;;		On entry : 60/0
  1216 ;;		On exit  : 60/20
  1217 ;;		Unchanged: 0/0
  1218 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1219 ;;      Params:         0       0       0       0       0
  1220 ;;      Locals:         0       0       0       0       0
  1221 ;;      Temps:          0       0       0       0       0
  1222 ;;      Totals:         0       0       0       0       0
  1223 ;;Total ram usage:        0 bytes
  1224 ;; Hardware stack levels used:    1
  1225 ;; Hardware stack levels required when called:    5
  1226 ;; This function calls:
  1227 ;;		_i2c_Restart
  1228 ;;		_i2c_PutByte
  1229 ;;		_i2c_Stop
  1230 ;;		_i2c_GetByte
  1231 ;; This function is called by:
  1232 ;;		_main
  1233 ;; This function uses a non-reentrant model
  1234 ;;
  1235  01DD                     _I2CReadH:	
  1236                           
  1237                           ;Main.c: 121: i2c_Restart();
  1238                           
  1239                           ; Regs used in _I2CReadH: [wreg+status,2+status,0+pclath+cstack]
  1240  01DD  2211  118A         	fcall	_i2c_Restart
  1241                           
  1242                           ;Main.c: 122: i2c_PutByte(0x90 | 0x00);
  1243  01DF  3090               	movlw	144
  1244  01E0  21F9  118A         	fcall	_i2c_PutByte
  1245                           
  1246                           ;Main.c: 123: i2c_PutByte(CFG_H);
  1247  01E2  082C               	movf	_CFG_H,w
  1248  01E3  21F9  118A         	fcall	_i2c_PutByte
  1249                           
  1250                           ;Main.c: 124: i2c_Stop();
  1251  01E5  222C  118A         	fcall	_i2c_Stop
  1252                           
  1253                           ;Main.c: 125: i2c_Restart();
  1254  01E7  2211  118A         	fcall	_i2c_Restart
  1255                           
  1256                           ;Main.c: 126: i2c_PutByte(0x90 | 0x01);
  1257  01E9  3091               	movlw	145
  1258  01EA  21F9  118A         	fcall	_i2c_PutByte
  1259                           
  1260                           ;Main.c: 127: H_M = i2c_GetByte(!0);
  1261  01EC  3001               	movlw	1
  1262  01ED  2201  118A         	fcall	_i2c_GetByte
  1263  01EF  00AF               	movwf	_H_M
  1264                           
  1265                           ;Main.c: 128: H_L = i2c_GetByte(!0);
  1266  01F0  3001               	movlw	1
  1267  01F1  2201  118A         	fcall	_i2c_GetByte
  1268  01F3  00AE               	movwf	_H_L
  1269                           
  1270                           ;Main.c: 129: H_S = i2c_GetByte(0);
  1271  01F4  3000               	movlw	0
  1272  01F5  2201  118A         	fcall	_i2c_GetByte
  1273  01F7  00B0               	movwf	_H_S
  1274                           
  1275                           ;Main.c: 130: i2c_Stop();
  1276  01F8  2A2C               	ljmp	l5851
  1277  01F9                     __end_of_I2CReadH:	
  1278  01F9                     __ptext1056:	
  1279 ;; =============== function _i2c_GetByte ends ============
  1280                           
  1281                           
  1282 ;; *************** function _i2c_PutByte *****************
  1283 ;; Defined at:
  1284 ;;		line 168 in file "../i2c.c"
  1285 ;; Parameters:    Size  Location     Type
  1286 ;;  data            1    wreg     unsigned char 
  1287 ;; Auto vars:     Size  Location     Type
  1288 ;;  data            1    4[BANK0 ] unsigned char 
  1289 ;; Return value:  Size  Location     Type
  1290 ;;                  1    wreg      char 
  1291 ;; Registers used:
  1292 ;;		wreg, status,2, status,0, pclath, cstack
  1293 ;; Tracked objects:
  1294 ;;		On entry : 40/20
  1295 ;;		On exit  : 60/0
  1296 ;;		Unchanged: 0/0
  1297 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1298 ;;      Params:         0       0       0       0       0
  1299 ;;      Locals:         0       1       0       0       0
  1300 ;;      Temps:          0       0       0       0       0
  1301 ;;      Totals:         0       1       0       0       0
  1302 ;;Total ram usage:        1 bytes
  1303 ;; Hardware stack levels used:    1
  1304 ;; Hardware stack levels required when called:    4
  1305 ;; This function calls:
  1306 ;;		_i2c_SendByte
  1307 ;;		_i2c_ReadAcknowledge
  1308 ;; This function is called by:
  1309 ;;		_I2CReadH
  1310 ;;		_I2CReadL
  1311 ;; This function uses a non-reentrant model
  1312 ;;
  1313  01F9                     _i2c_PutByte:	
  1314                           
  1315                           ; Regs used in _i2c_PutByte: [wreg+status,2+status,0+pclath+cstack]
  1316                           ;i2c_PutByte@data stored from wreg
  1317  01F9  1283               	bcf	3,5	;RP0=0, select bank0
  1318  01FA  00C9               	movwf	i2c_PutByte@data
  1319                           
  1320                           ;i2c.c: 169: if(i2c_SendByte(data))
  1321  01FB  2258  118A         	fcall	_i2c_SendByte
  1322  01FD  3A00               	xorlw	0
  1323  01FE  1D03               	btfss	3,2
  1324                           
  1325                           ;i2c.c: 170: return (-1);
  1326  01FF  34FF               	retlw	-1
  1327                           
  1328                           ;i2c.c: 171: return i2c_ReadAcknowledge();
  1329  0200  29A2               	ljmp	l6199
  1330  0201                     __end_of_i2c_PutByte:	
  1331  0201                     __ptext1055:	
  1332 ;; =============== function _I2CReadH ends ============
  1333                           
  1334                           
  1335 ;; *************** function _i2c_GetByte *****************
  1336 ;; Defined at:
  1337 ;;		line 179 in file "../i2c.c"
  1338 ;; Parameters:    Size  Location     Type
  1339 ;;  more            1    wreg     unsigned char 
  1340 ;; Auto vars:     Size  Location     Type
  1341 ;;  more            1    4[BANK0 ] unsigned char 
  1342 ;;  byte            2    5[BANK0 ] int 
  1343 ;; Return value:  Size  Location     Type
  1344 ;;                  1    wreg      unsigned char 
  1345 ;; Registers used:
  1346 ;;		wreg, status,2, status,0, pclath, cstack
  1347 ;; Tracked objects:
  1348 ;;		On entry : 60/0
  1349 ;;		On exit  : 60/0
  1350 ;;		Unchanged: 0/0
  1351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1352 ;;      Params:         0       0       0       0       0
  1353 ;;      Locals:         0       3       0       0       0
  1354 ;;      Temps:          0       0       0       0       0
  1355 ;;      Totals:         0       3       0       0       0
  1356 ;;Total ram usage:        3 bytes
  1357 ;; Hardware stack levels used:    1
  1358 ;; Hardware stack levels required when called:    4
  1359 ;; This function calls:
  1360 ;;		_i2c_ReadByte
  1361 ;;		_i2c_SendAcknowledge
  1362 ;; This function is called by:
  1363 ;;		_I2CReadH
  1364 ;;		_I2CReadL
  1365 ;; This function uses a non-reentrant model
  1366 ;;
  1367  0201                     _i2c_GetByte:	
  1368                           
  1369                           ; Regs used in _i2c_GetByte: [wreg+status,2+status,0+pclath+cstack]
  1370                           ;i2c_GetByte@more stored from wreg
  1371  0201  00C9               	movwf	i2c_GetByte@more
  1372                           
  1373                           ;i2c.c: 180: int byte;
  1374                           ;i2c.c: 182: if((byte = i2c_ReadByte()) == (-1))
  1375  0202  22A6  118A         	fcall	_i2c_ReadByte
  1376  0204  00CA               	movwf	i2c_GetByte@byte
  1377  0205  01CB               	clrf	i2c_GetByte@byte+1
  1378  0206  0A4A               	incf	i2c_GetByte@byte,w
  1379  0207  1903               	skipnz
  1380  0208  0A4B               	incf	i2c_GetByte@byte+1,w
  1381  0209  1903               	btfsc	3,2
  1382                           
  1383                           ;i2c.c: 183: return (-1);
  1384  020A  34FF               	retlw	255
  1385                           
  1386                           ;i2c.c: 185: i2c_SendAcknowledge(more);
  1387  020B  0849               	movf	i2c_GetByte@more,w
  1388  020C  22CF               	fcall	_i2c_SendAcknowledge
  1389                           
  1390                           ;i2c.c: 187: return byte;
  1391  020D  1283               	bcf	3,5	;RP0=0, select bank0
  1392  020E  1303               	bcf	3,6	;RP1=0, select bank0
  1393  020F  084A               	movf	i2c_GetByte@byte,w
  1394  0210  0008               	return
  1395  0211                     __end_of_i2c_GetByte:	
  1396  0211                     __ptext1072:	
  1397 ;; =============== function _i2c_Stop ends ============
  1398                           
  1399                           
  1400 ;; *************** function _i2c_Restart *****************
  1401 ;; Defined at:
  1402 ;;		line 43 in file "../i2c.c"
  1403 ;; Parameters:    Size  Location     Type
  1404 ;;		None
  1405 ;; Auto vars:     Size  Location     Type
  1406 ;;		None
  1407 ;; Return value:  Size  Location     Type
  1408 ;;		None               void
  1409 ;; Registers used:
  1410 ;;		wreg
  1411 ;; Tracked objects:
  1412 ;;		On entry : 40/0
  1413 ;;		On exit  : 60/20
  1414 ;;		Unchanged: 0/0
  1415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1416 ;;      Params:         0       0       0       0       0
  1417 ;;      Locals:         0       0       0       0       0
  1418 ;;      Temps:          0       1       0       0       0
  1419 ;;      Totals:         0       1       0       0       0
  1420 ;;Total ram usage:        1 bytes
  1421 ;; Hardware stack levels used:    1
  1422 ;; Hardware stack levels required when called:    2
  1423 ;; This function calls:
  1424 ;;		Nothing
  1425 ;; This function is called by:
  1426 ;;		_I2CReadH
  1427 ;;		_I2CReadL
  1428 ;; This function uses a non-reentrant model
  1429 ;;
  1430  0211                     _i2c_Restart:	
  1431                           
  1432                           ;i2c.c: 44: TRISB1 = 1;
  1433                           
  1434                           ; Regs used in _i2c_Restart: [wreg]
  1435  0211  1683               	bsf	3,5	;RP0=1, select bank1
  1436  0212  3003               	movlw	3
  1437  0213  1486               	bsf	6,1
  1438                           
  1439                           ;i2c.c: 45: _delay((unsigned long)((10)*(4000000/4000000.0)));
  1440  0214  1283               	bcf	3,5	;RP0=0, select bank0
  1441  0215  00C5               	movwf	??_i2c_Restart
  1442  0216                     u2407:	
  1443  0216  0BC5               	decfsz	??_i2c_Restart,f
  1444  0217  2A16               	goto	u2407
  1445                           
  1446                           ;i2c.c: 47: TRISB4 = 1;
  1447  0218  1683               	bsf	3,5	;RP0=1, select bank1
  1448  0219  300D               	movlw	13
  1449  021A  1303               	bcf	3,6	;RP1=0, select bank1
  1450  021B  1606               	bsf	6,4
  1451                           
  1452                           ;i2c.c: 48: _delay((unsigned long)((40)*(4000000/4000000.0)));
  1453  021C  1283               	bcf	3,5	;RP0=0, select bank0
  1454  021D  00C5               	movwf	??_i2c_Restart
  1455  021E                     u2417:	
  1456  021E  0BC5               	decfsz	??_i2c_Restart,f
  1457  021F  2A1E               	goto	u2417
  1458                           
  1459                           ;i2c.c: 50: TRISB1 = 0;
  1460  0220  1683               	bsf	3,5	;RP0=1, select bank1
  1461  0221  300D               	movlw	13
  1462  0222  1303               	bcf	3,6	;RP1=0, select bank1
  1463  0223  1086               	bcf	6,1
  1464                           
  1465                           ;i2c.c: 51: _delay((unsigned long)((40)*(4000000/4000000.0)));
  1466  0224  1283               	bcf	3,5	;RP0=0, select bank0
  1467  0225  00C5               	movwf	??_i2c_Restart
  1468  0226                     u2427:	
  1469  0226  0BC5               	decfsz	??_i2c_Restart,f
  1470  0227  2A26               	goto	u2427
  1471                           
  1472                           ;i2c.c: 53: TRISB4 = 0;
  1473  0228  1683               	bsf	3,5	;RP0=1, select bank1
  1474  0229  1303               	bcf	3,6	;RP1=0, select bank1
  1475  022A  1206               	bcf	6,4
  1476  022B  0008               	return
  1477  022C                     __end_of_i2c_Restart:	
  1478  022C                     __ptext1071:	
  1479 ;; =============== function _WriteSN ends ============
  1480                           
  1481                           
  1482 ;; *************** function _i2c_Stop *****************
  1483 ;; Defined at:
  1484 ;;		line 19 in file "../i2c.c"
  1485 ;; Parameters:    Size  Location     Type
  1486 ;;		None
  1487 ;; Auto vars:     Size  Location     Type
  1488 ;;		None
  1489 ;; Return value:  Size  Location     Type
  1490 ;;		None               void
  1491 ;; Registers used:
  1492 ;;		wreg
  1493 ;; Tracked objects:
  1494 ;;		On entry : 60/0
  1495 ;;		On exit  : 60/20
  1496 ;;		Unchanged: 0/0
  1497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1498 ;;      Params:         0       0       0       0       0
  1499 ;;      Locals:         0       0       0       0       0
  1500 ;;      Temps:          0       1       0       0       0
  1501 ;;      Totals:         0       1       0       0       0
  1502 ;;Total ram usage:        1 bytes
  1503 ;; Hardware stack levels used:    1
  1504 ;; Hardware stack levels required when called:    2
  1505 ;; This function calls:
  1506 ;;		Nothing
  1507 ;; This function is called by:
  1508 ;;		_I2CReadH
  1509 ;;		_I2CReadL
  1510 ;; This function uses a non-reentrant model
  1511 ;;
  1512  022C                     _i2c_Stop:	
  1513  022C                     l5851:	
  1514                           ; Regs used in _i2c_Stop: [wreg]
  1515                           
  1516                           
  1517                           ;i2c.c: 21: TRISB4 = 0;
  1518  022C  1683               	bsf	3,5	;RP0=1, select bank1
  1519  022D  300D               	movlw	13
  1520  022E  1206               	bcf	6,4
  1521                           
  1522                           ;i2c.c: 22: _delay((unsigned long)((40)*(4000000/4000000.0)));
  1523  022F  1283               	bcf	3,5	;RP0=0, select bank0
  1524  0230  00C5               	movwf	??_i2c_Stop
  1525  0231                     u2357:	
  1526  0231  0BC5               	decfsz	??_i2c_Stop,f
  1527  0232  2A31               	goto	u2357
  1528                           
  1529                           ;i2c.c: 23: TRISB1 = 0;
  1530  0233  1683               	bsf	3,5	;RP0=1, select bank1
  1531  0234  300D               	movlw	13
  1532  0235  1303               	bcf	3,6	;RP1=0, select bank1
  1533  0236  1086               	bcf	6,1
  1534                           
  1535                           ;i2c.c: 24: _delay((unsigned long)((40)*(4000000/4000000.0)));
  1536  0237  1283               	bcf	3,5	;RP0=0, select bank0
  1537  0238  00C5               	movwf	??_i2c_Stop
  1538  0239                     u2367:	
  1539  0239  0BC5               	decfsz	??_i2c_Stop,f
  1540  023A  2A39               	goto	u2367
  1541                           
  1542                           ;i2c.c: 25: TRISB4 = 1;
  1543  023B  1683               	bsf	3,5	;RP0=1, select bank1
  1544  023C  3003               	movlw	3
  1545  023D  1303               	bcf	3,6	;RP1=0, select bank1
  1546  023E  1606               	bsf	6,4
  1547                           
  1548                           ;i2c.c: 26: _delay((unsigned long)((10)*(4000000/4000000.0)));
  1549  023F  1283               	bcf	3,5	;RP0=0, select bank0
  1550  0240  00C5               	movwf	??_i2c_Stop
  1551  0241                     u2377:	
  1552  0241  0BC5               	decfsz	??_i2c_Stop,f
  1553  0242  2A41               	goto	u2377
  1554                           
  1555                           ;i2c.c: 27: TRISB4 = 1;
  1556  0243  1683               	bsf	3,5	;RP0=1, select bank1
  1557  0244  300D               	movlw	13
  1558  0245  1303               	bcf	3,6	;RP1=0, select bank1
  1559  0246  1606               	bsf	6,4
  1560                           
  1561                           ;i2c.c: 28: _delay((unsigned long)((40)*(4000000/4000000.0)));
  1562  0247  1283               	bcf	3,5	;RP0=0, select bank0
  1563  0248  00C5               	movwf	??_i2c_Stop
  1564  0249                     u2387:	
  1565  0249  0BC5               	decfsz	??_i2c_Stop,f
  1566  024A  2A49               	goto	u2387
  1567                           
  1568                           ;i2c.c: 29: TRISB1 = 1;
  1569  024B  1683               	bsf	3,5	;RP0=1, select bank1
  1570  024C  3010               	movlw	16
  1571  024D  1303               	bcf	3,6	;RP1=0, select bank1
  1572  024E  1486               	bsf	6,1
  1573                           
  1574                           ;i2c.c: 30: _delay((unsigned long)((50)*(4000000/4000000.0)));
  1575  024F  1283               	bcf	3,5	;RP0=0, select bank0
  1576  0250  00C5               	movwf	??_i2c_Stop
  1577  0251                     u2397:	
  1578  0251  0BC5               	decfsz	??_i2c_Stop,f
  1579  0252  2A51               	goto	u2397
  1580  0253  0064               	clrwdt
  1581                           
  1582                           ;i2c.c: 31: TRISB1 = 1;
  1583  0254  1683               	bsf	3,5	;RP0=1, select bank1
  1584  0255  1303               	bcf	3,6	;RP1=0, select bank1
  1585  0256  1486               	bsf	6,1
  1586  0257  0008               	return
  1587  0258                     __end_of_i2c_Stop:	
  1588  0258                     __ptext1059:	
  1589 ;; =============== function _i2c_ReadAcknowledge ends ============
  1590                           
  1591                           
  1592 ;; *************** function _i2c_SendByte *****************
  1593 ;; Defined at:
  1594 ;;		line 62 in file "../i2c.c"
  1595 ;; Parameters:    Size  Location     Type
  1596 ;;  byte            1    wreg     unsigned char 
  1597 ;; Auto vars:     Size  Location     Type
  1598 ;;  byte            1    2[BANK0 ] unsigned char 
  1599 ;;  i               1    3[BANK0 ] char 
  1600 ;; Return value:  Size  Location     Type
  1601 ;;                  1    wreg      unsigned char 
  1602 ;; Registers used:
  1603 ;;		wreg, status,2, status,0, pclath, cstack
  1604 ;; Tracked objects:
  1605 ;;		On entry : 60/0
  1606 ;;		On exit  : 60/0
  1607 ;;		Unchanged: 0/0
  1608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1609 ;;      Params:         0       0       0       0       0
  1610 ;;      Locals:         0       2       0       0       0
  1611 ;;      Temps:          0       1       0       0       0
  1612 ;;      Totals:         0       3       0       0       0
  1613 ;;Total ram usage:        3 bytes
  1614 ;; Hardware stack levels used:    1
  1615 ;; Hardware stack levels required when called:    3
  1616 ;; This function calls:
  1617 ;;		_i2c_WaitForSCL
  1618 ;; This function is called by:
  1619 ;;		_i2c_PutByte
  1620 ;; This function uses a non-reentrant model
  1621 ;;
  1622  0258                     _i2c_SendByte:	
  1623                           
  1624                           ; Regs used in _i2c_SendByte: [wreg+status,2+status,0+pclath+cstack]
  1625                           ;i2c_SendByte@byte stored from wreg
  1626  0258  00C7               	movwf	i2c_SendByte@byte
  1627                           
  1628                           ;i2c.c: 63: signed char i;
  1629                           ;i2c.c: 65: for(i=7; i>=0; i--)
  1630  0259  3007               	movlw	7
  1631  025A  00C8               	movwf	i2c_SendByte@i
  1632  025B                     l2027:	
  1633                           
  1634                           ;i2c.c: 66: {
  1635                           ;i2c.c: 67: TRISB4 = 0;
  1636  025B  1683               	bsf	3,5	;RP0=1, select bank1
  1637  025C  1206               	bcf	6,4
  1638                           
  1639                           ;i2c.c: 70: TRISB1 = ((byte>>i)&0x01);
  1640  025D  1283               	bcf	3,5	;RP0=0, select bank0
  1641  025E  0847               	movf	i2c_SendByte@byte,w
  1642  025F  00C6               	movwf	??_i2c_SendByte
  1643  0260  0A48               	incf	i2c_SendByte@i,w
  1644  0261  2A64               	goto	u2104
  1645  0262                     u2105:	
  1646  0262  1003               	clrc
  1647  0263  0CC6               	rrf	??_i2c_SendByte,f
  1648  0264                     u2104:	
  1649  0264  3EFF               	addlw	-1
  1650  0265  1D03               	skipz
  1651  0266  2A62               	goto	u2105
  1652  0267  1C46               	btfss	??_i2c_SendByte,0
  1653  0268  2A6D               	goto	u2110
  1654  0269  1683               	bsf	3,5	;RP0=1, select bank1
  1655  026A  1303               	bcf	3,6	;RP1=0, select bank1
  1656  026B  1486               	bsf	6,1
  1657  026C  2A70               	goto	u2124
  1658  026D                     u2110:	
  1659  026D  1683               	bsf	3,5	;RP0=1, select bank1
  1660  026E  1303               	bcf	3,6	;RP1=0, select bank1
  1661  026F  1086               	bcf	6,1
  1662  0270                     u2124:	
  1663                           
  1664                           ;i2c.c: 71: if ((byte>>i)&0x01) {
  1665  0270  1283               	bcf	3,5	;RP0=0, select bank0
  1666  0271  0847               	movf	i2c_SendByte@byte,w
  1667  0272  00C6               	movwf	??_i2c_SendByte
  1668  0273  0A48               	incf	i2c_SendByte@i,w
  1669  0274  2A77               	goto	u2134
  1670  0275                     u2135:	
  1671  0275  1003               	clrc
  1672  0276  0CC6               	rrf	??_i2c_SendByte,f
  1673  0277                     u2134:	
  1674  0277  3EFF               	addlw	-1
  1675  0278  1D03               	skipz
  1676  0279  2A75               	goto	u2135
  1677  027A  1C46               	btfss	??_i2c_SendByte,0
  1678  027B  2A7F               	goto	l2029
  1679                           
  1680                           ;i2c.c: 72: TRISB1 = 1;
  1681  027C  1683               	bsf	3,5	;RP0=1, select bank1
  1682  027D  1486               	bsf	6,1
  1683                           
  1684                           ;i2c.c: 73: }else {
  1685  027E  2A81               	goto	l6177
  1686  027F                     l2029:	
  1687                           
  1688                           ;i2c.c: 74: TRISB1 = 0;
  1689  027F  1683               	bsf	3,5	;RP0=1, select bank1
  1690  0280  1086               	bcf	6,1
  1691  0281                     l6177:	
  1692                           
  1693                           ;i2c.c: 75: }
  1694                           ;i2c.c: 76: _delay((unsigned long)((10)*(4000000/4000000.0)));
  1695  0281  3003               	movlw	3
  1696  0282  1283               	bcf	3,5	;RP0=0, select bank0
  1697  0283  00C6               	movwf	??_i2c_SendByte
  1698  0284                     u2307:	
  1699  0284  0BC6               	decfsz	??_i2c_SendByte,f
  1700  0285  2A84               	goto	u2307
  1701                           
  1702                           ;i2c.c: 77: TRISB4 = 1;
  1703  0286  1683               	bsf	3,5	;RP0=1, select bank1
  1704  0287  1303               	bcf	3,6	;RP1=0, select bank1
  1705  0288  1606               	bsf	6,4
  1706                           
  1707                           ;i2c.c: 79: if(i2c_WaitForSCL())
  1708  0289  229A  118A         	fcall	_i2c_WaitForSCL
  1709  028B  3A00               	xorlw	0
  1710  028C  1D03               	btfss	3,2
  1711                           
  1712                           ;i2c.c: 80: return !0;
  1713  028D  3401               	retlw	1
  1714                           
  1715                           ;i2c.c: 82: _delay((unsigned long)((40)*(4000000/4000000.0)));
  1716  028E  300D               	movlw	13
  1717  028F  00C6               	movwf	??_i2c_SendByte
  1718  0290                     u2317:	
  1719  0290  0BC6               	decfsz	??_i2c_SendByte,f
  1720  0291  2A90               	goto	u2317
  1721                           
  1722                           ;i2c.c: 83: TRISB4 = 0;
  1723  0292  1683               	bsf	3,5	;RP0=1, select bank1
  1724  0293  1303               	bcf	3,6	;RP1=0, select bank1
  1725  0294  1206               	bcf	6,4
  1726  0295  1283               	bcf	3,5	;RP0=0, select bank0
  1727  0296  03C8               	decf	i2c_SendByte@i,f
  1728  0297  1BC8               	btfsc	i2c_SendByte@i,7
  1729                           
  1730                           ;i2c.c: 84: }
  1731                           ;i2c.c: 85: return 0;
  1732  0298  3400               	retlw	0
  1733  0299  2A5B               	goto	l2027
  1734  029A                     __end_of_i2c_SendByte:	
  1735  029A                     __ptext1067:	
  1736 ;; =============== function _i2c_SendAcknowledge ends ============
  1737                           
  1738                           
  1739 ;; *************** function _i2c_WaitForSCL *****************
  1740 ;; Defined at:
  1741 ;;		line 240 in file "../i2c.c"
  1742 ;; Parameters:    Size  Location     Type
  1743 ;;		None
  1744 ;; Auto vars:     Size  Location     Type
  1745 ;;		None
  1746 ;; Return value:  Size  Location     Type
  1747 ;;                  1    wreg      unsigned char 
  1748 ;; Registers used:
  1749 ;;		wreg
  1750 ;; Tracked objects:
  1751 ;;		On entry : 60/20
  1752 ;;		On exit  : 60/0
  1753 ;;		Unchanged: 0/0
  1754 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1755 ;;      Params:         0       0       0       0       0
  1756 ;;      Locals:         0       0       0       0       0
  1757 ;;      Temps:          0       1       0       0       0
  1758 ;;      Totals:         0       1       0       0       0
  1759 ;;Total ram usage:        1 bytes
  1760 ;; Hardware stack levels used:    1
  1761 ;; Hardware stack levels required when called:    2
  1762 ;; This function calls:
  1763 ;;		Nothing
  1764 ;; This function is called by:
  1765 ;;		_i2c_SendByte
  1766 ;;		_i2c_ReadAcknowledge
  1767 ;;		_i2c_ReadByte
  1768 ;; This function uses a non-reentrant model
  1769 ;;
  1770  029A                     _i2c_WaitForSCL:	
  1771                           
  1772                           ;i2c.c: 242: if(!RB4)
  1773                           
  1774                           ; Regs used in _i2c_WaitForSCL: [wreg]
  1775  029A  1283               	bcf	3,5	;RP0=0, select bank0
  1776  029B  1A06               	btfsc	6,4
  1777  029C  3400               	retlw	0
  1778                           
  1779                           ;i2c.c: 243: {
  1780                           ;i2c.c: 244: _delay((unsigned long)((10)*(4000000/4000000.0)));
  1781  029D  3003               	movlw	3
  1782  029E  00C5               	movwf	??_i2c_WaitForSCL
  1783  029F                     u2347:	
  1784  029F  0BC5               	decfsz	??_i2c_WaitForSCL,f
  1785  02A0  2A9F               	goto	u2347
  1786                           
  1787                           ;i2c.c: 246: if(!RB4)
  1788  02A1  1283               	bcf	3,5	;RP0=0, select bank0
  1789  02A2  1303               	bcf	3,6	;RP1=0, select bank0
  1790  02A3  1E06               	btfss	6,4
  1791                           
  1792                           ;i2c.c: 247: return !0;
  1793  02A4  3401               	retlw	1
  1794  02A5  3400               	retlw	0
  1795  02A6                     __end_of_i2c_WaitForSCL:	
  1796                           ;i2c.c: 248: }
  1797                           ;i2c.c: 249: return 0;
  1798                           
  1799  02A6                     __ptext1057:	
  1800 ;; =============== function _i2c_PutByte ends ============
  1801                           
  1802                           
  1803 ;; *************** function _i2c_ReadByte *****************
  1804 ;; Defined at:
  1805 ;;		line 124 in file "../i2c.c"
  1806 ;; Parameters:    Size  Location     Type
  1807 ;;		None
  1808 ;; Auto vars:     Size  Location     Type
  1809 ;;  i               1    3[BANK0 ] unsigned char 
  1810 ;;  byte            1    2[BANK0 ] unsigned char 
  1811 ;; Return value:  Size  Location     Type
  1812 ;;                  1    wreg      unsigned char 
  1813 ;; Registers used:
  1814 ;;		wreg, status,2, status,0, pclath, cstack
  1815 ;; Tracked objects:
  1816 ;;		On entry : 60/0
  1817 ;;		On exit  : 60/0
  1818 ;;		Unchanged: 0/0
  1819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1820 ;;      Params:         0       0       0       0       0
  1821 ;;      Locals:         0       2       0       0       0
  1822 ;;      Temps:          0       1       0       0       0
  1823 ;;      Totals:         0       3       0       0       0
  1824 ;;Total ram usage:        3 bytes
  1825 ;; Hardware stack levels used:    1
  1826 ;; Hardware stack levels required when called:    3
  1827 ;; This function calls:
  1828 ;;		_i2c_WaitForSCL
  1829 ;; This function is called by:
  1830 ;;		_i2c_GetByte
  1831 ;; This function uses a non-reentrant model
  1832 ;;
  1833  02A6                     _i2c_ReadByte:	
  1834                           
  1835                           ;i2c.c: 125: unsigned char i;
  1836                           ;i2c.c: 126: unsigned char byte = 0;
  1837                           
  1838                           ; Regs used in _i2c_ReadByte: [wreg+status,2+status,0+pclath+cstack]
  1839  02A6  01C7               	clrf	i2c_ReadByte@byte
  1840                           
  1841                           ;i2c.c: 128: for(i=0; i<8; i++)
  1842  02A7  01C8               	clrf	i2c_ReadByte@i
  1843  02A8                     l2042:	
  1844                           
  1845                           ;i2c.c: 129: {
  1846                           ;i2c.c: 130: TRISB4 = 0;
  1847  02A8  1683               	bsf	3,5	;RP0=1, select bank1
  1848  02A9  3010               	movlw	16
  1849  02AA  1206               	bcf	6,4
  1850                           
  1851                           ;i2c.c: 131: _delay((unsigned long)((50)*(4000000/4000000.0)));
  1852  02AB  1283               	bcf	3,5	;RP0=0, select bank0
  1853  02AC  00C6               	movwf	??_i2c_ReadByte
  1854  02AD                     u2267:	
  1855  02AD  0BC6               	decfsz	??_i2c_ReadByte,f
  1856  02AE  2AAD               	goto	u2267
  1857  02AF  0064               	clrwdt
  1858                           
  1859                           ;i2c.c: 132: TRISB1 = 1;
  1860  02B0  1683               	bsf	3,5	;RP0=1, select bank1
  1861  02B1  1303               	bcf	3,6	;RP1=0, select bank1
  1862  02B2  1486               	bsf	6,1
  1863                           
  1864                           ;i2c.c: 134: TRISB4 = 1;
  1865  02B3  1606               	bsf	6,4
  1866                           
  1867                           ;i2c.c: 135: if(i2c_WaitForSCL())
  1868  02B4  229A  118A         	fcall	_i2c_WaitForSCL
  1869  02B6  3A00               	xorlw	0
  1870  02B7  1D03               	btfss	3,2
  1871                           
  1872                           ;i2c.c: 136: return (-1);
  1873  02B8  34FF               	retlw	255
  1874                           
  1875                           ;i2c.c: 137: _delay((unsigned long)((40)*(4000000/4000000.0)));
  1876  02B9  300D               	movlw	13
  1877  02BA  00C6               	movwf	??_i2c_ReadByte
  1878  02BB                     u2277:	
  1879  02BB  0BC6               	decfsz	??_i2c_ReadByte,f
  1880  02BC  2ABB               	goto	u2277
  1881                           
  1882                           ;i2c.c: 138: byte = byte << 1;
  1883  02BD  1283               	bcf	3,5	;RP0=0, select bank0
  1884  02BE  3000               	movlw	0
  1885  02BF  1303               	bcf	3,6	;RP1=0, select bank0
  1886  02C0  1003               	clrc
  1887  02C1  0DC7               	rlf	i2c_ReadByte@byte,f
  1888                           
  1889                           ;i2c.c: 139: byte |= RB1;
  1890  02C2  1886               	btfsc	6,1
  1891  02C3  3001               	movlw	1
  1892  02C4  04C7               	iorwf	i2c_ReadByte@byte,f
  1893                           
  1894                           ;i2c.c: 140: TRISB4 = 0;
  1895  02C5  1683               	bsf	3,5	;RP0=1, select bank1
  1896  02C6  1206               	bcf	6,4
  1897  02C7  1283               	bcf	3,5	;RP0=0, select bank0
  1898  02C8  3008               	movlw	8
  1899  02C9  0AC8               	incf	i2c_ReadByte@i,f
  1900  02CA  0248               	subwf	i2c_ReadByte@i,w
  1901  02CB  1C03               	skipc
  1902  02CC  2AA8               	goto	l2042
  1903                           
  1904                           ;i2c.c: 141: }
  1905                           ;i2c.c: 142: return (int)byte;
  1906  02CD  0847               	movf	i2c_ReadByte@byte,w
  1907  02CE  0008               	return
  1908  02CF                     __end_of_i2c_ReadByte:	
  1909  02CF                     __ptext1066:	
  1910 ;; =============== function _WriteByte ends ============
  1911                           
  1912                           
  1913 ;; *************** function _i2c_SendAcknowledge *****************
  1914 ;; Defined at:
  1915 ;;		line 150 in file "../i2c.c"
  1916 ;; Parameters:    Size  Location     Type
  1917 ;;  status          1    wreg     unsigned char 
  1918 ;; Auto vars:     Size  Location     Type
  1919 ;;  status          1    1[BANK0 ] unsigned char 
  1920 ;; Return value:  Size  Location     Type
  1921 ;;		None               void
  1922 ;; Registers used:
  1923 ;;		wreg
  1924 ;; Tracked objects:
  1925 ;;		On entry : 60/0
  1926 ;;		On exit  : 0/0
  1927 ;;		Unchanged: 0/0
  1928 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1929 ;;      Params:         0       0       0       0       0
  1930 ;;      Locals:         0       1       0       0       0
  1931 ;;      Temps:          0       1       0       0       0
  1932 ;;      Totals:         0       2       0       0       0
  1933 ;;Total ram usage:        2 bytes
  1934 ;; Hardware stack levels used:    1
  1935 ;; Hardware stack levels required when called:    2
  1936 ;; This function calls:
  1937 ;;		Nothing
  1938 ;; This function is called by:
  1939 ;;		_i2c_GetByte
  1940 ;; This function uses a non-reentrant model
  1941 ;;
  1942  02CF                     _i2c_SendAcknowledge:	
  1943                           
  1944                           ; Regs used in _i2c_SendAcknowledge: [wreg]
  1945                           ;i2c_SendAcknowledge@status stored from wreg
  1946  02CF  00C6               	movwf	i2c_SendAcknowledge@status
  1947                           
  1948                           ;i2c.c: 151: TRISB4 = 0;
  1949  02D0  1683               	bsf	3,5	;RP0=1, select bank1
  1950  02D1  1206               	bcf	6,4
  1951                           
  1952                           ;i2c.c: 152: if (status) {
  1953  02D2  1283               	bcf	3,5	;RP0=0, select bank0
  1954  02D3  0846               	movf	i2c_SendAcknowledge@status,w
  1955  02D4  1903               	btfsc	3,2
  1956  02D5  2AD9               	goto	l2048
  1957                           
  1958                           ;i2c.c: 153: TRISB1 = 0;
  1959  02D6  1683               	bsf	3,5	;RP0=1, select bank1
  1960  02D7  1086               	bcf	6,1
  1961                           
  1962                           ;i2c.c: 154: }else {
  1963  02D8  2ADB               	goto	l5939
  1964  02D9                     l2048:	
  1965                           
  1966                           ;i2c.c: 155: TRISB1 = 1;
  1967  02D9  1683               	bsf	3,5	;RP0=1, select bank1
  1968  02DA  1486               	bsf	6,1
  1969  02DB                     l5939:	
  1970                           
  1971                           ;i2c.c: 156: }
  1972                           ;i2c.c: 157: _delay((unsigned long)((10)*(4000000/4000000.0)));
  1973  02DB  3003               	movlw	3
  1974  02DC  1283               	bcf	3,5	;RP0=0, select bank0
  1975  02DD  00C5               	movwf	??_i2c_SendAcknowledge
  1976  02DE                     u2327:	
  1977  02DE  0BC5               	decfsz	??_i2c_SendAcknowledge,f
  1978  02DF  2ADE               	goto	u2327
  1979                           
  1980                           ;i2c.c: 158: TRISB4 = 1;
  1981  02E0  1683               	bsf	3,5	;RP0=1, select bank1
  1982  02E1  300D               	movlw	13
  1983  02E2  1303               	bcf	3,6	;RP1=0, select bank1
  1984  02E3  1606               	bsf	6,4
  1985                           
  1986                           ;i2c.c: 159: _delay((unsigned long)((40)*(4000000/4000000.0)));
  1987  02E4  1283               	bcf	3,5	;RP0=0, select bank0
  1988  02E5  00C5               	movwf	??_i2c_SendAcknowledge
  1989  02E6                     u2337:	
  1990  02E6  0BC5               	decfsz	??_i2c_SendAcknowledge,f
  1991  02E7  2AE6               	goto	u2337
  1992  02E8  0008               	return
  1993  02E9                     __end_of_i2c_SendAcknowledge:	
  1994                           
  1995                           	psect	text1061
  1996  02E9                     __ptext1061:	
  1997 ;; =============== function _DS18B20ReadFlash ends ============
  1998                           
  1999                           
  2000 ;; *************** function _DS18B20Convert *****************
  2001 ;; Defined at:
  2002 ;;		line 67 in file "../DS18B20.c"
  2003 ;; Parameters:    Size  Location     Type
  2004 ;;		None
  2005 ;; Auto vars:     Size  Location     Type
  2006 ;;  i               2    4[BANK0 ] unsigned int 
  2007 ;; Return value:  Size  Location     Type
  2008 ;;                  1    wreg      unsigned char 
  2009 ;; Registers used:
  2010 ;;		wreg, status,2, status,0, pclath, cstack
  2011 ;; Tracked objects:
  2012 ;;		On entry : 60/20
  2013 ;;		On exit  : 60/0
  2014 ;;		Unchanged: 0/0
  2015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2016 ;;      Params:         0       0       0       0       0
  2017 ;;      Locals:         0       2       0       0       0
  2018 ;;      Temps:          0       0       0       0       0
  2019 ;;      Totals:         0       2       0       0       0
  2020 ;;Total ram usage:        2 bytes
  2021 ;; Hardware stack levels used:    1
  2022 ;; Hardware stack levels required when called:    3
  2023 ;; This function calls:
  2024 ;;		_Reset
  2025 ;;		_WriteByte
  2026 ;; This function is called by:
  2027 ;;		_main
  2028 ;; This function uses a non-reentrant model
  2029 ;;
  2030  02E9                     _DS18B20Convert:	
  2031                           
  2032                           ;DS18B20.c: 68: unsigned int i;
  2033                           ;DS18B20.c: 69: if(Reset()==0)
  2034                           
  2035                           ; Regs used in _DS18B20Convert: [wreg+status,2+status,0+pclath+cstack]
  2036  02E9  237F  118A         	fcall	_Reset
  2037  02EB  3800               	iorlw	0
  2038  02EC  1D03               	skipz
  2039  02ED  3400               	retlw	0
  2040                           
  2041                           ;DS18B20.c: 70: {
  2042                           ;DS18B20.c: 71: i=77;while(i>0){i--;}
  2043  02EE  304D               	movlw	77
  2044  02EF  00C9               	movwf	DS18B20Convert@i
  2045  02F0  01CA               	clrf	DS18B20Convert@i+1
  2046  02F1                     l6141:	
  2047  02F1  084A               	movf	DS18B20Convert@i+1,w
  2048  02F2  0449               	iorwf	DS18B20Convert@i,w
  2049  02F3  1903               	btfsc	3,2
  2050  02F4  2AFC               	goto	l6143
  2051  02F5  3001               	movlw	1
  2052  02F6  02C9               	subwf	DS18B20Convert@i,f
  2053  02F7  3000               	movlw	0
  2054  02F8  1C03               	skipc
  2055  02F9  03CA               	decf	DS18B20Convert@i+1,f
  2056  02FA  02CA               	subwf	DS18B20Convert@i+1,f
  2057  02FB  2AF1               	goto	l6141
  2058  02FC                     l6143:	
  2059                           
  2060                           ;DS18B20.c: 72: WriteByte(0xcc);
  2061  02FC  30CC               	movlw	204
  2062  02FD  2343  118A         	fcall	_WriteByte
  2063                           
  2064                           ;DS18B20.c: 73: WriteByte(0x44);
  2065  02FF  3044               	movlw	68
  2066  0300  2343               	fcall	_WriteByte
  2067                           
  2068                           ;DS18B20.c: 74: return 1;
  2069  0301  3401               	retlw	1
  2070  0302                     __end_of_DS18B20Convert:	
  2071                           ;DS18B20.c: 76: else
  2072                           ;DS18B20.c: 77: {
  2073                           ;DS18B20.c: 78: return 0;
  2074                           
  2075  0302                     __ptext1060:	
  2076 ;; =============== function _i2c_SendByte ends ============
  2077                           
  2078                           
  2079 ;; *************** function _DS18B20ReadFlash *****************
  2080 ;; Defined at:
  2081 ;;		line 83 in file "../DS18B20.c"
  2082 ;; Parameters:    Size  Location     Type
  2083 ;;		None
  2084 ;; Auto vars:     Size  Location     Type
  2085 ;;  i               2    4[BANK0 ] unsigned int 
  2086 ;; Return value:  Size  Location     Type
  2087 ;;		None               void
  2088 ;; Registers used:
  2089 ;;		wreg, status,2, status,0, pclath, cstack
  2090 ;; Tracked objects:
  2091 ;;		On entry : 60/0
  2092 ;;		On exit  : 60/0
  2093 ;;		Unchanged: 0/0
  2094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2095 ;;      Params:         0       0       0       0       0
  2096 ;;      Locals:         0       2       0       0       0
  2097 ;;      Temps:          0       0       0       0       0
  2098 ;;      Totals:         0       2       0       0       0
  2099 ;;Total ram usage:        2 bytes
  2100 ;; Hardware stack levels used:    1
  2101 ;; Hardware stack levels required when called:    3
  2102 ;; This function calls:
  2103 ;;		_Reset
  2104 ;;		_WriteByte
  2105 ;;		_ReadByte
  2106 ;; This function is called by:
  2107 ;;		_main
  2108 ;; This function uses a non-reentrant model
  2109 ;;
  2110  0302                     _DS18B20ReadFlash:	
  2111                           
  2112                           ;DS18B20.c: 84: unsigned int i;
  2113                           ;DS18B20.c: 85: if(Reset() == 0)
  2114                           
  2115                           ; Regs used in _DS18B20ReadFlash: [wreg+status,2+status,0+pclath+cstack]
  2116  0302  237F  118A         	fcall	_Reset
  2117  0304  3800               	iorlw	0
  2118  0305  1D03               	skipz
  2119  0306  2B21               	goto	l6165
  2120                           
  2121                           ;DS18B20.c: 86: {
  2122                           ;DS18B20.c: 87: i=77;while(i>0){i--;}
  2123  0307  304D               	movlw	77
  2124  0308  00C9               	movwf	DS18B20ReadFlash@i
  2125  0309  01CA               	clrf	DS18B20ReadFlash@i+1
  2126  030A                     l6161:	
  2127  030A  084A               	movf	DS18B20ReadFlash@i+1,w
  2128  030B  0449               	iorwf	DS18B20ReadFlash@i,w
  2129  030C  1903               	btfsc	3,2
  2130  030D  2B15               	goto	l6163
  2131  030E  3001               	movlw	1
  2132  030F  02C9               	subwf	DS18B20ReadFlash@i,f
  2133  0310  3000               	movlw	0
  2134  0311  1C03               	skipc
  2135  0312  03CA               	decf	DS18B20ReadFlash@i+1,f
  2136  0313  02CA               	subwf	DS18B20ReadFlash@i+1,f
  2137  0314  2B0A               	goto	l6161
  2138  0315                     l6163:	
  2139                           
  2140                           ;DS18B20.c: 88: WriteByte(0xCC);
  2141  0315  30CC               	movlw	204
  2142  0316  2343  118A         	fcall	_WriteByte
  2143                           
  2144                           ;DS18B20.c: 89: WriteByte(0xBE);
  2145  0318  30BE               	movlw	190
  2146  0319  2343  118A         	fcall	_WriteByte
  2147                           
  2148                           ;DS18B20.c: 90: T_Lsb = ReadByte();
  2149  031B  23B8  118A         	fcall	_ReadByte
  2150  031D  00B5               	movwf	_T_Lsb
  2151                           
  2152                           ;DS18B20.c: 91: T_Msb = ReadByte();
  2153  031E  23B8               	fcall	_ReadByte
  2154  031F  00B7               	movwf	_T_Msb
  2155                           
  2156                           ;DS18B20.c: 92: }
  2157  0320  0008               	return
  2158  0321                     l6165:	
  2159                           
  2160                           ;DS18B20.c: 93: else
  2161                           ;DS18B20.c: 94: {
  2162                           ;DS18B20.c: 95: T_Lsb = 0;
  2163  0321  01B5               	clrf	_T_Lsb
  2164                           
  2165                           ;DS18B20.c: 96: T_Msb = 0;
  2166  0322  01B7               	clrf	_T_Msb
  2167  0323  0008               	return
  2168  0324                     __end_of_DS18B20ReadFlash:	
  2169  0324                     __ptext1062:	
  2170 ;; =============== function _DS18B20Convert ends ============
  2171                           
  2172                           
  2173 ;; *************** function _DS18B20Initial *****************
  2174 ;; Defined at:
  2175 ;;		line 101 in file "../DS18B20.c"
  2176 ;; Parameters:    Size  Location     Type
  2177 ;;		None
  2178 ;; Auto vars:     Size  Location     Type
  2179 ;;  i               2    4[BANK0 ] unsigned int 
  2180 ;; Return value:  Size  Location     Type
  2181 ;;		None               void
  2182 ;; Registers used:
  2183 ;;		wreg, status,2, status,0, pclath, cstack
  2184 ;; Tracked objects:
  2185 ;;		On entry : 7F/0
  2186 ;;		On exit  : 60/0
  2187 ;;		Unchanged: 0/0
  2188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2189 ;;      Params:         0       0       0       0       0
  2190 ;;      Locals:         0       2       0       0       0
  2191 ;;      Temps:          0       0       0       0       0
  2192 ;;      Totals:         0       2       0       0       0
  2193 ;;Total ram usage:        2 bytes
  2194 ;; Hardware stack levels used:    1
  2195 ;; Hardware stack levels required when called:    3
  2196 ;; This function calls:
  2197 ;;		_Reset
  2198 ;;		_WriteByte
  2199 ;; This function is called by:
  2200 ;;		_main
  2201 ;; This function uses a non-reentrant model
  2202 ;;
  2203  0324                     _DS18B20Initial:	
  2204                           
  2205                           ;DS18B20.c: 102: unsigned int i;
  2206                           ;DS18B20.c: 103: if(Reset() == 0)
  2207                           
  2208                           ; Regs used in _DS18B20Initial: [wreg+status,2+status,0+pclath+cstack]
  2209  0324  237F  118A         	fcall	_Reset
  2210  0326  3800               	iorlw	0
  2211  0327  1D03               	skipz
  2212  0328  0008               	return
  2213                           
  2214                           ;DS18B20.c: 104: {
  2215                           ;DS18B20.c: 105: i=77;while(i>0){i--;}
  2216  0329  304D               	movlw	77
  2217  032A  00C9               	movwf	DS18B20Initial@i
  2218  032B  01CA               	clrf	DS18B20Initial@i+1
  2219  032C                     l6131:	
  2220  032C  084A               	movf	DS18B20Initial@i+1,w
  2221  032D  0449               	iorwf	DS18B20Initial@i,w
  2222  032E  1903               	btfsc	3,2
  2223  032F  2B35               	goto	l6133
  2224  0330  3001               	movlw	1
  2225  0331  02C9               	subwf	DS18B20Initial@i,f
  2226  0332  1C03               	skipc
  2227  0333  03CA               	decf	DS18B20Initial@i+1,f
  2228  0334  2B2C               	goto	l6131
  2229  0335                     l6133:	
  2230                           
  2231                           ;DS18B20.c: 106: WriteByte(0xCC);
  2232  0335  30CC               	movlw	204
  2233  0336  2343  118A         	fcall	_WriteByte
  2234                           
  2235                           ;DS18B20.c: 107: WriteByte(0x4E);
  2236  0338  304E               	movlw	78
  2237  0339  2343  118A         	fcall	_WriteByte
  2238                           
  2239                           ;DS18B20.c: 108: WriteByte(0x00);
  2240  033B  3000               	movlw	0
  2241  033C  2343  118A         	fcall	_WriteByte
  2242                           
  2243                           ;DS18B20.c: 109: WriteByte(0x00);
  2244  033E  3000               	movlw	0
  2245  033F  2343  118A         	fcall	_WriteByte
  2246                           
  2247                           ;DS18B20.c: 110: WriteByte(0x7F);
  2248  0341  307F               	movlw	127
  2249  0342  2B43               	ljmp	_WriteByte
  2250  0343                     __end_of_DS18B20Initial:	
  2251  0343                     __ptext1065:	
  2252 ;; =============== function _ReadByte ends ============
  2253                           
  2254                           
  2255 ;; *************** function _WriteByte *****************
  2256 ;; Defined at:
  2257 ;;		line 24 in file "../DS18B20.c"
  2258 ;; Parameters:    Size  Location     Type
  2259 ;;  dat             1    wreg     unsigned char 
  2260 ;; Auto vars:     Size  Location     Type
  2261 ;;  dat             1    0[BANK0 ] unsigned char 
  2262 ;;  i               2    2[BANK0 ] unsigned int 
  2263 ;;  j               1    1[BANK0 ] unsigned char 
  2264 ;; Return value:  Size  Location     Type
  2265 ;;		None               void
  2266 ;; Registers used:
  2267 ;;		wreg, status,2, status,0
  2268 ;; Tracked objects:
  2269 ;;		On entry : 60/0
  2270 ;;		On exit  : 60/0
  2271 ;;		Unchanged: 0/0
  2272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2273 ;;      Params:         0       0       0       0       0
  2274 ;;      Locals:         0       4       0       0       0
  2275 ;;      Temps:          0       0       0       0       0
  2276 ;;      Totals:         0       4       0       0       0
  2277 ;;Total ram usage:        4 bytes
  2278 ;; Hardware stack levels used:    1
  2279 ;; Hardware stack levels required when called:    2
  2280 ;; This function calls:
  2281 ;;		Nothing
  2282 ;; This function is called by:
  2283 ;;		_DS18B20Convert
  2284 ;;		_DS18B20ReadFlash
  2285 ;;		_DS18B20Initial
  2286 ;; This function uses a non-reentrant model
  2287 ;;
  2288  0343                     _WriteByte:	
  2289                           
  2290                           ; Regs used in _WriteByte: [wreg+status,2+status,0]
  2291                           ;WriteByte@dat stored from wreg
  2292  0343  00C5               	movwf	WriteByte@dat
  2293                           
  2294                           ;DS18B20.c: 25: unsigned int i;
  2295                           ;DS18B20.c: 26: unsigned char j;
  2296                           ;DS18B20.c: 27: for(j=0;j<8;j++)
  2297  0344  01C6               	clrf	WriteByte@j
  2298  0345                     l2710:	
  2299                           
  2300                           ;DS18B20.c: 28: {
  2301                           ;DS18B20.c: 29: if(dat & 0x01){
  2302  0345  1C45               	btfss	WriteByte@dat,0
  2303  0346  2B61               	goto	l2712
  2304                           
  2305                           ;DS18B20.c: 30: TRISA0=0;
  2306  0347  1683               	bsf	3,5	;RP0=1, select bank1
  2307  0348  1005               	bcf	5,0
  2308                           
  2309                           ;DS18B20.c: 31: RA0=0;
  2310  0349  1283               	bcf	3,5	;RP0=0, select bank0
  2311  034A  1005               	bcf	5,0
  2312                           
  2313                           ;DS18B20.c: 32: _nop();_nop();_nop();_nop();_nop();_nop();
  2314  034B  0000               	nop
  2315  034C  0000               	nop
  2316  034D  0000               	nop
  2317  034E  0000               	nop
  2318  034F  0000               	nop
  2319  0350  0000               	nop
  2320                           
  2321                           ;DS18B20.c: 33: TRISA0=1;
  2322  0351  1683               	bsf	3,5	;RP0=1, select bank1
  2323  0352  3005               	movlw	5
  2324  0353  1303               	bcf	3,6	;RP1=0, select bank1
  2325  0354  1405               	bsf	5,0
  2326                           
  2327                           ;DS18B20.c: 34: i=5;while(i>0){i--;}
  2328  0355  1283               	bcf	3,5	;RP0=0, select bank0
  2329  0356  00C7               	movwf	WriteByte@i
  2330  0357  01C8               	clrf	WriteByte@i+1
  2331  0358                     l5957:	
  2332  0358  0848               	movf	WriteByte@i+1,w
  2333  0359  0447               	iorwf	WriteByte@i,w
  2334  035A  1903               	btfsc	3,2
  2335  035B  2B75               	goto	l2716
  2336  035C  3001               	movlw	1
  2337  035D  02C7               	subwf	WriteByte@i,f
  2338  035E  1C03               	skipc
  2339  035F  03C8               	decf	WriteByte@i+1,f
  2340  0360  2B58               	goto	l5957
  2341  0361                     l2712:	
  2342                           
  2343                           ;DS18B20.c: 36: TRISA0 = 0;
  2344  0361  1683               	bsf	3,5	;RP0=1, select bank1
  2345  0362  1005               	bcf	5,0
  2346                           
  2347                           ;DS18B20.c: 37: RA0 = 0;
  2348  0363  1283               	bcf	3,5	;RP0=0, select bank0
  2349  0364  3005               	movlw	5
  2350  0365  1005               	bcf	5,0
  2351                           
  2352                           ;DS18B20.c: 38: i=5;while(i>0){i--;}
  2353  0366  00C7               	movwf	WriteByte@i
  2354  0367  01C8               	clrf	WriteByte@i+1
  2355  0368                     l5963:	
  2356  0368  0848               	movf	WriteByte@i+1,w
  2357  0369  0447               	iorwf	WriteByte@i,w
  2358  036A  1903               	btfsc	3,2
  2359  036B  2B71               	goto	l2719
  2360  036C  3001               	movlw	1
  2361  036D  02C7               	subwf	WriteByte@i,f
  2362  036E  1C03               	skipc
  2363  036F  03C8               	decf	WriteByte@i+1,f
  2364  0370  2B68               	goto	l5963
  2365  0371                     l2719:	
  2366                           
  2367                           ;DS18B20.c: 39: TRISA0 = 1;
  2368  0371  1683               	bsf	3,5	;RP0=1, select bank1
  2369  0372  1405               	bsf	5,0
  2370                           
  2371                           ;DS18B20.c: 40: _nop();_nop();
  2372  0373  0000               	nop
  2373  0374  0000               	nop
  2374  0375                     l2716:	
  2375                           
  2376                           ;DS18B20.c: 41: }
  2377                           ;DS18B20.c: 42: dat = dat >> 1;
  2378  0375  1283               	bcf	3,5	;RP0=0, select bank0
  2379  0376  3008               	movlw	8
  2380  0377  1303               	bcf	3,6	;RP1=0, select bank0
  2381  0378  1003               	clrc
  2382  0379  0CC5               	rrf	WriteByte@dat,f
  2383  037A  0AC6               	incf	WriteByte@j,f
  2384  037B  0246               	subwf	WriteByte@j,w
  2385  037C  1803               	btfsc	3,0
  2386  037D  0008               	return
  2387  037E  2B45               	goto	l2710
  2388  037F                     __end_of_WriteByte:	
  2389  037F                     __ptext1073:	
  2390 ;; =============== function _i2c_Restart ends ============
  2391                           
  2392                           
  2393 ;; *************** function _Reset *****************
  2394 ;; Defined at:
  2395 ;;		line 6 in file "../DS18B20.c"
  2396 ;; Parameters:    Size  Location     Type
  2397 ;;		None
  2398 ;; Auto vars:     Size  Location     Type
  2399 ;;  i               2    1[BANK0 ] unsigned int 
  2400 ;;  k               1    0[BANK0 ] unsigned char 
  2401 ;; Return value:  Size  Location     Type
  2402 ;;                  1    wreg      unsigned char 
  2403 ;; Registers used:
  2404 ;;		wreg, status,2, status,0
  2405 ;; Tracked objects:
  2406 ;;		On entry : 40/0
  2407 ;;		On exit  : 60/0
  2408 ;;		Unchanged: FFF9F/0
  2409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2410 ;;      Params:         0       0       0       0       0
  2411 ;;      Locals:         0       3       0       0       0
  2412 ;;      Temps:          0       0       0       0       0
  2413 ;;      Totals:         0       3       0       0       0
  2414 ;;Total ram usage:        3 bytes
  2415 ;; Hardware stack levels used:    1
  2416 ;; Hardware stack levels required when called:    2
  2417 ;; This function calls:
  2418 ;;		Nothing
  2419 ;; This function is called by:
  2420 ;;		_DS18B20Convert
  2421 ;;		_DS18B20ReadFlash
  2422 ;;		_DS18B20Initial
  2423 ;; This function uses a non-reentrant model
  2424 ;;
  2425  037F                     _Reset:	
  2426                           
  2427                           ;DS18B20.c: 7: unsigned int i;
  2428                           ;DS18B20.c: 8: unsigned char k;
  2429                           ;DS18B20.c: 9: TRISA0 = 0;
  2430                           
  2431                           ; Regs used in _Reset: [wreg+status,2+status,0]
  2432  037F  1683               	bsf	3,5	;RP0=1, select bank1
  2433  0380  1005               	bcf	5,0
  2434                           
  2435                           ;DS18B20.c: 10: RA0 = 0;
  2436  0381  1283               	bcf	3,5	;RP0=0, select bank0
  2437  0382  3043               	movlw	67
  2438  0383  1005               	bcf	5,0
  2439                           
  2440                           ;DS18B20.c: 11: i=67;while(i>0){i--;}
  2441  0384  00C6               	movwf	Reset@i
  2442  0385  01C7               	clrf	Reset@i+1
  2443  0386                     l5819:	
  2444  0386  0847               	movf	Reset@i+1,w
  2445  0387  0446               	iorwf	Reset@i,w
  2446  0388  1903               	btfsc	3,2
  2447  0389  2B91               	goto	l2698
  2448  038A  3001               	movlw	1
  2449  038B  02C6               	subwf	Reset@i,f
  2450  038C  3000               	movlw	0
  2451  038D  1C03               	skipc
  2452  038E  03C7               	decf	Reset@i+1,f
  2453  038F  02C7               	subwf	Reset@i+1,f
  2454  0390  2B86               	goto	l5819
  2455  0391                     l2698:	
  2456                           
  2457                           ;DS18B20.c: 12: TRISA0 = 1;
  2458  0391  1683               	bsf	3,5	;RP0=1, select bank1
  2459  0392  3006               	movlw	6
  2460  0393  1405               	bsf	5,0
  2461                           
  2462                           ;DS18B20.c: 13: i=6;while(i>0){i--;}
  2463  0394  1283               	bcf	3,5	;RP0=0, select bank0
  2464  0395  00C6               	movwf	Reset@i
  2465  0396  01C7               	clrf	Reset@i+1
  2466  0397                     l5825:	
  2467  0397  0847               	movf	Reset@i+1,w
  2468  0398  0446               	iorwf	Reset@i,w
  2469  0399  1903               	btfsc	3,2
  2470  039A  2BA2               	goto	l2701
  2471  039B  3001               	movlw	1
  2472  039C  02C6               	subwf	Reset@i,f
  2473  039D  3000               	movlw	0
  2474  039E  1C03               	skipc
  2475  039F  03C7               	decf	Reset@i+1,f
  2476  03A0  02C7               	subwf	Reset@i+1,f
  2477  03A1  2B97               	goto	l5825
  2478  03A2                     l2701:	
  2479                           
  2480                           ;DS18B20.c: 14: if(RA0 == 0){
  2481  03A2  1805               	btfsc	5,0
  2482  03A3  2BA6               	goto	l2702
  2483                           
  2484                           ;DS18B20.c: 15: k = 0;
  2485  03A4  01C5               	clrf	Reset@k
  2486                           
  2487                           ;DS18B20.c: 16: }else{
  2488  03A5  2BA8               	goto	l5829
  2489  03A6                     l2702:	
  2490                           
  2491                           ;DS18B20.c: 17: k = 1;
  2492  03A6  01C5               	clrf	Reset@k
  2493  03A7  0AC5               	incf	Reset@k,f
  2494  03A8                     l5829:	
  2495                           
  2496                           ;DS18B20.c: 18: }
  2497                           ;DS18B20.c: 19: i=31;while(i>0){i--;}
  2498  03A8  301F               	movlw	31
  2499  03A9  00C6               	movwf	Reset@i
  2500  03AA  01C7               	clrf	Reset@i+1
  2501  03AB                     l5833:	
  2502  03AB  0847               	movf	Reset@i+1,w
  2503  03AC  0446               	iorwf	Reset@i,w
  2504  03AD  1903               	btfsc	3,2
  2505  03AE  2BB6               	goto	l5835
  2506  03AF  3001               	movlw	1
  2507  03B0  02C6               	subwf	Reset@i,f
  2508  03B1  3000               	movlw	0
  2509  03B2  1C03               	skipc
  2510  03B3  03C7               	decf	Reset@i+1,f
  2511  03B4  02C7               	subwf	Reset@i+1,f
  2512  03B5  2BAB               	goto	l5833
  2513  03B6                     l5835:	
  2514                           
  2515                           ;DS18B20.c: 20: return k;
  2516  03B6  0845               	movf	Reset@k,w
  2517  03B7  0008               	return
  2518  03B8                     __end_of_Reset:	
  2519  03B8                     __ptext1064:	
  2520 ;; =============== function _DataHandle ends ============
  2521                           
  2522                           
  2523 ;; *************** function _ReadByte *****************
  2524 ;; Defined at:
  2525 ;;		line 47 in file "../DS18B20.c"
  2526 ;; Parameters:    Size  Location     Type
  2527 ;;		None
  2528 ;; Auto vars:     Size  Location     Type
  2529 ;;  i               2    0[BANK0 ] unsigned int 
  2530 ;;  j               1    3[BANK0 ] unsigned char 
  2531 ;;  buf             1    2[BANK0 ] unsigned char 
  2532 ;; Return value:  Size  Location     Type
  2533 ;;                  1    wreg      unsigned char 
  2534 ;; Registers used:
  2535 ;;		wreg, status,2, status,0
  2536 ;; Tracked objects:
  2537 ;;		On entry : 60/0
  2538 ;;		On exit  : 60/0
  2539 ;;		Unchanged: 0/0
  2540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2541 ;;      Params:         0       0       0       0       0
  2542 ;;      Locals:         0       4       0       0       0
  2543 ;;      Temps:          0       0       0       0       0
  2544 ;;      Totals:         0       4       0       0       0
  2545 ;;Total ram usage:        4 bytes
  2546 ;; Hardware stack levels used:    1
  2547 ;; Hardware stack levels required when called:    2
  2548 ;; This function calls:
  2549 ;;		Nothing
  2550 ;; This function is called by:
  2551 ;;		_DS18B20ReadFlash
  2552 ;; This function uses a non-reentrant model
  2553 ;;
  2554  03B8                     _ReadByte:	
  2555                           
  2556                           ;DS18B20.c: 48: unsigned int i;
  2557                           ;DS18B20.c: 49: unsigned char j,buf = 0;
  2558                           
  2559                           ; Regs used in _ReadByte: [wreg+status,2+status,0]
  2560  03B8  01C7               	clrf	ReadByte@buf
  2561                           
  2562                           ;DS18B20.c: 50: for(j=1; j<=8; j++)
  2563  03B9  01C8               	clrf	ReadByte@j
  2564  03BA  0AC8               	incf	ReadByte@j,f
  2565                           
  2566                           ;DS18B20.c: 51: {
  2567                           ;DS18B20.c: 52: buf = buf >> 1;
  2568  03BB  1003               	clrc
  2569  03BC                     L5:	
  2570  03BC  0CC7               	rrf	ReadByte@buf,f
  2571                           
  2572                           ;DS18B20.c: 53: TRISA0 = 0;
  2573  03BD  1683               	bsf	3,5	;RP0=1, select bank1
  2574  03BE  1005               	bcf	5,0
  2575                           
  2576                           ;DS18B20.c: 54: RA0 = 0;
  2577  03BF  1283               	bcf	3,5	;RP0=0, select bank0
  2578  03C0  1005               	bcf	5,0
  2579                           
  2580                           ;DS18B20.c: 55: _nop();_nop();
  2581  03C1  0000               	nop
  2582  03C2  0000               	nop
  2583                           
  2584                           ;DS18B20.c: 56: TRISA0 = 1;
  2585  03C3  1683               	bsf	3,5	;RP0=1, select bank1
  2586  03C4  1303               	bcf	3,6	;RP1=0, select bank1
  2587  03C5  1405               	bsf	5,0
  2588                           
  2589                           ;DS18B20.c: 57: _nop();_nop();_nop();_nop();_nop();_nop();
  2590  03C6  0000               	nop
  2591  03C7  0000               	nop
  2592  03C8  0000               	nop
  2593  03C9  0000               	nop
  2594  03CA  0000               	nop
  2595  03CB  0000               	nop
  2596                           
  2597                           ;DS18B20.c: 58: if(RA0 == 1){
  2598  03CC  1283               	bcf	3,5	;RP0=0, select bank0
  2599  03CD  1303               	bcf	3,6	;RP1=0, select bank0
  2600  03CE  1805               	btfsc	5,0
  2601                           
  2602                           ;DS18B20.c: 59: buf |= 0x80;
  2603  03CF  17C7               	bsf	ReadByte@buf,7
  2604                           
  2605                           ;DS18B20.c: 60: }
  2606                           ;DS18B20.c: 61: i=4;while(i>0){i--;}
  2607  03D0  3004               	movlw	4
  2608  03D1  00C5               	movwf	ReadByte@i
  2609  03D2  01C6               	clrf	ReadByte@i+1
  2610  03D3                     l5983:	
  2611  03D3  0846               	movf	ReadByte@i+1,w
  2612  03D4  0445               	iorwf	ReadByte@i,w
  2613  03D5  1903               	btfsc	3,2
  2614  03D6  2BDC               	goto	l5985
  2615  03D7  3001               	movlw	1
  2616  03D8  02C5               	subwf	ReadByte@i,f
  2617  03D9  1C03               	skipc
  2618  03DA  03C6               	decf	ReadByte@i+1,f
  2619  03DB  2BD3               	goto	l5983
  2620  03DC                     l5985:	
  2621  03DC  3009               	movlw	9
  2622  03DD  0AC8               	incf	ReadByte@j,f
  2623  03DE  0248               	subwf	ReadByte@j,w
  2624  03DF  1C03               	skipc
  2625  03E0  2BBC               	goto	L5
  2626                           
  2627                           ;DS18B20.c: 62: }
  2628                           ;DS18B20.c: 63: return buf;
  2629  03E1  0847               	movf	ReadByte@buf,w
  2630  03E2  0008               	return
  2631  03E3                     __end_of_ReadByte:	
  2632                           
  2633                           	psect	text1063
  2634  000F                     __ptext1063:	
  2635 ;; =============== function _DS18B20Initial ends ============
  2636                           
  2637                           
  2638 ;; *************** function _DataHandle *****************
  2639 ;; Defined at:
  2640 ;;		line 152 in file "../Main.c"
  2641 ;; Parameters:    Size  Location     Type
  2642 ;;		None
  2643 ;; Auto vars:     Size  Location     Type
  2644 ;;  snNumL          2   10[BANK0 ] unsigned int 
  2645 ;;  snNumH          2    8[BANK0 ] unsigned int 
  2646 ;; Return value:  Size  Location     Type
  2647 ;;		None               void
  2648 ;; Registers used:
  2649 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2650 ;; Tracked objects:
  2651 ;;		On entry : 60/0
  2652 ;;		On exit  : 60/0
  2653 ;;		Unchanged: 0/0
  2654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2655 ;;      Params:         0       0       0       0       0
  2656 ;;      Locals:         0       4       0       0       0
  2657 ;;      Temps:          0       2       0       0       0
  2658 ;;      Totals:         0       6       0       0       0
  2659 ;;Total ram usage:        6 bytes
  2660 ;; Hardware stack levels used:    1
  2661 ;; Hardware stack levels required when called:    4
  2662 ;; This function calls:
  2663 ;;		_RelayOn
  2664 ;;		_RelayOff
  2665 ;;		_WriteEE
  2666 ;;		_ReadEE
  2667 ;;		_WriteSN
  2668 ;;		_ReadSN
  2669 ;; This function is called by:
  2670 ;;		_main
  2671 ;; This function uses a non-reentrant model
  2672 ;;
  2673  000F                     _DataHandle:	
  2674                           
  2675                           ;Main.c: 154: if(rcvCommand == 0x00){
  2676                           
  2677                           ; Regs used in _DataHandle: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2678  000F  08B8               	movf	_rcvCommand,f
  2679  0010  1D03               	skipz
  2680  0011  2827               	goto	l5997
  2681                           
  2682                           ;Main.c: 155: sndCommand = rcvCommand;
  2683  0012  0838               	movf	_rcvCommand,w
  2684  0013  00BA               	movwf	_sndCommand
  2685                           
  2686                           ;Main.c: 156: sndLength = rcvLength;
  2687  0014  0839               	movf	_rcvLength,w
  2688  0015  00BB               	movwf	_sndLength
  2689                           
  2690                           ;Main.c: 157: sndData[0] = rcvData[0];
  2691  0016  0820               	movf	_rcvData,w
  2692  0017  00BC               	movwf	_sndData
  2693                           
  2694                           ;Main.c: 158: sndData[1] = rcvData[1];
  2695  0018  0821               	movf	_rcvData+1,w
  2696  0019  00BD               	movwf	_sndData+1
  2697                           
  2698                           ;Main.c: 159: sndData[2] = rcvData[2];
  2699  001A  0822               	movf	_rcvData+2,w
  2700  001B  00BE               	movwf	_sndData+2
  2701                           
  2702                           ;Main.c: 160: sndData[3] = rcvData[3];
  2703  001C  0823               	movf	_rcvData+3,w
  2704  001D  00BF               	movwf	_sndData+3
  2705                           
  2706                           ;Main.c: 161: sndData[4] = rcvData[4];
  2707  001E  0824               	movf	_rcvData+4,w
  2708  001F  00C0               	movwf	_sndData+4
  2709                           
  2710                           ;Main.c: 162: sndData[5] = rcvData[5];
  2711  0020  0825               	movf	_rcvData+5,w
  2712  0021  00C1               	movwf	_sndData+5
  2713                           
  2714                           ;Main.c: 163: sndData[6] = rcvData[6];
  2715  0022  0826               	movf	_rcvData+6,w
  2716  0023  00C2               	movwf	_sndData+6
  2717                           
  2718                           ;Main.c: 164: sndData[7] = rcvData[7];
  2719  0024  0827               	movf	_rcvData+7,w
  2720  0025  00C3               	movwf	_sndData+7
  2721                           
  2722                           ;Main.c: 166: }else if(rcvCommand == 0x11){
  2723  0026  0008               	return
  2724  0027                     l5997:	
  2725  0027  0838               	movf	_rcvCommand,w
  2726  0028  3A11               	xorlw	17
  2727  0029  1D03               	skipz
  2728  002A  2878               	goto	l6005
  2729                           
  2730                           ; Regs used in _RelayOn: []
  2731                           
  2732                           ;Main.c: 167: RelayOn();
  2733  002B  1406               	bsf	6,0
  2734  002C  2874               	goto	l6001
  2735  002D                     l6007:	
  2736                           
  2737                           ; Regs used in _RelayOff: []
  2738                           
  2739                           ;Main.c: 172: RelayOff();
  2740  002D  1006               	bcf	6,0
  2741  002E  2874               	goto	l6001
  2742  002F                     l6015:	
  2743                           
  2744                           ;Main.c: 177: CFG_H = CFG_H & 0x7F | rcvData[0] << 7 & 0x80;
  2745  002F  0820               	movf	_rcvData,w
  2746  0030  00CB               	movwf	??_DataHandle
  2747  0031  3007               	movlw	7
  2748  0032                     u1885:	
  2749  0032  1003               	clrc
  2750  0033  0DCB               	rlf	??_DataHandle,f
  2751  0034  3EFF               	addlw	-1
  2752  0035  1D03               	skipz
  2753  0036  2832               	goto	u1885
  2754  0037  3080               	movlw	128
  2755  0038  054B               	andwf	??_DataHandle,w
  2756  0039  00CC               	movwf	??_DataHandle+1
  2757  003A  082C               	movf	_CFG_H,w
  2758  003B  397F               	andlw	127
  2759  003C  2856               	goto	L1
  2760  003D                     l6023:	
  2761                           
  2762                           ;Main.c: 182: CFG_L = CFG_L & 0x7F | rcvData[0] << 7 & 0x80;
  2763  003D  0820               	movf	_rcvData,w
  2764  003E  00CB               	movwf	??_DataHandle
  2765  003F  3007               	movlw	7
  2766  0040                     u1905:	
  2767  0040  1003               	clrc
  2768  0041  0DCB               	rlf	??_DataHandle,f
  2769  0042  3EFF               	addlw	-1
  2770  0043  1D03               	skipz
  2771  0044  2840               	goto	u1905
  2772  0045  3080               	movlw	128
  2773  0046  054B               	andwf	??_DataHandle,w
  2774  0047  00CC               	movwf	??_DataHandle+1
  2775  0048  082D               	movf	_CFG_L,w
  2776  0049  397F               	andlw	127
  2777  004A  2863               	goto	L2
  2778  004B                     l6031:	
  2779                           
  2780                           ;Main.c: 187: CFG_H = CFG_H & 0xF3 | rcvData[0] << 2 & 0x0C;
  2781  004B  0820               	movf	_rcvData,w
  2782  004C  00CB               	movwf	??_DataHandle
  2783  004D  300C               	movlw	12
  2784  004E  1003               	clrc
  2785  004F  0DCB               	rlf	??_DataHandle,f
  2786  0050  1003               	clrc
  2787  0051  0DCB               	rlf	??_DataHandle,f
  2788  0052  054B               	andwf	??_DataHandle,w
  2789  0053  00CC               	movwf	??_DataHandle+1
  2790  0054  082C               	movf	_CFG_H,w
  2791  0055  39F3               	andlw	243
  2792  0056                     L1:	
  2793  0056  044C               	iorwf	??_DataHandle+1,w
  2794  0057  286B               	goto	L3
  2795  0058                     l6039:	
  2796                           
  2797                           ;Main.c: 192: CFG_L = CFG_L & 0xF3 | rcvData[0] << 2 & 0x0C;
  2798  0058  0820               	movf	_rcvData,w
  2799  0059  00CB               	movwf	??_DataHandle
  2800  005A  300C               	movlw	12
  2801  005B  1003               	clrc
  2802  005C  0DCB               	rlf	??_DataHandle,f
  2803  005D  1003               	clrc
  2804  005E  0DCB               	rlf	??_DataHandle,f
  2805  005F  054B               	andwf	??_DataHandle,w
  2806  0060  00CC               	movwf	??_DataHandle+1
  2807  0061  082D               	movf	_CFG_L,w
  2808  0062  39F3               	andlw	243
  2809  0063                     L2:	
  2810  0063  044C               	iorwf	??_DataHandle+1,w
  2811  0064  2873               	goto	L4
  2812  0065                     l6047:	
  2813                           
  2814                           ;Main.c: 197: CFG_H = CFG_H & 0xFC | rcvData[0] & 0x03;
  2815  0065  3003               	movlw	3
  2816  0066  0520               	andwf	_rcvData,w
  2817  0067  00CB               	movwf	??_DataHandle
  2818  0068  082C               	movf	_CFG_H,w
  2819  0069  39FC               	andlw	252
  2820  006A  044B               	iorwf	??_DataHandle,w
  2821  006B                     L3:	
  2822  006B  00AC               	movwf	_CFG_H
  2823  006C  2874               	goto	l6001
  2824  006D                     l6055:	
  2825                           
  2826                           ;Main.c: 202: CFG_L = CFG_L & 0xFC | rcvData[0] & 0x03;
  2827  006D  3003               	movlw	3
  2828  006E  0520               	andwf	_rcvData,w
  2829  006F  00CB               	movwf	??_DataHandle
  2830  0070  082D               	movf	_CFG_L,w
  2831  0071  39FC               	andlw	252
  2832  0072  044B               	iorwf	??_DataHandle,w
  2833  0073                     L4:	
  2834  0073  00AD               	movwf	_CFG_L
  2835  0074                     l6001:	
  2836                           
  2837                           ;Main.c: 168: sndCommand = rcvCommand;
  2838  0074  0838               	movf	_rcvCommand,w
  2839  0075  00BA               	movwf	_sndCommand
  2840                           
  2841                           ;Main.c: 169: sndLength = 0;
  2842  0076  01BB               	clrf	_sndLength
  2843                           
  2844                           ;Main.c: 171: }else if(rcvCommand == 0x12){
  2845  0077  0008               	return
  2846  0078                     l6005:	
  2847  0078  0838               	movf	_rcvCommand,w
  2848  0079  3A12               	xorlw	18
  2849  007A  1903               	btfsc	3,2
  2850  007B  282D               	goto	l6007
  2851  007C  0838               	movf	_rcvCommand,w
  2852  007D  3A13               	xorlw	19
  2853  007E  1903               	btfsc	3,2
  2854  007F  282F               	goto	l6015
  2855  0080  0838               	movf	_rcvCommand,w
  2856  0081  3A14               	xorlw	20
  2857  0082  1903               	btfsc	3,2
  2858  0083  283D               	goto	l6023
  2859  0084  0838               	movf	_rcvCommand,w
  2860  0085  3A15               	xorlw	21
  2861  0086  1903               	btfsc	3,2
  2862  0087  284B               	goto	l6031
  2863  0088  0838               	movf	_rcvCommand,w
  2864  0089  3A16               	xorlw	22
  2865  008A  1903               	btfsc	3,2
  2866  008B  2858               	goto	l6039
  2867  008C  0838               	movf	_rcvCommand,w
  2868  008D  3A17               	xorlw	23
  2869  008E  1903               	btfsc	3,2
  2870  008F  2865               	goto	l6047
  2871  0090  0838               	movf	_rcvCommand,w
  2872  0091  3A18               	xorlw	24
  2873  0092  1903               	btfsc	3,2
  2874  0093  286D               	goto	l6055
  2875  0094  0838               	movf	_rcvCommand,w
  2876  0095  3A21               	xorlw	33
  2877  0096  1D03               	skipz
  2878  0097  28A3               	goto	l6065
  2879                           
  2880                           ;Main.c: 207: sndCommand = rcvCommand;
  2881  0098  0838               	movf	_rcvCommand,w
  2882  0099  00BA               	movwf	_sndCommand
  2883                           
  2884                           ;Main.c: 208: sndLength = 3;
  2885  009A  3003               	movlw	3
  2886  009B  00BB               	movwf	_sndLength
  2887                           
  2888                           ;Main.c: 209: sndData[0] = H_M;
  2889  009C  082F               	movf	_H_M,w
  2890  009D  00BC               	movwf	_sndData
  2891                           
  2892                           ;Main.c: 210: sndData[1] = H_L;
  2893  009E  082E               	movf	_H_L,w
  2894  009F  00BD               	movwf	_sndData+1
  2895                           
  2896                           ;Main.c: 211: sndData[2] = H_S;
  2897  00A0  0830               	movf	_H_S,w
  2898  00A1  00BE               	movwf	_sndData+2
  2899                           
  2900                           ;Main.c: 213: }else if(rcvCommand == 0x22){
  2901  00A2  0008               	return
  2902  00A3                     l6065:	
  2903  00A3  0838               	movf	_rcvCommand,w
  2904  00A4  3A22               	xorlw	34
  2905  00A5  1D03               	skipz
  2906  00A6  28B2               	goto	l6069
  2907                           
  2908                           ;Main.c: 214: sndCommand = rcvCommand;
  2909  00A7  0838               	movf	_rcvCommand,w
  2910  00A8  00BA               	movwf	_sndCommand
  2911                           
  2912                           ;Main.c: 215: sndLength = 3;
  2913  00A9  3003               	movlw	3
  2914  00AA  00BB               	movwf	_sndLength
  2915                           
  2916                           ;Main.c: 216: sndData[0] = L_M;
  2917  00AB  0832               	movf	_L_M,w
  2918  00AC  00BC               	movwf	_sndData
  2919                           
  2920                           ;Main.c: 217: sndData[1] = L_L;
  2921  00AD  0831               	movf	_L_L,w
  2922  00AE  00BD               	movwf	_sndData+1
  2923                           
  2924                           ;Main.c: 218: sndData[2] = L_S;
  2925  00AF  0833               	movf	_L_S,w
  2926  00B0  00BE               	movwf	_sndData+2
  2927                           
  2928                           ;Main.c: 220: }else if(rcvCommand == 0x23){
  2929  00B1  0008               	return
  2930  00B2                     l6069:	
  2931  00B2  0838               	movf	_rcvCommand,w
  2932  00B3  3A23               	xorlw	35
  2933  00B4  1D03               	skipz
  2934  00B5  28BF               	goto	l6073
  2935                           
  2936                           ;Main.c: 221: sndCommand = rcvCommand;
  2937  00B6  0838               	movf	_rcvCommand,w
  2938  00B7  00BA               	movwf	_sndCommand
  2939                           
  2940                           ;Main.c: 222: sndLength = 2;
  2941  00B8  3002               	movlw	2
  2942  00B9  00BB               	movwf	_sndLength
  2943                           
  2944                           ;Main.c: 223: sndData[0] = T_M;
  2945  00BA  0836               	movf	_T_M,w
  2946  00BB  00BC               	movwf	_sndData
  2947                           
  2948                           ;Main.c: 224: sndData[1] = T_L;
  2949  00BC  0834               	movf	_T_L,w
  2950  00BD  00BD               	movwf	_sndData+1
  2951                           
  2952                           ;Main.c: 226: }else if(rcvCommand == 0x24){
  2953  00BE  0008               	return
  2954  00BF                     l6073:	
  2955  00BF  0838               	movf	_rcvCommand,w
  2956  00C0  3A24               	xorlw	36
  2957  00C1  1D03               	skipz
  2958  00C2  28D8               	goto	l6077
  2959                           
  2960                           ;Main.c: 227: sndCommand = rcvCommand;
  2961  00C3  0838               	movf	_rcvCommand,w
  2962  00C4  00BA               	movwf	_sndCommand
  2963                           
  2964                           ;Main.c: 228: sndLength = 8;
  2965  00C5  3008               	movlw	8
  2966  00C6  00BB               	movwf	_sndLength
  2967                           
  2968                           ;Main.c: 229: sndData[0] = H_M;
  2969  00C7  082F               	movf	_H_M,w
  2970  00C8  00BC               	movwf	_sndData
  2971                           
  2972                           ;Main.c: 230: sndData[1] = H_L;
  2973  00C9  082E               	movf	_H_L,w
  2974  00CA  00BD               	movwf	_sndData+1
  2975                           
  2976                           ;Main.c: 231: sndData[2] = H_S;
  2977  00CB  0830               	movf	_H_S,w
  2978  00CC  00BE               	movwf	_sndData+2
  2979                           
  2980                           ;Main.c: 232: sndData[3] = L_M;
  2981  00CD  0832               	movf	_L_M,w
  2982  00CE  00BF               	movwf	_sndData+3
  2983                           
  2984                           ;Main.c: 233: sndData[4] = L_L;
  2985  00CF  0831               	movf	_L_L,w
  2986  00D0  00C0               	movwf	_sndData+4
  2987                           
  2988                           ;Main.c: 234: sndData[5] = L_S;
  2989  00D1  0833               	movf	_L_S,w
  2990  00D2  00C1               	movwf	_sndData+5
  2991                           
  2992                           ;Main.c: 235: sndData[6] = T_M;
  2993  00D3  0836               	movf	_T_M,w
  2994  00D4  00C2               	movwf	_sndData+6
  2995                           
  2996                           ;Main.c: 236: sndData[7] = T_L;
  2997  00D5  0834               	movf	_T_L,w
  2998  00D6  00C3               	movwf	_sndData+7
  2999                           
  3000                           ;Main.c: 238: }else if(rcvCommand == 0x31){
  3001  00D7  0008               	return
  3002  00D8                     l6077:	
  3003  00D8  0838               	movf	_rcvCommand,w
  3004  00D9  3A31               	xorlw	49
  3005  00DA  1D03               	skipz
  3006  00DB  28EB               	goto	l6089
  3007                           
  3008                           ;Main.c: 239: WriteEE(rcvData[0], rcvData[1]);
  3009  00DC  0821               	movf	_rcvData+1,w
  3010  00DD  00C5               	movwf	?_WriteEE
  3011  00DE  0820               	movf	_rcvData,w
  3012  00DF  2169               	fcall	_WriteEE
  3013                           
  3014                           ;Main.c: 240: sndCommand = rcvCommand;
  3015  00E0  1283               	bcf	3,5	;RP0=0, select bank0
  3016  00E1  1303               	bcf	3,6	;RP1=0, select bank0
  3017  00E2  0838               	movf	_rcvCommand,w
  3018  00E3  00BA               	movwf	_sndCommand
  3019                           
  3020                           ;Main.c: 241: sndLength = 2;
  3021  00E4  3002               	movlw	2
  3022  00E5  00BB               	movwf	_sndLength
  3023                           
  3024                           ;Main.c: 242: sndData[0] = rcvData[0];
  3025  00E6  0820               	movf	_rcvData,w
  3026  00E7  00BC               	movwf	_sndData
  3027                           
  3028                           ;Main.c: 243: sndData[1] = rcvData[1];
  3029  00E8  0821               	movf	_rcvData+1,w
  3030  00E9  00BD               	movwf	_sndData+1
  3031                           
  3032                           ;Main.c: 244: }else if(rcvCommand == 0x32) {
  3033  00EA  0008               	return
  3034  00EB                     l6089:	
  3035  00EB  0838               	movf	_rcvCommand,w
  3036  00EC  3A32               	xorlw	50
  3037  00ED  1D03               	skipz
  3038  00EE  28F9               	goto	l6095
  3039                           
  3040                           ;Main.c: 245: sndCommand = rcvCommand;
  3041  00EF  0838               	movf	_rcvCommand,w
  3042  00F0  00BA               	movwf	_sndCommand
  3043                           
  3044                           ;Main.c: 246: sndLength = 2;
  3045  00F1  3002               	movlw	2
  3046  00F2  00BB               	movwf	_sndLength
  3047                           
  3048                           ;Main.c: 247: sndData[0] = rcvData[0];
  3049  00F3  0820               	movf	_rcvData,w
  3050  00F4  00BC               	movwf	_sndData
  3051                           
  3052                           ;Main.c: 248: sndData[1] = ReadEE(rcvData[0]);
  3053  00F5  0820               	movf	_rcvData,w
  3054  00F6  2194               	fcall	_ReadEE
  3055  00F7  00BD               	movwf	_sndData+1
  3056                           
  3057                           ;Main.c: 249: }else if(rcvCommand == 0x33){
  3058  00F8  0008               	return
  3059  00F9                     l6095:	
  3060  00F9  0838               	movf	_rcvCommand,w
  3061  00FA  3A33               	xorlw	51
  3062  00FB  1D03               	skipz
  3063  00FC  2921               	goto	l6115
  3064                           
  3065                           ;Main.c: 250: if(rcvLength == 0x04)
  3066  00FD  0839               	movf	_rcvLength,w
  3067  00FE  3A04               	xorlw	4
  3068  00FF  1D03               	skipz
  3069  0100  0008               	return
  3070                           
  3071                           ;Main.c: 251: {
  3072                           ;Main.c: 252: unsigned int snNumH, snNumL;
  3073                           ;Main.c: 253: snNumH = rcvData[0]<<8|rcvData[1];
  3074  0101  0820               	movf	_rcvData,w
  3075  0102  00CE               	movwf	DataHandle@snNumH+1
  3076  0103  0821               	movf	_rcvData+1,w
  3077  0104  00CD               	movwf	DataHandle@snNumH
  3078                           
  3079                           ;Main.c: 254: snNumL = rcvData[2]<<8|rcvData[3];
  3080  0105  0822               	movf	_rcvData+2,w
  3081  0106  00D0               	movwf	DataHandle@snNumL+1
  3082  0107  0823               	movf	_rcvData+3,w
  3083  0108  00CF               	movwf	DataHandle@snNumL
  3084                           
  3085                           ;Main.c: 255: WriteSN(snNumH, snNumL);
  3086  0109  084E               	movf	DataHandle@snNumH+1,w
  3087  010A  00C8               	movwf	?_WriteSN+1
  3088  010B  084D               	movf	DataHandle@snNumH,w
  3089  010C  00C7               	movwf	?_WriteSN
  3090  010D  0850               	movf	DataHandle@snNumL+1,w
  3091  010E  00CA               	movwf	?_WriteSN+3
  3092  010F  084F               	movf	DataHandle@snNumL,w
  3093  0110  00C9               	movwf	?_WriteSN+2
  3094  0111  212B               	fcall	_WriteSN
  3095                           
  3096                           ;Main.c: 257: sndCommand = rcvCommand;
  3097  0112  1283               	bcf	3,5	;RP0=0, select bank0
  3098  0113  1303               	bcf	3,6	;RP1=0, select bank0
  3099  0114  0838               	movf	_rcvCommand,w
  3100  0115  00BA               	movwf	_sndCommand
  3101                           
  3102                           ;Main.c: 258: sndLength = rcvLength;
  3103  0116  0839               	movf	_rcvLength,w
  3104  0117  00BB               	movwf	_sndLength
  3105                           
  3106                           ;Main.c: 259: sndData[0] = rcvData[0];
  3107  0118  0820               	movf	_rcvData,w
  3108  0119  00BC               	movwf	_sndData
  3109                           
  3110                           ;Main.c: 260: sndData[1] = rcvData[1];
  3111  011A  0821               	movf	_rcvData+1,w
  3112  011B  00BD               	movwf	_sndData+1
  3113                           
  3114                           ;Main.c: 261: sndData[2] = rcvData[2];
  3115  011C  0822               	movf	_rcvData+2,w
  3116  011D  00BE               	movwf	_sndData+2
  3117                           
  3118                           ;Main.c: 262: sndData[3] = rcvData[3];
  3119  011E  0823               	movf	_rcvData+3,w
  3120  011F  00BF               	movwf	_sndData+3
  3121  0120  0008               	return
  3122  0121                     l6115:	
  3123  0121  0838               	movf	_rcvCommand,w
  3124  0122  3A34               	xorlw	52
  3125  0123  1D03               	skipz
  3126  0124  2874               	goto	l6001
  3127                           
  3128                           ;Main.c: 265: sndCommand = rcvCommand;
  3129  0125  0838               	movf	_rcvCommand,w
  3130  0126  00BA               	movwf	_sndCommand
  3131                           
  3132                           ;Main.c: 266: sndLength = 8;
  3133  0127  3008               	movlw	8
  3134  0128  00BB               	movwf	_sndLength
  3135                           
  3136                           ;Main.c: 267: ReadSN(sndData);
  3137  0129  303C               	movlw	_sndData& (0+255)
  3138  012A  2983               	ljmp	_ReadSN
  3139  012B                     __end_of_DataHandle:	
  3140  012B                     __ptext1070:	
  3141 ;; =============== function _ReadSN ends ============
  3142                           
  3143                           
  3144 ;; *************** function _WriteSN *****************
  3145 ;; Defined at:
  3146 ;;		line 38 in file "../eeprom.c"
  3147 ;; Parameters:    Size  Location     Type
  3148 ;;  numH            2    2[BANK0 ] unsigned int 
  3149 ;;  numL            2    4[BANK0 ] unsigned int 
  3150 ;; Auto vars:     Size  Location     Type
  3151 ;;		None
  3152 ;; Return value:  Size  Location     Type
  3153 ;;		None               void
  3154 ;; Registers used:
  3155 ;;		wreg, status,2, status,0, pclath, cstack
  3156 ;; Tracked objects:
  3157 ;;		On entry : 60/0
  3158 ;;		On exit  : 0/0
  3159 ;;		Unchanged: 0/0
  3160 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3161 ;;      Params:         0       4       0       0       0
  3162 ;;      Locals:         0       0       0       0       0
  3163 ;;      Temps:          0       0       0       0       0
  3164 ;;      Totals:         0       4       0       0       0
  3165 ;;Total ram usage:        4 bytes
  3166 ;; Hardware stack levels used:    1
  3167 ;; Hardware stack levels required when called:    3
  3168 ;; This function calls:
  3169 ;;		_WriteEE
  3170 ;; This function is called by:
  3171 ;;		_DataHandle
  3172 ;; This function uses a non-reentrant model
  3173 ;;
  3174  012B                     _WriteSN:	
  3175                           
  3176                           ;eeprom.c: 40: WriteEE(0x00, 0x57);
  3177                           
  3178                           ; Regs used in _WriteSN: [wreg+status,2+status,0+pclath+cstack]
  3179  012B  3057               	movlw	87
  3180  012C  00C5               	movwf	?_WriteEE
  3181  012D  3000               	movlw	0
  3182  012E  2169  118A         	fcall	_WriteEE
  3183                           
  3184                           ;eeprom.c: 41: _nop();
  3185  0130  0000               	nop
  3186                           
  3187                           ;eeprom.c: 42: WriteEE(0x01, 0x48);
  3188  0131  3048               	movlw	72
  3189  0132  1283               	bcf	3,5	;RP0=0, select bank0
  3190  0133  1303               	bcf	3,6	;RP1=0, select bank0
  3191  0134  00C5               	movwf	?_WriteEE
  3192  0135  3001               	movlw	1
  3193  0136  2169  118A         	fcall	_WriteEE
  3194                           
  3195                           ;eeprom.c: 43: _nop();
  3196  0138  0000               	nop
  3197                           
  3198                           ;eeprom.c: 44: WriteEE(0x02, 0x53);
  3199  0139  3053               	movlw	83
  3200  013A  1283               	bcf	3,5	;RP0=0, select bank0
  3201  013B  1303               	bcf	3,6	;RP1=0, select bank0
  3202  013C  00C5               	movwf	?_WriteEE
  3203  013D  3002               	movlw	2
  3204  013E  2169  118A         	fcall	_WriteEE
  3205                           
  3206                           ;eeprom.c: 45: _nop();
  3207  0140  0000               	nop
  3208                           
  3209                           ;eeprom.c: 46: WriteEE(0x03, 0x45);
  3210  0141  3045               	movlw	69
  3211  0142  1283               	bcf	3,5	;RP0=0, select bank0
  3212  0143  1303               	bcf	3,6	;RP1=0, select bank0
  3213  0144  00C5               	movwf	?_WriteEE
  3214  0145  3003               	movlw	3
  3215  0146  2169  118A         	fcall	_WriteEE
  3216                           
  3217                           ;eeprom.c: 47: _nop();
  3218  0148  0000               	nop
  3219                           
  3220                           ;eeprom.c: 48: WriteEE(0x04, (numH>>8)&0xff);
  3221  0149  1283               	bcf	3,5	;RP0=0, select bank0
  3222  014A  1303               	bcf	3,6	;RP1=0, select bank0
  3223  014B  0848               	movf	WriteSN@numH+1,w
  3224  014C  00C5               	movwf	?_WriteEE
  3225  014D  3004               	movlw	4
  3226  014E  2169  118A         	fcall	_WriteEE
  3227                           
  3228                           ;eeprom.c: 49: _nop();
  3229  0150  0000               	nop
  3230                           
  3231                           ;eeprom.c: 50: WriteEE(0x05, numH&0xff);
  3232  0151  1283               	bcf	3,5	;RP0=0, select bank0
  3233  0152  1303               	bcf	3,6	;RP1=0, select bank0
  3234  0153  0847               	movf	WriteSN@numH,w
  3235  0154  00C5               	movwf	?_WriteEE
  3236  0155  3005               	movlw	5
  3237  0156  2169  118A         	fcall	_WriteEE
  3238                           
  3239                           ;eeprom.c: 51: _nop();
  3240  0158  0000               	nop
  3241                           
  3242                           ;eeprom.c: 52: WriteEE(0x06, (numL>>8)&0xff);
  3243  0159  1283               	bcf	3,5	;RP0=0, select bank0
  3244  015A  1303               	bcf	3,6	;RP1=0, select bank0
  3245  015B  084A               	movf	WriteSN@numL+1,w
  3246  015C  00C5               	movwf	?_WriteEE
  3247  015D  3006               	movlw	6
  3248  015E  2169  118A         	fcall	_WriteEE
  3249                           
  3250                           ;eeprom.c: 53: _nop();
  3251  0160  0000               	nop
  3252                           
  3253                           ;eeprom.c: 54: WriteEE(0x07, numL&0xff);
  3254  0161  1283               	bcf	3,5	;RP0=0, select bank0
  3255  0162  1303               	bcf	3,6	;RP1=0, select bank0
  3256  0163  0849               	movf	WriteSN@numL,w
  3257  0164  00C5               	movwf	?_WriteEE
  3258  0165  3007               	movlw	7
  3259  0166  2169               	fcall	_WriteEE
  3260                           
  3261                           ;eeprom.c: 55: _nop();
  3262  0167  0000               	nop
  3263  0168  0008               	return
  3264  0169                     __end_of_WriteSN:	
  3265  0169                     __ptext1076:	
  3266 ;; =============== function _ReadEE ends ============
  3267                           
  3268                           
  3269 ;; *************** function _WriteEE *****************
  3270 ;; Defined at:
  3271 ;;		line 6 in file "../eeprom.c"
  3272 ;; Parameters:    Size  Location     Type
  3273 ;;  addr            1    wreg     unsigned char 
  3274 ;;  data            1    0[BANK0 ] unsigned char 
  3275 ;; Auto vars:     Size  Location     Type
  3276 ;;  addr            1    1[BANK0 ] unsigned char 
  3277 ;; Return value:  Size  Location     Type
  3278 ;;		None               void
  3279 ;; Registers used:
  3280 ;;		wreg
  3281 ;; Tracked objects:
  3282 ;;		On entry : 60/0
  3283 ;;		On exit  : 60/60
  3284 ;;		Unchanged: FFF9F/0
  3285 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3286 ;;      Params:         0       1       0       0       0
  3287 ;;      Locals:         0       1       0       0       0
  3288 ;;      Temps:          0       0       0       0       0
  3289 ;;      Totals:         0       2       0       0       0
  3290 ;;Total ram usage:        2 bytes
  3291 ;; Hardware stack levels used:    1
  3292 ;; Hardware stack levels required when called:    2
  3293 ;; This function calls:
  3294 ;;		Nothing
  3295 ;; This function is called by:
  3296 ;;		_DataHandle
  3297 ;;		_WriteSN
  3298 ;; This function uses a non-reentrant model
  3299 ;;
  3300  0169                     _WriteEE:	
  3301                           
  3302                           ; Regs used in _WriteEE: [wreg]
  3303                           ;WriteEE@addr stored from wreg
  3304  0169  00C6               	movwf	WriteEE@addr
  3305  016A                     l3355:	
  3306                           ;eeprom.c: 7: do{}
  3307                           
  3308                           
  3309                           ;eeprom.c: 8: while(WR == 1);
  3310  016A  1683               	bsf	3,5	;RP0=1, select bank3
  3311  016B  1703               	bsf	3,6	;RP1=1, select bank3
  3312  016C  188C               	btfsc	12,1
  3313  016D  296A               	goto	l3355
  3314                           
  3315                           ;eeprom.c: 10: EEADR = addr;
  3316  016E  1283               	bcf	3,5	;RP0=0, select bank0
  3317  016F  1303               	bcf	3,6	;RP1=0, select bank0
  3318  0170  0846               	movf	WriteEE@addr,w
  3319  0171  1703               	bsf	3,6	;RP1=1, select bank2
  3320  0172  008D               	movwf	13	;volatile
  3321                           
  3322                           ;eeprom.c: 11: EEDATA = data;
  3323  0173  1303               	bcf	3,6	;RP1=0, select bank0
  3324  0174  0845               	movf	WriteEE@data,w
  3325  0175  1703               	bsf	3,6	;RP1=1, select bank2
  3326  0176  008C               	movwf	12	;volatile
  3327                           
  3328                           ;eeprom.c: 12: EEPGD = 0;
  3329  0177  1683               	bsf	3,5	;RP0=1, select bank3
  3330  0178  3055               	movlw	85
  3331  0179  138C               	bcf	12,7
  3332  017A  150C               	bsf	12,2
  3333                           
  3334                           ;eeprom.c: 14: EECON2 = 0x55;
  3335  017B  008D               	movwf	13	;volatile
  3336                           
  3337                           ;eeprom.c: 15: EECON2 = 0xaa;
  3338  017C  30AA               	movlw	170
  3339  017D  008D               	movwf	13	;volatile
  3340                           
  3341                           ;eeprom.c: 16: WR = 1;
  3342  017E  148C               	bsf	12,1
  3343  017F                     l5795:	
  3344                           
  3345                           ;eeprom.c: 18: while(WR == 1);
  3346  017F  188C               	btfsc	12,1
  3347  0180  297F               	goto	l5795
  3348                           
  3349                           ;eeprom.c: 19: WREN = 0;
  3350  0181  110C               	bcf	12,2
  3351  0182  0008               	return
  3352  0183                     __end_of_WriteEE:	
  3353  0183                     __ptext1069:	
  3354 ;; =============== function _SendService ends ============
  3355                           
  3356                           
  3357 ;; *************** function _ReadSN *****************
  3358 ;; Defined at:
  3359 ;;		line 59 in file "../eeprom.c"
  3360 ;; Parameters:    Size  Location     Type
  3361 ;;  data            1    wreg     PTR unsigned char 
  3362 ;;		 -> sndData(8), 
  3363 ;; Auto vars:     Size  Location     Type
  3364 ;;  data            1    3[BANK0 ] PTR unsigned char 
  3365 ;;		 -> sndData(8), 
  3366 ;;  i               1    4[BANK0 ] unsigned char 
  3367 ;; Return value:  Size  Location     Type
  3368 ;;		None               void
  3369 ;; Registers used:
  3370 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3371 ;; Tracked objects:
  3372 ;;		On entry : 60/0
  3373 ;;		On exit  : 160/0
  3374 ;;		Unchanged: FFE9F/0
  3375 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3376 ;;      Params:         0       0       0       0       0
  3377 ;;      Locals:         0       2       0       0       0
  3378 ;;      Temps:          0       1       0       0       0
  3379 ;;      Totals:         0       3       0       0       0
  3380 ;;Total ram usage:        3 bytes
  3381 ;; Hardware stack levels used:    1
  3382 ;; Hardware stack levels required when called:    3
  3383 ;; This function calls:
  3384 ;;		_ReadEE
  3385 ;; This function is called by:
  3386 ;;		_DataHandle
  3387 ;; This function uses a non-reentrant model
  3388 ;;
  3389  0183                     _ReadSN:	
  3390                           
  3391                           ; Regs used in _ReadSN: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3392                           ;ReadSN@data stored from wreg
  3393  0183  00C8               	movwf	ReadSN@data
  3394                           
  3395                           ;eeprom.c: 60: unsigned char i;
  3396                           ;eeprom.c: 61: for(i=0;i<8;i++)
  3397  0184  01C9               	clrf	ReadSN@i
  3398  0185                     l5891:	
  3399                           
  3400                           ;eeprom.c: 62: data[i] = ReadEE(i);
  3401  0185  0849               	movf	ReadSN@i,w
  3402  0186  0748               	addwf	ReadSN@data,w
  3403  0187  00C7               	movwf	??_ReadSN
  3404  0188  0084               	movwf	4
  3405  0189  0849               	movf	ReadSN@i,w
  3406  018A  2194  118A         	fcall	_ReadEE
  3407  018C  1383               	bcf	3,7	;select IRP bank0
  3408  018D  0080               	movwf	0
  3409  018E  3008               	movlw	8
  3410  018F  0AC9               	incf	ReadSN@i,f
  3411  0190  0249               	subwf	ReadSN@i,w
  3412  0191  1803               	btfsc	3,0
  3413  0192  0008               	return
  3414  0193  2985               	goto	l5891
  3415  0194                     __end_of_ReadSN:	
  3416  0194                     __ptext1075:	
  3417 ;; =============== function _putch ends ============
  3418                           
  3419                           
  3420 ;; *************** function _ReadEE *****************
  3421 ;; Defined at:
  3422 ;;		line 24 in file "../eeprom.c"
  3423 ;; Parameters:    Size  Location     Type
  3424 ;;  addr            1    wreg     unsigned char 
  3425 ;; Auto vars:     Size  Location     Type
  3426 ;;  addr            1    0[BANK0 ] unsigned char 
  3427 ;;  num             1    1[BANK0 ] unsigned char 
  3428 ;; Return value:  Size  Location     Type
  3429 ;;                  1    wreg      unsigned char 
  3430 ;; Registers used:
  3431 ;;		wreg
  3432 ;; Tracked objects:
  3433 ;;		On entry : 60/0
  3434 ;;		On exit  : 60/0
  3435 ;;		Unchanged: FFF9F/0
  3436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3437 ;;      Params:         0       0       0       0       0
  3438 ;;      Locals:         0       2       0       0       0
  3439 ;;      Temps:          0       0       0       0       0
  3440 ;;      Totals:         0       2       0       0       0
  3441 ;;Total ram usage:        2 bytes
  3442 ;; Hardware stack levels used:    1
  3443 ;; Hardware stack levels required when called:    2
  3444 ;; This function calls:
  3445 ;;		Nothing
  3446 ;; This function is called by:
  3447 ;;		_DataHandle
  3448 ;;		_ReadSN
  3449 ;; This function uses a non-reentrant model
  3450 ;;
  3451  0194                     _ReadEE:	
  3452                           
  3453                           ; Regs used in _ReadEE: [wreg]
  3454                           ;ReadEE@addr stored from wreg
  3455  0194  00C5               	movwf	ReadEE@addr
  3456                           
  3457                           ;eeprom.c: 28: EEADR = addr;
  3458                           
  3459                           ;eeprom.c: 27: while(RD == -1);
  3460  0195  0845               	movf	ReadEE@addr,w
  3461  0196  1703               	bsf	3,6	;RP1=1, select bank2
  3462  0197  008D               	movwf	13	;volatile
  3463                           
  3464                           ;eeprom.c: 29: EEPGD = 0;
  3465  0198  1683               	bsf	3,5	;RP0=1, select bank3
  3466  0199  138C               	bcf	12,7
  3467                           
  3468                           ;eeprom.c: 30: RD = 1;
  3469  019A  140C               	bsf	12,0
  3470  019B                     l5803:	
  3471                           
  3472                           ;eeprom.c: 32: while(RD == 1);
  3473  019B  180C               	btfsc	12,0
  3474  019C  299B               	goto	l5803
  3475                           
  3476                           ;eeprom.c: 33: num = EEDATA;
  3477  019D  1283               	bcf	3,5	;RP0=0, select bank2
  3478  019E  080C               	movf	12,w	;volatile
  3479  019F  1303               	bcf	3,6	;RP1=0, select bank0
  3480  01A0  00C6               	movwf	ReadEE@num
  3481                           
  3482                           ;eeprom.c: 34: return num;
  3483  01A1  0008               	return
  3484  01A2                     __end_of_ReadEE:	
  3485                           
  3486                           	psect	text1068
  3487  04E6                     __ptext1068:	
  3488 ;; =============== function _i2c_WaitForSCL ends ============
  3489                           
  3490                           
  3491 ;; *************** function _SendService *****************
  3492 ;; Defined at:
  3493 ;;		line 274 in file "../Main.c"
  3494 ;; Parameters:    Size  Location     Type
  3495 ;;		None
  3496 ;; Auto vars:     Size  Location     Type
  3497 ;;		None
  3498 ;; Return value:  Size  Location     Type
  3499 ;;		None               void
  3500 ;; Registers used:
  3501 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3502 ;; Tracked objects:
  3503 ;;		On entry : 60/0
  3504 ;;		On exit  : 60/0
  3505 ;;		Unchanged: FFE9F/0
  3506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3507 ;;      Params:         0       0       0       0       0
  3508 ;;      Locals:         0       0       0       0       0
  3509 ;;      Temps:          0       0       0       0       0
  3510 ;;      Totals:         0       0       0       0       0
  3511 ;;Total ram usage:        0 bytes
  3512 ;; Hardware stack levels used:    1
  3513 ;; Hardware stack levels required when called:    3
  3514 ;; This function calls:
  3515 ;;		_putch
  3516 ;; This function is called by:
  3517 ;;		_main
  3518 ;; This function uses a non-reentrant model
  3519 ;;
  3520  04E6                     _SendService:	
  3521                           
  3522                           ;Main.c: 275: sndCRC = 0x40 ^ unitAddr ^ sndCommand ^ sndLength;
  3523                           
  3524                           ; Regs used in _SendService: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3525  04E6  0844               	movf	_unitAddr,w
  3526  04E7  063A               	xorwf	_sndCommand,w
  3527  04E8  063B               	xorwf	_sndLength,w
  3528  04E9  3A40               	xorlw	64
  3529  04EA  00FA               	movwf	_sndCRC
  3530                           
  3531                           ;Main.c: 276: putch(0x40);
  3532  04EB  3040               	movlw	64
  3533  04EC  250F  118A         	fcall	_putch
  3534                           
  3535                           ;Main.c: 277: putch(unitAddr);
  3536  04EE  0844               	movf	_unitAddr,w
  3537  04EF  250F  118A         	fcall	_putch
  3538                           
  3539                           ;Main.c: 278: putch(sndCommand);
  3540  04F1  083A               	movf	_sndCommand,w
  3541  04F2  250F  118A         	fcall	_putch
  3542                           
  3543                           ;Main.c: 279: putch(sndLength);
  3544  04F4  083B               	movf	_sndLength,w
  3545  04F5  250F  118A         	fcall	_putch
  3546                           
  3547                           ;Main.c: 280: for(sndCount=0; sndCount < sndLength; sndCount++){
  3548  04F7  01FB               	clrf	_sndCount
  3549  04F8                     l5915:	
  3550  04F8  083B               	movf	_sndLength,w
  3551  04F9  027B               	subwf	_sndCount,w
  3552  04FA  1803               	btfsc	3,0
  3553  04FB  2D0A               	goto	l5917
  3554                           
  3555                           ;Main.c: 281: putch(sndData[sndCount]);
  3556  04FC  087B               	movf	_sndCount,w
  3557  04FD  3E3C               	addlw	_sndData& (0+255)
  3558  04FE  0084               	movwf	4
  3559  04FF  1383               	bcf	3,7	;select IRP bank0
  3560  0500  0800               	movf	0,w
  3561  0501  250F  118A         	fcall	_putch
  3562                           
  3563                           ;Main.c: 282: sndCRC ^= sndData[sndCount];
  3564  0503  087B               	movf	_sndCount,w
  3565  0504  3E3C               	addlw	_sndData& (0+255)
  3566  0505  0084               	movwf	4
  3567  0506  0800               	movf	0,w
  3568  0507  06FA               	xorwf	_sndCRC,f
  3569  0508  0AFB               	incf	_sndCount,f
  3570  0509  2CF8               	goto	l5915
  3571  050A                     l5917:	
  3572                           
  3573                           ;Main.c: 283: }
  3574                           ;Main.c: 284: putch(sndCRC);
  3575  050A  087A               	movf	_sndCRC,w
  3576  050B  250F  118A         	fcall	_putch
  3577                           
  3578                           ;Main.c: 285: putch(0x0A);
  3579  050D  300A               	movlw	10
  3580  050E  2D0F               	ljmp	_putch
  3581  050F                     __end_of_SendService:	
  3582  050F                     __ptext1074:	
  3583 ;; =============== function _Reset ends ============
  3584                           
  3585                           
  3586 ;; *************** function _putch *****************
  3587 ;; Defined at:
  3588 ;;		line 7 in file "../usart.c"
  3589 ;; Parameters:    Size  Location     Type
  3590 ;;  byte            1    wreg     unsigned char 
  3591 ;; Auto vars:     Size  Location     Type
  3592 ;;  byte            1    0[BANK0 ] unsigned char 
  3593 ;; Return value:  Size  Location     Type
  3594 ;;		None               void
  3595 ;; Registers used:
  3596 ;;		wreg
  3597 ;; Tracked objects:
  3598 ;;		On entry : 60/0
  3599 ;;		On exit  : 60/0
  3600 ;;		Unchanged: FFF9F/0
  3601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3602 ;;      Params:         0       0       0       0       0
  3603 ;;      Locals:         0       1       0       0       0
  3604 ;;      Temps:          0       0       0       0       0
  3605 ;;      Totals:         0       1       0       0       0
  3606 ;;Total ram usage:        1 bytes
  3607 ;; Hardware stack levels used:    1
  3608 ;; Hardware stack levels required when called:    2
  3609 ;; This function calls:
  3610 ;;		Nothing
  3611 ;; This function is called by:
  3612 ;;		_SendService
  3613 ;; This function uses a non-reentrant model
  3614 ;;
  3615  050F                     _putch:	
  3616                           
  3617                           ; Regs used in _putch: [wreg]
  3618                           ;putch@byte stored from wreg
  3619  050F  00C5               	movwf	putch@byte
  3620  0510                     l1402:	
  3621                           ;usart.c: 9: while(!TXIF)
  3622                           
  3623  0510  1E0C               	btfss	12,4
  3624  0511  2D10               	goto	l1402
  3625                           
  3626                           ;usart.c: 11: TXREG = byte;
  3627  0512  0845               	movf	putch@byte,w
  3628  0513  0099               	movwf	25	;volatile
  3629  0514  0008               	return
  3630  0515                     __end_of_putch:	
  3631                           
  3632                           	psect	text1077
  3633  0556                     __ptext1077:	
  3634 ;; =============== function _WriteEE ends ============
  3635                           
  3636                           
  3637 ;; *************** function _AutoAdjustGain *****************
  3638 ;; Defined at:
  3639 ;;		line 146 in file "../Main.c"
  3640 ;; Parameters:    Size  Location     Type
  3641 ;;		None
  3642 ;; Auto vars:     Size  Location     Type
  3643 ;;		None
  3644 ;; Return value:  Size  Location     Type
  3645 ;;		None               void
  3646 ;; Registers used:
  3647 ;;		None
  3648 ;; Tracked objects:
  3649 ;;		On entry : 60/20
  3650 ;;		On exit  : 60/20
  3651 ;;		Unchanged: FFFFFF9F/0
  3652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3653 ;;      Params:         0       0       0       0       0
  3654 ;;      Locals:         0       0       0       0       0
  3655 ;;      Temps:          0       0       0       0       0
  3656 ;;      Totals:         0       0       0       0       0
  3657 ;;Total ram usage:        0 bytes
  3658 ;; Hardware stack levels used:    1
  3659 ;; Hardware stack levels required when called:    2
  3660 ;; This function calls:
  3661 ;;		Nothing
  3662 ;; This function is called by:
  3663 ;;		_main
  3664 ;; This function uses a non-reentrant model
  3665 ;;
  3666  0556                     _AutoAdjustGain:	
  3667                           
  3668                           ; Regs used in _AutoAdjustGain: []
  3669  0556  0008               	return
  3670  0557                     __end_of_AutoAdjustGain:	
  3671                           
  3672                           	psect	text1078
  3673  0515                     __ptext1078:	
  3674 ;; =============== function _AutoAdjustGain ends ============
  3675                           
  3676                           
  3677 ;; *************** function _ResetUart *****************
  3678 ;; Defined at:
  3679 ;;		line 104 in file "../Main.c"
  3680 ;; Parameters:    Size  Location     Type
  3681 ;;		None
  3682 ;; Auto vars:     Size  Location     Type
  3683 ;;		None
  3684 ;; Return value:  Size  Location     Type
  3685 ;;		None               void
  3686 ;; Registers used:
  3687 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3688 ;; Tracked objects:
  3689 ;;		On entry : 60/0
  3690 ;;		On exit  : 60/0
  3691 ;;		Unchanged: FFE9F/0
  3692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3693 ;;      Params:         0       0       0       0       0
  3694 ;;      Locals:         0       0       0       0       0
  3695 ;;      Temps:          0       0       0       0       0
  3696 ;;      Totals:         0       0       0       0       0
  3697 ;;Total ram usage:        0 bytes
  3698 ;; Hardware stack levels used:    1
  3699 ;; Hardware stack levels required when called:    2
  3700 ;; This function calls:
  3701 ;;		Nothing
  3702 ;; This function is called by:
  3703 ;;		_main
  3704 ;; This function uses a non-reentrant model
  3705 ;;
  3706  0515                     _ResetUart:	
  3707                           
  3708                           ;Main.c: 105: static unsigned char i;
  3709                           ;Main.c: 106: rcvCommand = 0x00;
  3710                           
  3711                           ; Regs used in _ResetUart: [wreg-fsr0h+status,2+status,0]
  3712  0515  01B8               	clrf	_rcvCommand
  3713                           
  3714                           ;Main.c: 107: rcvLength = 0x00;
  3715  0516  01B9               	clrf	_rcvLength
  3716                           
  3717                           ;Main.c: 108: rcvCount = 0x00;
  3718  0517  01F9               	clrf	_rcvCount
  3719                           
  3720                           ;Main.c: 109: for(i=0; i < 8; i++){rcvData[i] = 0x00;}
  3721  0518  01F7               	clrf	ResetUart@i
  3722  0519                     l5761:	
  3723  0519  3008               	movlw	8
  3724  051A  0277               	subwf	ResetUart@i,w
  3725  051B  1803               	btfsc	3,0
  3726  051C  2D24               	goto	l5771
  3727  051D  0877               	movf	ResetUart@i,w
  3728  051E  3E20               	addlw	_rcvData& (0+255)
  3729  051F  0084               	movwf	4
  3730  0520  1383               	bcf	3,7	;select IRP bank0
  3731  0521  0180               	clrf	0
  3732  0522  0AF7               	incf	ResetUart@i,f
  3733  0523  2D19               	goto	l5761
  3734  0524                     l5771:	
  3735                           
  3736                           ;Main.c: 110: rcvCRC = 0x00;
  3737  0524  01F8               	clrf	_rcvCRC
  3738                           
  3739                           ;Main.c: 111: rcvStartOk = 0;
  3740  0525  12F0               	bcf	_rcvStartOk/(0+8),_rcvStartOk& (0+7)
  3741                           
  3742                           ;Main.c: 112: rcvAddrOk = 0;
  3743  0526  1070               	bcf	_rcvAddrOk/(0+8),_rcvAddrOk& (0+7)
  3744                           
  3745                           ;Main.c: 113: rcvCommandOk = 0;
  3746  0527  1170               	bcf	_rcvCommandOk/(0+8),_rcvCommandOk& (0+7)
  3747                           
  3748                           ;Main.c: 114: rcvLengthOk = 0;
  3749  0528  1270               	bcf	_rcvLengthOk/(0+8),_rcvLengthOk& (0+7)
  3750                           
  3751                           ;Main.c: 115: rcvDataOk = 0;
  3752  0529  11F0               	bcf	_rcvDataOk/(0+8),_rcvDataOk& (0+7)
  3753                           
  3754                           ;Main.c: 116: rcvCRCOk = 0;
  3755  052A  10F0               	bcf	_rcvCRCOk/(0+8),_rcvCRCOk& (0+7)
  3756                           
  3757                           ;Main.c: 117: rcvTerminalOk = 0;
  3758  052B  1370               	bcf	_rcvTerminalOk/(0+8),_rcvTerminalOk& (0+7)
  3759  052C  0008               	return
  3760  052D                     __end_of_ResetUart:	
  3761                           
  3762                           	psect	text1079
  3763  053C                     __ptext1079:	
  3764 ;; =============== function _ResetUart ends ============
  3765                           
  3766                           
  3767 ;; *************** function _Delay *****************
  3768 ;; Defined at:
  3769 ;;		line 99 in file "../Main.c"
  3770 ;; Parameters:    Size  Location     Type
  3771 ;;  t               2    0[BANK0 ] unsigned int 
  3772 ;; Auto vars:     Size  Location     Type
  3773 ;;		None
  3774 ;; Return value:  Size  Location     Type
  3775 ;;		None               void
  3776 ;; Registers used:
  3777 ;;		wreg, status,2, status,0
  3778 ;; Tracked objects:
  3779 ;;		On entry : 60/0
  3780 ;;		On exit  : 60/0
  3781 ;;		Unchanged: FFF9F/0
  3782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3783 ;;      Params:         0       2       0       0       0
  3784 ;;      Locals:         0       0       0       0       0
  3785 ;;      Temps:          0       0       0       0       0
  3786 ;;      Totals:         0       2       0       0       0
  3787 ;;Total ram usage:        2 bytes
  3788 ;; Hardware stack levels used:    1
  3789 ;; Hardware stack levels required when called:    2
  3790 ;; This function calls:
  3791 ;;		Nothing
  3792 ;; This function is called by:
  3793 ;;		_main
  3794 ;; This function uses a non-reentrant model
  3795 ;;
  3796  053C                     _Delay:	
  3797                           
  3798                           ;Main.c: 100: static unsigned int k;
  3799                           ;Main.c: 101: for(k = 0; k < t; k++);
  3800                           
  3801                           ; Regs used in _Delay: [wreg+status,2+status,0]
  3802  053C  01A8               	clrf	Delay@k
  3803  053D  01A9               	clrf	Delay@k+1
  3804  053E                     l5757:	
  3805  053E  0846               	movf	Delay@t+1,w
  3806  053F  0229               	subwf	Delay@k+1,w
  3807  0540  1D03               	skipz
  3808  0541  2D44               	goto	u1625
  3809  0542  0845               	movf	Delay@t,w
  3810  0543  0228               	subwf	Delay@k,w
  3811  0544                     u1625:	
  3812  0544  1803               	btfsc	3,0
  3813  0545  0008               	return
  3814  0546  0AA8               	incf	Delay@k,f
  3815  0547  1903               	skipnz
  3816  0548  0AA9               	incf	Delay@k+1,f
  3817  0549  2D3E               	goto	l5757
  3818  054A                     __end_of_Delay:	
  3819                           
  3820                           	psect	text1080
  3821  0552                     __ptext1080:	
  3822 ;; =============== function _Delay ends ============
  3823                           
  3824                           
  3825 ;; *************** function _RelayOff *****************
  3826 ;; Defined at:
  3827 ;;		line 96 in file "../Main.c"
  3828 ;; Parameters:    Size  Location     Type
  3829 ;;		None
  3830 ;; Auto vars:     Size  Location     Type
  3831 ;;		None
  3832 ;; Return value:  Size  Location     Type
  3833 ;;		None               void
  3834 ;; Registers used:
  3835 ;;		None
  3836 ;; Tracked objects:
  3837 ;;		On entry : 60/0
  3838 ;;		On exit  : 60/0
  3839 ;;		Unchanged: FFF9F/0
  3840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3841 ;;      Params:         0       0       0       0       0
  3842 ;;      Locals:         0       0       0       0       0
  3843 ;;      Temps:          0       0       0       0       0
  3844 ;;      Totals:         0       0       0       0       0
  3845 ;;Total ram usage:        0 bytes
  3846 ;; Hardware stack levels used:    1
  3847 ;; Hardware stack levels required when called:    2
  3848 ;; This function calls:
  3849 ;;		Nothing
  3850 ;; This function is called by:
  3851 ;;		_DataHandle
  3852 ;; This function uses a non-reentrant model
  3853 ;;
  3854  0552                     _RelayOff:	
  3855                           
  3856                           ; Regs used in _RelayOff: []
  3857  0552  1006               	bcf	6,0
  3858  0553  0008               	return
  3859  0554                     __end_of_RelayOff:	
  3860                           
  3861                           	psect	text1081
  3862  0554                     __ptext1081:	
  3863 ;; =============== function _RelayOff ends ============
  3864                           
  3865                           
  3866 ;; *************** function _RelayOn *****************
  3867 ;; Defined at:
  3868 ;;		line 95 in file "../Main.c"
  3869 ;; Parameters:    Size  Location     Type
  3870 ;;		None
  3871 ;; Auto vars:     Size  Location     Type
  3872 ;;		None
  3873 ;; Return value:  Size  Location     Type
  3874 ;;		None               void
  3875 ;; Registers used:
  3876 ;;		None
  3877 ;; Tracked objects:
  3878 ;;		On entry : 60/0
  3879 ;;		On exit  : 60/0
  3880 ;;		Unchanged: FFF9F/0
  3881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3882 ;;      Params:         0       0       0       0       0
  3883 ;;      Locals:         0       0       0       0       0
  3884 ;;      Temps:          0       0       0       0       0
  3885 ;;      Totals:         0       0       0       0       0
  3886 ;;Total ram usage:        0 bytes
  3887 ;; Hardware stack levels used:    1
  3888 ;; Hardware stack levels required when called:    2
  3889 ;; This function calls:
  3890 ;;		Nothing
  3891 ;; This function is called by:
  3892 ;;		_DataHandle
  3893 ;; This function uses a non-reentrant model
  3894 ;;
  3895  0554                     _RelayOn:	
  3896                           
  3897                           ; Regs used in _RelayOn: []
  3898  0554  1406               	bsf	6,0
  3899  0555  0008               	return
  3900  0556                     __end_of_RelayOn:	
  3901                           
  3902                           	psect	text1082
  3903  03E3                     __ptext1082:	
  3904 ;; =============== function _RelayOn ends ============
  3905                           
  3906                           
  3907 ;; *************** function _isr *****************
  3908 ;; Defined at:
  3909 ;;		line 345 in file "../Main.c"
  3910 ;; Parameters:    Size  Location     Type
  3911 ;;		None
  3912 ;; Auto vars:     Size  Location     Type
  3913 ;;		None
  3914 ;; Return value:  Size  Location     Type
  3915 ;;		None               void
  3916 ;; Registers used:
  3917 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3918 ;; Tracked objects:
  3919 ;;		On entry : 0/0
  3920 ;;		On exit  : 0/0
  3921 ;;		Unchanged: FFE00/0
  3922 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3923 ;;      Params:         0       0       0       0       0
  3924 ;;      Locals:         0       0       0       0       0
  3925 ;;      Temps:          6       0       0       0       0
  3926 ;;      Totals:         6       0       0       0       0
  3927 ;;Total ram usage:        6 bytes
  3928 ;; Hardware stack levels used:    1
  3929 ;; Hardware stack levels required when called:    1
  3930 ;; This function calls:
  3931 ;;		i1_ResetUart
  3932 ;; This function is called by:
  3933 ;;		Interrupt level 1
  3934 ;; This function uses a non-reentrant model
  3935 ;;
  3936  03E3                     _isr:	
  3937                           
  3938                           ;Main.c: 346: if(RCIF){
  3939  03E3  1283               	bcf	3,5	;RP0=0, select bank0
  3940  03E4  1303               	bcf	3,6	;RP1=0, select bank0
  3941  03E5  1E8C               	btfss	12,5
  3942  03E6  2C4C               	goto	i1l5187
  3943                           
  3944                           ;Main.c: 347: if(rcvStartOk == 0){
  3945  03E7  1AF0               	btfsc	_rcvStartOk/(0+8),_rcvStartOk& (0+7)
  3946  03E8  2BF6               	goto	i1l772
  3947                           
  3948                           ;Main.c: 348: if(RCREG == 0x40){
  3949  03E9  081A               	movf	26,w	;volatile
  3950  03EA  3A40               	xorlw	64
  3951  03EB  1D03               	skipz
  3952  03EC  2BF3               	goto	i1l5137
  3953                           
  3954                           ;Main.c: 349: ResetUart();
  3955  03ED  2459  118A         	fcall	i1_ResetUart
  3956                           
  3957                           ;Main.c: 350: rcvCRC = 0x40;
  3958  03EF  3040               	movlw	64
  3959  03F0  00F8               	movwf	_rcvCRC
  3960                           
  3961                           ;Main.c: 351: rcvStartOk = 1;
  3962  03F1  16F0               	bsf	_rcvStartOk/(0+8),_rcvStartOk& (0+7)
  3963                           
  3964                           ;Main.c: 352: }else{
  3965  03F2  2C50               	goto	i1l801
  3966  03F3                     i1l5137:	
  3967                           
  3968                           ;Main.c: 353: ResetUart();
  3969  03F3  2459  118A         	fcall	i1_ResetUart
  3970  03F5  2C50               	goto	i1l801
  3971  03F6                     i1l772:	
  3972  03F6  1870               	btfsc	_rcvAddrOk/(0+8),_rcvAddrOk& (0+7)
  3973  03F7  2C00               	goto	i1l776
  3974                           
  3975                           ;Main.c: 356: if(RCREG == unitAddr){
  3976  03F8  081A               	movf	26,w	;volatile
  3977  03F9  0644               	xorwf	_unitAddr,w
  3978  03FA  1D03               	skipz
  3979  03FB  2BF3               	goto	i1l5137
  3980                           
  3981                           ;Main.c: 357: rcvCRC ^= unitAddr;
  3982  03FC  0844               	movf	_unitAddr,w
  3983  03FD  06F8               	xorwf	_rcvCRC,f
  3984                           
  3985                           ;Main.c: 358: rcvAddrOk = 1;
  3986  03FE  1470               	bsf	_rcvAddrOk/(0+8),_rcvAddrOk& (0+7)
  3987                           
  3988                           ;Main.c: 359: }else{
  3989  03FF  2C50               	goto	i1l801
  3990  0400                     i1l776:	
  3991  0400  1970               	btfsc	_rcvCommandOk/(0+8),_rcvCommandOk& (0+7)
  3992  0401  2C07               	goto	i1l780
  3993                           
  3994                           ;Main.c: 363: rcvCommand = RCREG;
  3995  0402  081A               	movf	26,w	;volatile
  3996  0403  00B8               	movwf	_rcvCommand
  3997                           
  3998                           ;Main.c: 364: rcvCRC ^= rcvCommand;
  3999  0404  06F8               	xorwf	_rcvCRC,f
  4000                           
  4001                           ;Main.c: 365: rcvCommandOk = 1;
  4002  0405  1570               	bsf	_rcvCommandOk/(0+8),_rcvCommandOk& (0+7)
  4003                           
  4004                           ;Main.c: 366: }else if(!rcvLengthOk){
  4005  0406  2C50               	goto	i1l801
  4006  0407                     i1l780:	
  4007  0407  1A70               	btfsc	_rcvLengthOk/(0+8),_rcvLengthOk& (0+7)
  4008  0408  2C17               	goto	i1l782
  4009                           
  4010                           ;Main.c: 367: rcvLength = RCREG;
  4011  0409  081A               	movf	26,w	;volatile
  4012  040A  00B9               	movwf	_rcvLength
  4013                           
  4014                           ;Main.c: 368: rcvCRC ^= rcvLength;
  4015  040B  06F8               	xorwf	_rcvCRC,f
  4016                           
  4017                           ;Main.c: 369: if(rcvLength == 0){
  4018  040C  08B9               	movf	_rcvLength,f
  4019  040D  1D03               	skipz
  4020  040E  2C11               	goto	i1l5159
  4021                           
  4022                           ;Main.c: 370: rcvDataOk = 1;
  4023  040F  15F0               	bsf	_rcvDataOk/(0+8),_rcvDataOk& (0+7)
  4024  0410  2C15               	goto	i1l5161
  4025  0411                     i1l5159:	
  4026                           ;Main.c: 372: }else if(rcvLength <= 8){
  4027                           
  4028                           ;Main.c: 371: rcvLengthOk = 1;
  4029                           
  4030  0411  3009               	movlw	9
  4031  0412  0239               	subwf	_rcvLength,w
  4032  0413  1803               	skipnc
  4033  0414  2BF3               	goto	i1l5137
  4034  0415                     i1l5161:	
  4035                           
  4036                           ;Main.c: 373: rcvLengthOk = 1;
  4037  0415  1670               	bsf	_rcvLengthOk/(0+8),_rcvLengthOk& (0+7)
  4038                           
  4039                           ;Main.c: 374: }else{
  4040  0416  2C50               	goto	i1l801
  4041  0417                     i1l782:	
  4042  0417  19F0               	btfsc	_rcvDataOk/(0+8),_rcvDataOk& (0+7)
  4043  0418  2C39               	goto	i1l788
  4044                           
  4045                           ;Main.c: 378: rcvData[rcvCount] = RCREG;
  4046  0419  0879               	movf	_rcvCount,w
  4047  041A  3E20               	addlw	_rcvData& (0+255)
  4048  041B  0084               	movwf	4
  4049  041C  081A               	movf	26,w	;volatile
  4050  041D  1383               	bcf	3,7	;select IRP bank0
  4051  041E  0080               	movwf	0
  4052                           
  4053                           ;Main.c: 379: rcvCRC ^= rcvData[rcvCount];
  4054  041F  0879               	movf	_rcvCount,w
  4055  0420  3E20               	addlw	_rcvData& (0+255)
  4056  0421  0084               	movwf	4
  4057  0422  0800               	movf	0,w
  4058  0423  06F8               	xorwf	_rcvCRC,f
  4059                           
  4060                           ;Main.c: 380: if(rcvCount + 1 >= rcvLength){
  4061  0424  0879               	movf	_rcvCount,w
  4062  0425  3E01               	addlw	1
  4063  0426  00F1               	movwf	??_isr
  4064  0427  3000               	movlw	0
  4065  0428  1803               	skipnc
  4066  0429  3001               	movlw	1
  4067  042A  00F2               	movwf	??_isr+1
  4068  042B  3A80               	xorlw	128
  4069  042C  00F3               	movwf	??_isr+2
  4070  042D  3080               	movlw	128
  4071  042E  0273               	subwf	??_isr+2,w
  4072  042F  1D03               	skipz
  4073  0430  2C33               	goto	u98_25
  4074  0431  0839               	movf	_rcvLength,w
  4075  0432  0271               	subwf	??_isr,w
  4076  0433                     u98_25:	
  4077  0433  1C03               	skipc
  4078  0434  2C37               	goto	i1l5171
  4079                           
  4080                           ;Main.c: 381: rcvDataOk = 1;
  4081  0435  15F0               	bsf	_rcvDataOk/(0+8),_rcvDataOk& (0+7)
  4082                           
  4083                           ;Main.c: 382: }else{
  4084  0436  2C50               	goto	i1l801
  4085  0437                     i1l5171:	
  4086                           
  4087                           ;Main.c: 383: rcvCount += 1;
  4088  0437  0AF9               	incf	_rcvCount,f
  4089  0438  2C50               	goto	i1l801
  4090  0439                     i1l788:	
  4091  0439  18F0               	btfsc	_rcvCRCOk/(0+8),_rcvCRCOk& (0+7)
  4092  043A  2C41               	goto	i1l792
  4093                           
  4094                           ;Main.c: 386: if(rcvCRC == RCREG){
  4095  043B  0878               	movf	_rcvCRC,w
  4096  043C  061A               	xorwf	26,w	;volatile
  4097  043D  1D03               	skipz
  4098  043E  2BF3               	goto	i1l5137
  4099                           
  4100                           ;Main.c: 387: rcvCRCOk = 1;
  4101  043F  14F0               	bsf	_rcvCRCOk/(0+8),_rcvCRCOk& (0+7)
  4102                           
  4103                           ;Main.c: 388: }else{
  4104  0440  2C50               	goto	i1l801
  4105  0441                     i1l792:	
  4106  0441  1B70               	btfsc	_rcvTerminalOk/(0+8),_rcvTerminalOk& (0+7)
  4107  0442  2C49               	goto	i1l5185
  4108                           
  4109                           ;Main.c: 392: if(RCREG == 0x0A){
  4110  0443  081A               	movf	26,w	;volatile
  4111  0444  3A0A               	xorlw	10
  4112  0445  1D03               	skipz
  4113  0446  2BF3               	goto	i1l5137
  4114                           
  4115                           ;Main.c: 393: rcvTerminalOk = 1;
  4116  0447  1770               	bsf	_rcvTerminalOk/(0+8),_rcvTerminalOk& (0+7)
  4117                           
  4118                           ;Main.c: 394: }else{
  4119  0448  2C50               	goto	i1l801
  4120  0449                     i1l5185:	
  4121                           
  4122                           ;Main.c: 398: RCREG = RCREG;
  4123  0449  081A               	movf	26,w	;volatile
  4124  044A  009A               	movwf	26	;volatile
  4125  044B  2C50               	goto	i1l801
  4126  044C                     i1l5187:	
  4127                           
  4128                           ;Main.c: 401: PIR1 = 0B00000000;
  4129  044C  018C               	clrf	12	;volatile
  4130                           
  4131                           ;Main.c: 402: PIR2 = 0B00000000;
  4132  044D  018D               	clrf	13	;volatile
  4133                           
  4134                           ;Main.c: 403: INTCON = 0B11000000;
  4135  044E  30C0               	movlw	192
  4136  044F  008B               	movwf	11	;volatile
  4137  0450                     i1l801:	
  4138  0450  0876               	movf	??_isr+5,w
  4139  0451  008A               	movwf	10
  4140  0452  0875               	movf	??_isr+4,w
  4141  0453  0084               	movwf	4
  4142  0454  0E74               	swapf	(??_isr+3)^(0+-128),w
  4143  0455  0083               	movwf	3
  4144  0456  0EFE               	swapf	126,f
  4145  0457  0E7E               	swapf	126,w
  4146  0458  0009               	retfie
  4147  0459                     __end_of_isr:	
  4148  0459                     __ptext1083:	
  4149 ;; =============== function _isr ends ============
  4150                           
  4151                           
  4152 ;; *************** function i1_ResetUart *****************
  4153 ;; Defined at:
  4154 ;;		line 104 in file "../Main.c"
  4155 ;; Parameters:    Size  Location     Type
  4156 ;;		None
  4157 ;; Auto vars:     Size  Location     Type
  4158 ;;		None
  4159 ;; Return value:  Size  Location     Type
  4160 ;;		None               void
  4161 ;; Registers used:
  4162 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4163 ;; Tracked objects:
  4164 ;;		On entry : 0/0
  4165 ;;		On exit  : 60/0
  4166 ;;		Unchanged: FFE9F/0
  4167 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4168 ;;      Params:         0       0       0       0       0
  4169 ;;      Locals:         0       0       0       0       0
  4170 ;;      Temps:          0       0       0       0       0
  4171 ;;      Totals:         0       0       0       0       0
  4172 ;;Total ram usage:        0 bytes
  4173 ;; Hardware stack levels used:    1
  4174 ;; This function calls:
  4175 ;;		Nothing
  4176 ;; This function is called by:
  4177 ;;		_isr
  4178 ;; This function uses a non-reentrant model
  4179 ;;
  4180  0459                     i1_ResetUart:	
  4181                           
  4182                           ;Main.c: 105: static unsigned char i;
  4183                           ;Main.c: 106: rcvCommand = 0x00;
  4184                           
  4185                           ; Regs used in i1_ResetUart: [wreg-fsr0h+status,2+status,0]
  4186  0459  1283               	bcf	3,5	;RP0=0, select bank0
  4187  045A  1303               	bcf	3,6	;RP1=0, select bank0
  4188  045B  01B8               	clrf	_rcvCommand
  4189                           
  4190                           ;Main.c: 107: rcvLength = 0x00;
  4191  045C  01B9               	clrf	_rcvLength
  4192                           
  4193                           ;Main.c: 108: rcvCount = 0x00;
  4194  045D  01F9               	clrf	_rcvCount
  4195                           
  4196                           ;Main.c: 109: for(i=0; i < 8; i++){rcvData[i] = 0x00;}
  4197  045E  01F7               	clrf	ResetUart@i
  4198  045F                     i1l5219:	
  4199  045F  3008               	movlw	8
  4200  0460  0277               	subwf	ResetUart@i,w
  4201  0461  1803               	btfsc	3,0
  4202  0462  2C6A               	goto	i1l5229
  4203  0463  0877               	movf	ResetUart@i,w
  4204  0464  3E20               	addlw	_rcvData& (0+255)
  4205  0465  0084               	movwf	4
  4206  0466  1383               	bcf	3,7	;select IRP bank0
  4207  0467  0180               	clrf	0
  4208  0468  0AF7               	incf	ResetUart@i,f
  4209  0469  2C5F               	goto	i1l5219
  4210  046A                     i1l5229:	
  4211                           
  4212                           ;Main.c: 110: rcvCRC = 0x00;
  4213  046A  01F8               	clrf	_rcvCRC
  4214                           
  4215                           ;Main.c: 111: rcvStartOk = 0;
  4216  046B  12F0               	bcf	_rcvStartOk/(0+8),_rcvStartOk& (0+7)
  4217                           
  4218                           ;Main.c: 112: rcvAddrOk = 0;
  4219  046C  1070               	bcf	_rcvAddrOk/(0+8),_rcvAddrOk& (0+7)
  4220                           
  4221                           ;Main.c: 113: rcvCommandOk = 0;
  4222  046D  1170               	bcf	_rcvCommandOk/(0+8),_rcvCommandOk& (0+7)
  4223                           
  4224                           ;Main.c: 114: rcvLengthOk = 0;
  4225  046E  1270               	bcf	_rcvLengthOk/(0+8),_rcvLengthOk& (0+7)
  4226                           
  4227                           ;Main.c: 115: rcvDataOk = 0;
  4228  046F  11F0               	bcf	_rcvDataOk/(0+8),_rcvDataOk& (0+7)
  4229                           
  4230                           ;Main.c: 116: rcvCRCOk = 0;
  4231  0470  10F0               	bcf	_rcvCRCOk/(0+8),_rcvCRCOk& (0+7)
  4232                           
  4233                           ;Main.c: 117: rcvTerminalOk = 0;
  4234  0471  1370               	bcf	_rcvTerminalOk/(0+8),_rcvTerminalOk& (0+7)
  4235  0472  0008               	return
  4236  0473                     __end_ofi1_ResetUart:	
  4237                           
  4238                           	psect	intentry
  4239  0004                     __pintentry:	
  4240                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4241                           
  4242  0004                     interrupt_function:	
  4243  007E                     saved_w	set	btemp
  4244  0004  00FE               	movwf	btemp
  4245  0005  0E03               	swapf	3,w
  4246  0006  00F4               	movwf	??_isr+3
  4247  0007  0804               	movf	4,w
  4248  0008  00F5               	movwf	??_isr+4
  4249  0009  080A               	movf	10,w
  4250  000A  00F6               	movwf	??_isr+5
  4251  000B  118A  2BE3         	ljmp	_isr
  4252                           
  4253                           	psect	text1084
  4254  0000                     __ptext1084:	
  4255 ;; =============== function i1_ResetUart ends ============
  4256                           
  4257  007E                     btemp	set	126	;btemp
  4258  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Thu Jan 18 16:53:29 2018

             ?_i2c_WaitForSCL 0071                            _RD 0C60                            _WR 0C61  
                          fsr 0004                 ??_i2c_GetByte 0049                    ReadEE@addr 0045  
            i2c_SendByte@byte 0047                           l711 0000                           l705 0000  
                         l714 0000                           l708 0000                           l690 0000  
                         l762 04B4                           l758 0000                           l687 0000  
                         l698 0000                           _CKP 00A4                           _RA0 0028  
                         _RB0 0030                           _RB1 0031                           _RB4 0034  
                         _PR2 0092                           _H_L 002E                           _H_M 002F  
                         _H_S 0030                           _L_L 0031                           _L_M 0032  
                         _L_S 0033                           _T_L 0034                           _T_M 0036  
                         _isr 03E3                           fsr0 0004                           indf 0000  
     __size_of_DS18B20Convert 0019       __size_of_DS18B20Initial 001F                 ??_i2c_Restart 0045  
                  _DataHandle 000F                 ??_i2c_PutByte 0049  __size_of_i2c_SendAcknowledge 001A  
                  ReadSN@data 0048                          l2021 0000                          l2024 0000  
                        l1402 0510                          l2050 0000                          l2042 02A8  
                        l2027 025B                          l1405 0000                          l2029 027F  
                        l2048 02D9                          l2701 03A2                          l2702 03A6  
                        l2710 0345                          l2720 0000                          l2712 0361  
                        l6001 0074                          l3362 0000                          l3355 016A  
                        l2707 0000                          l6003 0000                          l2716 0375  
                        l6101 0000                          l6005 0078                          l3366 0000  
                        l3374 0000                          l3359 0000                          l2719 0371  
                        l6111 0000                          l6103 0000                          l6031 004B  
                        l6023 003D                          l6015 002F                          l6007 002D  
                        l3369 0000                          l2729 0000                          l6113 0000  
                        l6105 0000                          l6201 0000                          l6107 0000  
                        l6115 0121                          l6131 032C                          l6203 0000  
                        l6109 0000                          l6133 0335                          l6125 0000  
                        l6141 02F1                          l6205 0000                          l6301 0000  
                        l6119 0000                          l6055 006D                          l6047 0065  
                        l6039 0058                          l6143 02FC                          l6135 0000  
                        l6207 0000                          l6223 0000                          l6311 0000  
                        l6303 0000                          l6081 0000                          l6073 00BF  
                        l6065 00A3                          l6145 0000                          l6161 030A  
                        l6241 0000                          l6225 0000                          l6217 0000  
                        l6321 04BF                          l6313 0000                          l6305 0000  
                        l2698 0391                          l6083 0000                          l6163 0315  
                        l6155 0000                          l6243 0000                          l6227 0000  
                        l6331 0000                          l6323 0000                          l6315 04B0  
                        l6307 0000                          l6093 0000                          l6085 0000  
                        l6077 00D8                          l6069 00B2                          l6165 0321  
                        l6181 0000                          l6173 0000                          l6237 0000  
                        l6229 0000                          l6341 0000                          l6333 0000  
                        l6309 0000                          l6095 00F9                          l6087 0000  
                        l6191 0000                          l6167 0000                          l6239 0000  
                        l6271 0000                          l6335 0000                          l6327 0000  
                        l5801 0000                          l6089 00EB                          l6193 0000  
                        l6177 0281                          l6249 0000                          l6273 0000  
                        l6329 0000                          l6281 0000                          l5803 019B  
                        l6179 0000                          l6267 0000                          l6259 0000  
                        l6339 0000                          l6291 0000                          l6283 0000  
                        l6275 0000                          l5821 0000                          l5813 0000  
                        l5901 0000                          l6189 0000                          l6293 0000  
                        l6285 0000                          l6277 0000                          l5751 0000  
                        l5815 0000                          l5911 0000                          l5903 0000  
                        l6199 01A2                          l6295 0000                          l6287 0000  
                        l6279 0000                          l5753 0000                          l5761 0519  
                        l5809 0000                          l5833 03AB                          l5825 0397  
                        l5841 0000                          l5913 0000                          l5905 0000  
                        l6297 0000                          l6289 0000                          l5771 0524  
                        l5835 03B6                          l5819 0386                          l5843 0000  
                        l5851 022C                          l5915 04F8                          l5907 0000  
                        l5923 0000                          l6299 0000                          ?_isr 0071  
                        l5749 0000                          l5757 053E                          l5781 0000  
                        l5773 0000                          l5829 03A8                          l5845 0000  
                        l5861 0000                          l5853 0000                          l5917 050A  
                        l5941 0000                          l5933 0000                          l5783 0000  
                        l5775 0000                          l5767 0000                          l5759 0000  
                        l5791 0000                          l5847 0000                          l5839 0000  
                        l5863 0000                          l5855 0000                          l5871 0000  
                        l5919 0000                          l5935 0000                          l5785 0000  
                        l5777 0000                          l5793 0000                          l5857 0000  
                        l5881 0000                          l5873 0000                          l5937 0000  
                        l5953 0000                          l5945 0000                          l5779 0000  
                        l5795 017F                          l5859 0000                          l5883 0000  
                        l5875 0000                          l5867 0000                          l5891 0185  
                        l5939 02DB                          l5963 0368                          l5971 0000  
                        l5789 0000                          l5797 0000                          l5877 0000  
                        l5869 0000                          l5893 0000                          l5885 0000  
                        l5965 0000                          l5957 0358                          l5799 0000  
                        l5879 0000                          l5895 0000                          l5967 0000  
                        l5959 0000                          l5983 03D3                          l5897 0000  
                        l5985 03DC                          l5969 0000                          l5993 0000  
                        l5899 0000                          l5987 0000                          l5997 0027  
                        _CREN 00C4                          u2110 026D                          u2104 0264  
                        u2105 0262                          u2124 0270                          u2134 0277  
                        u2135 0275                          u2307 0284                          u2317 0290  
                        u2407 0216                          u2327 02DE                          u1625 0544  
                        u2417 021E                          u2337 02E6                          u2427 0226  
                        u2347 029F                          u2267 02AD                          u2357 0231  
                        u2277 02BB                          u2367 0239                          u2287 01A8  
                        _PIE1 008C                          u2377 0241                          u1905 0040  
                        u2297 01B0                          u2387 0249                          u2397 0251  
                        u1885 0032                          _RCIF 0065                          _PIR1 000C  
                        _PIR2 000D                          _OERR 00C1                          _WREN 0C62  
                        _TXIF 0064                ??_i2c_ReadByte 0046              __end_of_I2CReadH 01F9  
            __end_of_I2CReadL 01DD                          _main 0473                          btemp 007E  
              ??_i2c_SendByte 0046                          start 000D              ??_AutoAdjustGain 0045  
             __end_of_RelayOn 0556                         ??_isr 0071                         ?_main 0051  
                       _EEADR 010D                         _CFG_H 002C                         _CFG_L 002D  
                       _EEPGD 0C67               __end_of_WriteEE 0183                         _ANSEL 009B  
                       _T1CON 0010               __end_of_WriteSN 0169                         _T2CON 0012  
                       i1l705 0000                         i1l801 0450                         i1l780 0407  
                       i1l772 03F6                         i1l782 0417                         i1l792 0441  
                       i1l776 0400                         i1l788 0439                         _RCREG 001A  
               i2c_ReadByte@i 0048                         _RCSTA 0018                         _SPBRG 0099  
                       _PORTA 0005                         _PORTB 0006                         _TRISA 0085  
                       _TRISB 0086                         _SSPEN 00A5                         _TXREG 0019  
                       u98_25 0433                         _TXSTA 0098                         _Delay 053C  
                       _T_Lsb 0035                         _T_Msb 0037                         _Reset 037F  
         __end_of_i2c_GetByte 0211                   ReadByte@buf 0047               i2c_GetByte@byte 004A  
                       _putch 050F               i2c_GetByte@more 0049                __pbitbssCOMMON 0380  
                       pclath 000A           __end_of_i2c_Restart 022C                         status 0003  
         _i2c_ReadAcknowledge 01A2           __end_of_i2c_PutByte 0201                         wtemp0 007E  
               i2c_SendByte@i 0048                  __end_of_main 04E6              __end_of_i2c_Stop 0258  
            __end_of_ReadByte 03E3      __end_of_DS18B20ReadFlash 0324                 ??_SendService 0046  
        ?_i2c_ReadAcknowledge 0071                        ??_main 0055              __end_of_RelayOff 0554  
                      ?_Delay 0045                    ResetUart@i 0077                        ?_Reset 0071  
                 ?_DataHandle 0071                        _ADCON0 001F                        _ADCON1 009F  
                      _EEDATA 010C                        _CCPR1H 0016                        _CCPR1L 0015  
                      _EECON2 018D                        ?_putch 0071                        i1l5133 0000  
                      i1l5125 0000                        i1l5231 0000                        i1l5151 0000  
                      i1l5143 0000                        i1l5135 0000                        i1l5241 0000  
                      i1l5233 0000                        i1l5225 0000                        i1l5217 0000  
                      i1l5161 0415                        i1l5137 03F3                        i1l5243 0000  
                      i1l5235 0000                        i1l5219 045F                        i1l5171 0437  
                      i1l5155 0000                        i1l5237 0000                        i1l5229 046A  
                      i1l5149 0000                        i1l5239 0000                        i1l5167 0000  
                      i1l5159 0411                        i1l5185 0449                        i1l5187 044C  
                      i1l5189 0000                        Delay@k 0028                        Delay@t 0045  
                      _INTCON 000B                        _TRISA0 0428                        _TRISB1 0431  
                      _TRISB2 0432                        _TRISB4 0434                        _TRISB5 0435  
                      _SSPCON 0014        i2c_ReadAcknowledge@ack 0047                        _ReadEE 0194  
                      _ReadSN 0183                     ??_RelayOn 0045                        Reset@i 0046  
                      Reset@k 0045                     ??_WriteEE 0046                     ??_WriteSN 004B  
                      _rcvCRC 0078                        _sndCRC 007A            __size_of_ResetUart 0018  
       ??_i2c_ReadAcknowledge 0046                   _i2c_GetByte 0201          __end_of_i2c_ReadByte 02CF  
                      clrloop 054B                _DS18B20Convert 02E9                     ?_I2CReadH 0071  
                   ?_I2CReadL 0071                _DS18B20Initial 0324          __end_of_i2c_SendByte 029A  
                      saved_w 007E           __end_of_SendService 050F                   _i2c_Restart 0211  
                 _i2c_PutByte 01F9                  ?i1_ResetUart 0071            __size_of_WriteByte 003C  
            ??_i2c_WaitForSCL 0045                 __end_of_Delay 054A                __pcstackCOMMON 0071  
               __end_of_Reset 03B8           _i2c_SendAcknowledge 02CF           __size_of_DataHandle 011C  
               __end_of_putch 0515        __end_of_DS18B20Convert 0302        __end_of_DS18B20Initial 0343  
                  ??_I2CReadH 004C                    ??_I2CReadL 004C                       ??_Delay 0047  
                     ??_Reset 0045          ?_i2c_SendAcknowledge 0071                       ??_putch 0045  
                  __pbssBANK0 0020                     ?_i2c_Stop 0071                  WriteByte@dat 0045  
           __end_of_ResetUart 052D                     ?_ReadByte 0071                     ?_RelayOff 0071  
                     ?_ReadEE 0071                    WriteByte@i 0047                    WriteByte@j 0046  
                     ?_ReadSN 0071                    __pmaintext 0473                    __pintentry 0004  
                     _CCP1CON 0017                    __ptext1060 0302                    __ptext1052 0000  
                  __ptext1061 02E9                    __ptext1053 01C1                    __ptext1070 012B  
                  __ptext1062 0324                    __ptext1054 01DD                    __ptext1071 022C  
                  __ptext1063 000F                    __ptext1055 0201                    __ptext1080 0552  
                  __ptext1072 0211                    __ptext1064 03B8                    __ptext1056 01F9  
                  __ptext1081 0554                    __ptext1073 037F                    __ptext1065 0343  
                  __ptext1057 02A6                    __ptext1082 03E3                    __ptext1074 050F  
                  __ptext1066 02CF                    __ptext1058 01A2                    __ptext1083 0459  
                  __ptext1075 0194                    __ptext1067 029A                    __ptext1059 0258  
                  __ptext1084 0000                    __ptext1076 0169                    __ptext1068 04E6  
                  __ptext1077 0556                    __ptext1069 0183                    __ptext1078 0515  
                  __ptext1079 053C               ?_DS18B20Convert 0071                   _SendService 04E6  
             ?_DS18B20Initial 0071             __end_of_WriteByte 037F         ??_i2c_SendAcknowledge 0045  
                     ReadSN@i 0049                    ??_i2c_Stop 0045                    ??_ReadByte 0045  
                  ??_RelayOff 0045                       _RelayOn 0554               __size_of_ReadEE 000E  
             __size_of_ReadSN 0011         __size_of_i2c_ReadByte 0029                       _WriteEE 0169  
                     _WriteSN 012B             ?_DS18B20ReadFlash 0071         __size_of_i2c_SendByte 0042  
                     _idleCnt 002A            ??_DS18B20ReadFlash 0049                  __size_of_isr 0076  
                     _rcvData 0020                    _rcvCommand 0038                       _sndData 003C  
                ??_DataHandle 004B          end_of_initialization 0539                    _sndCommand 003A  
                  _rcvStartOk 0385     i2c_SendAcknowledge@status 0046          __size_ofi1_ResetUart 001A  
                _i2c_ReadByte 02A6                  _i2c_SendByte 0258            __end_of_DataHandle 012B  
                ?_i2c_GetByte 0071              DataHandle@snNumH 004D              DataHandle@snNumL 004F  
     __size_of_AutoAdjustGain 0001             __size_of_I2CReadH 001C             __size_of_I2CReadL 001C  
                ?_i2c_Restart 0071                  ?_i2c_PutByte 0071                     ReadEE@num 0046  
                   ReadByte@i 0045                     ReadByte@j 0048   __end_of_i2c_ReadAcknowledge 01C1  
              __end_of_ReadEE 01A2                __end_of_ReadSN 0194                 _rcvTerminalOk 0386  
         start_initialization 052D                   __end_of_isr 0459             __size_of_i2c_Stop 002C  
           __size_of_ReadByte 002B                      ??_ReadEE 0045                     _ResetUart 0515  
                    ??_ReadSN 0047             __size_of_RelayOff 0002              ??_DS18B20Convert 0049  
            ??_DS18B20Initial 0049                  ?_SendService 0071                   WriteEE@addr 0046  
                 WriteEE@data 0045                   __pbssCOMMON 0077                 __pcstackBANK0 0045  
                   _WriteByte 0343                   WriteSN@numH 0047                   WriteSN@numL 0049  
                  ?_ResetUart 0071                      ?_RelayOn 0071                      ?_WriteEE 0045  
                    ?_WriteSN 0047       __size_of_i2c_WaitForSCL 000C               i2c_PutByte@data 0049  
 __end_of_i2c_SendAcknowledge 02E9                      _I2CReadH 01DD                      _I2CReadL 01C1  
        __size_of_i2c_GetByte 0010                _AutoAdjustGain 0556                __size_of_Delay 000E  
              __size_of_Reset 0039                    ?_WriteByte 0071                     _rcvAddrOk 0380  
                   _rcvDataOk 0383                  _rcvCommandOk 0382                __size_of_putch 0006  
   __size_of_DS18B20ReadFlash 0022          __size_of_i2c_Restart 001B          __size_of_i2c_PutByte 0008  
                   _rcvLength 0039             interrupt_function 0004                     _sndLength 003B  
            i2c_ReadByte@byte 0047        __end_of_AutoAdjustGain 0557                 ??i1_ResetUart 0071  
                    _i2c_Stop 022C                      _ReadByte 03B8                      _RelayOff 0552  
                 ??_ResetUart 0045              __size_of_RelayOn 0002              __size_of_WriteEE 001A  
            __size_of_WriteSN 003E               ?_AutoAdjustGain 0071          __size_of_SendService 0029  
                 ??_WriteByte 0045                      _rcvCRCOk 0381                 __size_of_main 0073  
                    _rcvCount 0079                      _sndCount 007B           __end_ofi1_ResetUart 0473  
                    clear_ram 054A                   _rcvLengthOk 0384                      _unitAddr 0044  
              _i2c_WaitForSCL 029A                      main@argc 0051                      main@argv 0053  
__size_of_i2c_ReadAcknowledge 001F                     putch@byte 0045              _DS18B20ReadFlash 0302  
                    intlevel1 0000        __end_of_i2c_WaitForSCL 02A6             DS18B20ReadFlash@i 0049  
                 i1_ResetUart 0459               DS18B20Convert@i 0049                 ?_i2c_ReadByte 0071  
             DS18B20Initial@i 0049                 ?_i2c_SendByte 0071  
